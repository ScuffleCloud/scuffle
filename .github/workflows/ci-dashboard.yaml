name: ci - dashboard

on:
  workflow_call:
    inputs:
      artifact_name:
        type: string
      deploy_docs:
        type: boolean
      pr_number:
        type: string
        required: true
      commit_sha:
        type: string
        required: true
    secrets:
      build_buddy_token:
        required: true
      vercel_token:
        required: false
      vercel_org_id:
        required: false
      vercel_project_id:
        required: false

defaults:
  run:
    shell: bash

jobs:
  dashboard:
    permissions:
      pull-requests: write
    runs-on: ubicloud-standard-8-ubuntu-2404
    steps:
      - uses: actions/checkout@v4

      - name: Install zstd
        run: sudo apt-get update && sudo apt-get install zstd -y

      - uses: ./.github/actions/setup-bazel
        with:
          build_buddy_token: ${{ secrets.build_buddy_token }}

      - name: Build
        run: bazel build //cloud/dashboard

      - name: Compress
        run: |
          pwd=$(pwd)
          cd ./target-bazel/bin/cloud/dashboard/build
          tar -cf - * | zstd -o "$pwd/app-scuffle-cloud.tar.zst"

      - name: Upload
        uses: actions/upload-artifact@v4
        if: ${{ inputs.artifact_name }}
        with:
          name: ${{ inputs.artifact_name }}
          path: ./app-scuffle-cloud.tar.zst

      - name: Deploy
        if: ${{ inputs.deploy_docs }}
        id: deploy
        uses: amondnet/vercel-action@888da851026e0573da056b061931bcb765a915c4
        with:
          vercel-token: ${{ secrets.vercel_token }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          github-comment: false
          vercel-args: "--archive=tgz"
          vercel-org-id: ${{ secrets.vercel_org_id }}
          vercel-project-id: ${{ secrets.vercel_project_id }}
          working-directory: ./target-bazel/bin/cloud/dashboard/build

      - name: Write status file
        if: ${{ inputs.deploy_docs && inputs.pr_number }}
        run: |
          PREVIEW_NAME="${{ steps.deploy.outputs.preview-name }}"

          PREVIEW_URL="${{ steps.deploy.outputs.preview-url }}"
          if [ -z "$PREVIEW_URL" ]; then
            STATUS="failed"
          else
            STATUS="success"
          fi

          cat > status.json <<EOF
          {
            "deployment": "dashboard",
            "status": "$STATUS",
            "name": "$PREVIEW_NAME",
            "url": "$PREVIEW_URL"
          }
          EOF

      - name: Upload status artifact
        if: ${{ inputs.deploy_docs && inputs.pr_number }}
        uses: actions/upload-artifact@v4
        with:
          name: deploy-status-dashboard
          path: status.json
