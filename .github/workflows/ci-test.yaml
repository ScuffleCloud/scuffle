name: Test

on:
  workflow_call:
    inputs:
      commit_sha:
        type: string
        required: false
      pr_number:
        type: string
        required: false
      matrix:
        type: string
    secrets:
      codecov_token:
        required: true
      build_buddy_token:
        required: true

defaults:
  run:
    shell: bash

jobs:
  test:
    name: ${{ matrix.os }}-${{ matrix.arch }}
    strategy:
      matrix:
        include: ${{ fromJson(inputs.matrix) }}
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v5

      - uses: ./.github/actions/setup-bazel
        with:
          build_buddy_token: ${{ secrets.build_buddy_token }}

      - uses: actions/download-artifact@v5
        if: ${{ github.event_name == 'pull_request' }}
        with:
          name: bazel-diff-impacted-targets

      - name: Download ISOBMFF conformance samples
        shell: bash
        run: |
            mkdir -p ./assets/isobmff_conformance
            curl -Lo ./assets/isobmff_conformance/files.json https://github.com/MPEGGroup/FileFormatConformance/releases/download/r20250526/files.json
            curl -Lo ./assets/isobmff_conformance/conformance-files.tar.gz https://github.com/MPEGGroup/FileFormatConformance/releases/download/r20250526/conformance-files.tar.gz
            tar xf ./assets/isobmff_conformance/conformance-files.tar.gz --directory=./assets/isobmff_conformance

      - name: Run Tests
        id: run
        env:
          MODE: ${{ runner.os == 'Linux' && 'coverage' || 'test' }}
        run: |
          bazel query 'tests(set(//...))' > all_targets.txt

          if [ -f ./impacted-targets.txt ]; then
            targets=$(python3 ./.github/scripts/ci-targets.py ./all_targets.txt ./impacted-targets.txt)
          else
            targets=$(cat all_targets.txt)
          fi

          # Exit early if no targets
          if [ -z "$targets" ]; then
            echo "No targets to test."
            echo "run=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "run=true" >> $GITHUB_OUTPUT
          bazel ${MODE} ${targets} --skip_incompatible_explicit_targets

      - uses: codecov/codecov-action@v5
        if: ${{ runner.os == 'Linux' && steps.run.outputs.run == 'true' }}
        with:
          fail_ci_if_error: true
          files: ./target-bazel/out/_coverage/_coverage_report.dat
          token: ${{ secrets.codecov_token }}
          override_pr: ${{ inputs.pr_number }}
          override_commit: ${{ inputs.commit_sha }}
          verbose: true
