name: ci

on:
  push:
    branches:
      - automation/brawl/try/*
      - automation/brawl/merge/*

  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "0 13 * * *"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  SHA: ${{ github.event.pull_request.head.sha || github.sha }}

defaults:
  run:
    shell: bash

jobs:
  bazel-diff:
    name: bazel-diff
    runs-on: ubuntu-24.04
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v5

      - uses: actions/checkout@v5
        with:
            ref: ${{ github.event.pull_request.base.sha }}
            path: __base

      - uses: ./.github/actions/setup-bazel
        with:
          build_buddy_token: ${{ secrets.BUILD_BUDDY_TOKEN }}

      - name: Generate current hashes
        run: ./scripts/tool/bazel-diff generate-hashes --workspacePath=$(pwd) /tmp/head-hashes.json

      - name: Generate base hashes
        run: ./scripts/tool/bazel-diff generate-hashes --workspacePath=$(pwd)/__base /tmp/base-hashes.json

      - name: Get impacted targets
        run: ./scripts/tools/bazel-diff get-impacted-targets --startingHashes=/tmp/base-hashes.json --finalHashes=/tmp/head-hashes.json --output=/tmp/impacted-targets.json

      - name: Upload Results
        uses: actions/upload-artifact@v4
        with:
          name: "bazel-diff-impacted-targets"
          path: /tmp/impacted-targets.json

  prep:
    name: prep
    runs-on: ubuntu-24.04
    outputs:
      prep: ${{ steps.compute.outputs.prep }}
    steps:
      - uses: actions/checkout@v5

      - name: Run prep
        id: compute
        env:
          JSON_INPUT: ${{ toJson(github) }}
        run: |
          set -xeo pipefail
          echo $JSON_INPUT | python3 .github/scripts/ci-prep.py | tee -a $GITHUB_OUTPUT

  check_vendor:
    needs: [prep]
    if: ${{ fromJson(needs.prep.outputs.prep).check_vendor != null }}
    uses: ./.github/workflows/ci-check-vendor.yaml
    secrets:
      build_buddy_token: ${{ secrets.BUILD_BUDDY_TOKEN }}

  test:
    needs: [prep,bazel-diff]
    if: ${{ fromJson(needs.prep.outputs.prep).test != null }}
    uses: ./.github/workflows/ci-test.yaml
    with:
      commit_sha: "${{ fromJson(needs.prep.outputs.prep).test.commit_sha }}"
      pr_number: "${{ fromJson(needs.prep.outputs.prep).test.pr_number }}"
      matrix: "${{ toJson(fromJson(needs.prep.outputs.prep).test.matrix) }}"
    secrets:
      codecov_token: "${{ secrets.CODECOV_TOKEN }}"
      build_buddy_token: "${{ secrets.BUILD_BUDDY_TOKEN }}"

  check_fmt:
    needs: [prep,bazel-diff]
    if: ${{ fromJson(needs.prep.outputs.prep).check_fmt != null }}
    uses: ./.github/workflows/ci-check-fmt.yaml
    secrets:
      build_buddy_token: ${{ secrets.BUILD_BUDDY_TOKEN }}

  grind:
    needs: [prep,bazel-diff]
    if: ${{ fromJson(needs.prep.outputs.prep).grind != null }}
    uses: ./.github/workflows/ci-grind.yaml
    with:
      matrix: "${{ toJson(fromJson(needs.prep.outputs.prep).grind.matrix) }}"
    secrets:
      codecov_token: "${{ secrets.CODECOV_TOKEN }}"
      build_buddy_token: "${{ secrets.BUILD_BUDDY_TOKEN }}"

  preview:
    needs: [prep,bazel-diff]
    if: ${{ fromJson(needs.prep.outputs.prep).preview != null }}
    uses: ./.github/workflows/ci-preview.yaml
    permissions:
      pull-requests: write
    with:
      pr_number: "${{ fromJson(needs.prep.outputs.prep).preview.pr_number }}"
      commit_sha: "${{ fromJson(needs.prep.outputs.prep).preview.commit_sha }}"
      dashboard_build: "${{ fromJson(needs.prep.outputs.prep).preview.dashboard_build }}"
      docs_build: "${{ fromJson(needs.prep.outputs.prep).preview.docs_build  }}"
      rustdoc_build: "${{ fromJson(needs.prep.outputs.prep).preview.rustdoc_build }}"
      deploy: "${{ fromJson(needs.prep.outputs.prep).preview.deploy }}"
    secrets:
      build_buddy_token: ${{ secrets.BUILD_BUDDY_TOKEN }}
      vercel_token: ${{ secrets.VERCEL_TOKEN }}
      vercel_org_id: ${{ secrets.VERCEL_ORG_ID }}
      vercel_project_id_dashboard: ${{ secrets.VERCEL_PROJECT_ID_APP_SCUFFLE_CLOUD }}
      vercel_project_id_docs: ${{ secrets.VERCEL_PROJECT_ID_DOCS_SCUFFLE_CLOUD }}
      vercel_project_id_rustdoc: ${{ secrets.VERCEL_PROJECT_ID_DOCS_SCUFFLE_RS }}

  brawl-done:
    runs-on: ubuntu-24.04
    needs: [check_vendor, test, check_fmt, grind, preview]
    if: ${{ !cancelled() && github.event_name == 'push' }}
    steps:
      - name: calculate the correct exit status
        run: jq --exit-status 'all(.result == "success" or .result == "skipped")' <<< '${{ toJson(needs) }}'
