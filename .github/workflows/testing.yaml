name: "Test Suite"
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    env:
<<<<<<< HEAD
      FFMPEG_DIR: /home/runner/work/ffmpeg
=======
      FFMPEG_DIR: /home/runner/work/rust-ffmpeg/rust-ffmpeg/ffmpeg-7.1-linux-clang-default
>>>>>>> 1ac57eeea90af74bbf0b7e011f2fbcc708b0e98f
    steps:
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y --no-install-recommends clang curl pkg-config xz-utils libxv-dev ninja-build meson nasm
          curl -L https://sourceforge.net/projects/avbuild/files/linux/ffmpeg-7.1-linux-clang-default.tar.xz/download -o ffmpeg.tar.xz
<<<<<<< HEAD
          mkdir -p /home/runner/work/ffmpeg
          tar -xf ffmpeg.tar.xz -C /home/runner/work/ffmpeg
=======
          tar -xf ffmpeg.tar.xz
>>>>>>> 1ac57eeea90af74bbf0b7e011f2fbcc708b0e98f

      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        id: setup-rust
        with:
          toolchain: nightly
          components: llvm-tools-preview

      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "v0-rust-${{ steps.setup-rust.outputs.cachekey }}"
          key: "testing"

      - uses: cargo-bins/cargo-binstall@main

      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest,cargo-llvm-cov,just,cargo-insta

      - run: just test-ci

      - uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          files: ./lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          files: ./target/nextest/ci/junit.xml
          token: ${{ secrets.CODECOV_TOKEN }}
