[package]
name = "api"
version = "0.1.0"
edition = "2021"
authors = ["Scuffle <opensource@scuffle.tv>"]
description = "Scuffle API server"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[[bin]]
name = "api"
path = "src/main.rs"

[[bin]]
# This is a dummy binary to export the GraphQL schema for frontend type generation.
name = "api-gql-generator"
path = "src/gql.nocov.rs"
test = false
bench = false

[dependencies]
anyhow = "1"
tracing = "0"
tokio = { version = "1", features = ["full"] }
serde = { version = "1", features = ["derive"] }
hyper = { version = "0", features = ["full"] }
common = { path = "../../common" }
sqlx = { git="https://github.com/launchbadge/sqlx", branch="main", features = ["postgres", "runtime-tokio-native-tls", "json", "chrono", "uuid"] }
routerify = "3"
serde_json = "1"
reqwest = { version = "0", features = ["json"] }
chrono = { version = "0", default-features = false, features = ["serde", "clock"] }
async-graphql = { version = "5", features = ["apollo_tracing", "apollo_persisted_queries", "tracing", "opentelemetry", "dataloader", "string_number", "uuid"] }
hyper-tungstenite = "0"
async-stream = "0"
futures = "0"
futures-util = "0"
arc-swap = "1"
jwt = "0"
hmac = "0"
sha2 = "0"
negative-impl  = "0"
tonic = { version = "0", features = ["tls"] }
prost = "0"
uuid = "1"
bitmask-enum = "2"
argon2 = "0"
email_address = "0"
rand = "0"
lapin = { version = "2.0.3", features = ["native-tls"] }

[dev-dependencies]
tempfile = "3"
dotenvy = "0"
http = "0"
tokio-tungstenite = "0"
portpicker = "0"
serial_test = "2"

[build-dependencies]
tonic-build = "0"
