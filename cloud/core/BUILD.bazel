load("//misc/utils/rust:manifest.bzl", "cargo_toml")
load("//misc/utils/rust:package.bzl", "scuffle_package")

cargo_toml()

deps = [
    "//crates/batching",
    "//crates/bootstrap",
    "//crates/bootstrap-telemetry",
    "//crates/context",
    "//crates/http",
    "//crates/settings",
    "//crates/signal",
    "//crates/tinc",
    "//cloud/proto",
    "//cloud/core/traits",
    "//cloud/core/emails",
    "//cloud/core/db-types",
    "//cloud/core/cedar",
    "//cloud/geo-ip",
]

aliases = {
    "//cloud/proto": "pb",
    "//cloud/geo-ip": "geo_ip",
    "//cloud/core/emails": "core_emails",
    "//cloud/core/traits": "core_traits",
    "//cloud/core/db-types": "core_db_types",
    "//cloud/core/cedar": "core_cedar",
}

genrule(
    name = "status_extract",
    srcs = [],
    outs = ["status_values.txt"],
    cmd = """
      grep -E '^(COMMIT_SHA|GIT_BRANCH)' bazel-out/volatile-status.txt \
       | awk '{print $$1 "=" $$2}' > $@
    """,
    stamp = 1,
)

scuffle_package(
    srcs = glob(
        [
            "src/**/*.rs",
        ],
        exclude = [
            "src/bin/*.rs",
        ],
    ),
    aliases = aliases,
    compile_data = [
        "static_policies.cedar",
        "static_policies.cedarschema",
    ],
    crate_name = "scufflecloud-core",
    rustc_env_files = [":status_extract"],
    deps = deps,
)

scuffle_package(
    name = "bin",
    srcs = glob([
        "src/bin/standalone/**/*.rs",
    ]),
    aliases = aliases,
    crate_name = "scufflecloud-core-standalone",
    crate_type = "bin",
    readme = False,
    deps = deps + [":core"],
)
