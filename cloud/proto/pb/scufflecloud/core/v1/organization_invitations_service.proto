syntax = "proto3";

package scufflecloud.core.v1;

import "google/protobuf/empty.proto";
import "scufflecloud/core/v1/constraints.proto";
import "scufflecloud/core/v1/organizations.proto";
import "scufflecloud/core/v1/users.proto";
import "tinc/annotations.proto";

// Service for managing organization invitations.
service OrganizationInvitationsService {
  rpc CreateOrganizationInvitation(CreateOrganizationInvitationRequest) returns (OrganizationInvitation) {
    option (tinc.method).endpoint = {post: "/organization-invitations"};
  }

  rpc ListOrganizationInvitationsByOrganization(ListOrganizationInvitationsByOrganizationRequest) returns (OrganizationInvitationList) {
    option (tinc.method).endpoint = {get: "/organizations/{id}/invitations"};
  }
  rpc ListOrgnizationInvitesByUser(ListOrgnizationInvitesByUserRequest) returns (OrganizationInvitationList) {
    option (tinc.method).endpoint = {get: "/users/{id}/invitations"};
  }

  rpc GetOrganizationInvitation(GetOrganizationInvitationRequest) returns (OrganizationInvitation) {
    option (tinc.method).endpoint = {get: "/organization-invitations/{id}"};
  }
  rpc AcceptOrganizationInvitation(AcceptOrganizationInvitationRequest) returns (OrganizationMember) {
    option (tinc.method).endpoint = {post: "/organization-invitations/{id}/accept"};
  }
  rpc DeclineOrganizationInvitation(DeclineOrganizationInvitationRequest) returns (google.protobuf.Empty) {
    option (tinc.method).endpoint = {post: "/organization-invitations/{id}/decline"};
  }
}

message CreateOrganizationInvitationRequest {
  string organization_id = 1 [(string_constraint).id = true];
  string email = 2 [(tinc.field).constraint.string.email = true];
  // In how many seconds the invitation will expire.
  optional uint64 expires_in_s = 3;
}

message ListOrgnizationInvitesByUserRequest {
  string id = 1 [(string_constraint).id = true];
}

message ListOrganizationInvitationsByOrganizationRequest {
  string id = 1 [(string_constraint).id = true];
}

message OrganizationInvitationList {
  repeated OrganizationInvitation invitations = 1;
}

message GetOrganizationInvitationRequest {
  string id = 1 [(string_constraint).id = true];
}

message AcceptOrganizationInvitationRequest {
  string id = 1 [(string_constraint).id = true];
}

message DeclineOrganizationInvitationRequest {
  string id = 1 [(string_constraint).id = true];
}
