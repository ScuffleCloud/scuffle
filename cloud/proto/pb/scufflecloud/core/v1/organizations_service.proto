syntax = "proto3";

package scufflecloud.core.v1;

import "scufflecloud/core/v1/constraints.proto";
import "scufflecloud/core/v1/organizations.proto";
import "tinc/annotations.proto";

// Service for managing organizations and their members.
service OrganizationsService {
  rpc CreateOrganization(CreateOrganizationRequest) returns (Organization) {
    option (tinc.method).endpoint = {post: "/organizations"};
  }
  rpc GetOrganization(GetOrganizationRequest) returns (Organization) {
    option (tinc.method).endpoint = {get: "/organizations/{id}"};
  }
  rpc UpdateOrganization(UpdateOrganizationRequest) returns (Organization) {
    option (tinc.method).endpoint = {patch: "/organizations/{id}"};
  }
  rpc ListOrganizationMembers(ListOrganizationMembersRequest) returns (OrganizationMembersList) {
    option (tinc.method).endpoint = {get: "/organizations/{id}/members"};
  }

  rpc ListOrganizationsByUser(ListOrganizationsByUserRequest) returns (OrganizationsList) {
    option (tinc.method).endpoint = {get: "/users/{id}/organizations"};
  }

  rpc CreateProject(CreateProjectRequest) returns (Project) {
    option (tinc.method).endpoint = {post: "/organizations/{id}/projects"};
  }
  rpc ListProjects(ListProjectsRequest) returns (ProjectsList) {
    option (tinc.method).endpoint = {get: "/organizations/{id}/projects"};
  }
}

message CreateOrganizationRequest {
  string name = 1 [(tinc.field).constraint.string = {
    min_len: 1
    max_len: 255
  }];
}

message GetOrganizationRequest {
  string id = 1 [(string_constraint).id = true];
}

message UpdateOrganizationRequest {
  // The ID of the organization to update.
  string id = 1 [(string_constraint).id = true];
  optional UpdateOrganizationOwner owner = 2;
  optional UpdateOrganizationName name = 3;
}

message UpdateOrganizationOwner {
  // The user ID of the new owner.
  string owner_id = 1 [(string_constraint).id = true];
}

message UpdateOrganizationName {
  // The new name of the organization.
  string name = 1 [(tinc.field).constraint.string = {
    min_len: 1
    max_len: 255
  }];
}

message ListOrganizationsByUserRequest {
  string id = 1 [(string_constraint).id = true];
}

message OrganizationsList {
  repeated Organization organizations = 1;
}

message ListOrganizationMembersRequest {
  string id = 1 [(string_constraint).id = true];
}

message OrganizationMembersList {
  repeated OrganizationMember members = 1;
}

message CreateProjectRequest {
  string id = 1 [(string_constraint).id = true];
  string name = 2 [(tinc.field).constraint.string = {
    min_len: 1
    max_len: 255
  }];
}

message ListProjectsRequest {
  string id = 1 [(string_constraint).id = true];
}

message ProjectsList {
  repeated Project projects = 1;
}
