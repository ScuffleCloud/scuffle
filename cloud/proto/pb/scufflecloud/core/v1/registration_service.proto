syntax = "proto3";

package scufflecloud.core.v1;

import "google/protobuf/empty.proto";
import "tinc/annotations.proto";

import "scufflecloud/core/v1/constraints.proto";

service RegistrationService {
    rpc RegisterWithEmail(RegisterWithEmailRequest) returns (google.protobuf.Empty) {
        option (tinc.method).endpoint = {
            post: "/register/email"
        };
    }
    rpc CompleteRegisterWithEmail(CompleteRegisterWithEmailRequest) returns (SessionToken) {
        option (tinc.method).endpoint = {
            post: "/register/email/complete"
        };
    }
    rpc RegisterWithExternalProvider(RegisterWithExternalProviderRequest) returns (RegisterWithExternalProviderResponse) {
        option (tinc.method).endpoint = {
            post: "/register/external"
        };
    }
    rpc CompleteRegisterWithExternalProvider(CompleteRegisterWithExternalProviderRequest) returns (SessionToken) {
        option (tinc.method).endpoint = {
            post: "/register/external/complete"
        };
    }
}

enum CaptchaProvider {
    // Cloudflare Turnstile
    TURNSTILE = 0;
}

message CaptchaChallengeResponse {
    CaptchaProvider provider = 1;
    string token = 2;
}

message RegisterWithEmailRequest {
    CaptchaChallengeResponse captcha = 1;
    // The email address to register with.
    string email = 2 [(tinc.field).constraint.string.email = true];
}

message CompleteRegisterWithEmailRequest {
    // The token received via email.
    string token = 1;
    // The password.
    string password = 2 [(constraints_string).password = true];
}

message SessionToken {
    string token = 1;
}

enum ExternalProvider {
    // Google
    GOOGLE = 0;
}

message RegisterWithExternalProviderRequest {
    ExternalProvider provider = 1;
}

message RegisterWithExternalProviderResponse {
    string authorization_url = 1;
}

message CompleteRegisterWithExternalProviderRequest {
    // The code returned by the external provider after the user has authorized the application.
    string code = 1;
    // The state returned by the external provider.
    string state = 2;
}
