syntax = "proto3";

package scufflecloud.core.v1;

import "tinc/annotations.proto";

service CoreService {
    rpc RegisterWithEmail(RegisterWithEmailRequest) returns (SessionToken) {
        option (tinc.method).endpoint = {
            post: "/register/email"
        };
    }
    rpc RegisterWithExternalProvider(RegisterWithExternalProviderRequest) returns (RegisterWithExternalProviderResponse) {
        option (tinc.method).endpoint = {
            post: "/register/external"
        };
    }
    rpc CompleteRegisterWithExternalProvider(CompleteRegisterWithExternalProviderRequest) returns (SessionToken) {
        option (tinc.method).endpoint = {
            post: "/register/external/complete"
        };
    }
}

message RegisterWithEmailRequest {
    // The email address to register with.
    string email = 1 [(tinc.field).constraint.string.email = true];
}

message SessionToken {
    string token = 1;
}

enum ExternalProvider {
    GOOGLE = 0;
}

message RegisterWithExternalProviderRequest {
    ExternalProvider provider = 1;
    // The redirect_uri that appears in the returned authorization URL.
    // The server is not aware of this URI because it should redirect to the client application.
    string redirect_uri = 2;
}

message RegisterWithExternalProviderResponse {
    string authorization_url = 1;
}

message CompleteRegisterWithExternalProviderRequest {
    // The code returned by the external provider after the user has authorized the application.
    string code = 1;
    // The state returned by the external provider.
    string state = 2;
}
