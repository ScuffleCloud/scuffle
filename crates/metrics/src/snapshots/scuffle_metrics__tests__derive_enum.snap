---
source: crates/metrics/src/lib.rs
expression: "postcompile::compile!({\n    #[derive(scuffle_metrics::MetricEnum)] pub enum Kind { Http, Grpc, }\n})"
---
exit status: 0
--- expanded
#![feature(prelude_import)]
#[macro_use]
extern crate std;
#[prelude_import]
use std::prelude::rust_2024::*;
pub enum Kind {
    Http,
    Grpc,
}
impl ::core::convert::From<Kind> for ::scuffle_metrics::opentelemetry::Value {
    fn from(value: Kind) -> Self {
        let value = match value {
            Kind::Http => "Http",
            Kind::Grpc => "Grpc",
        };
        ::scuffle_metrics::opentelemetry::Value::String(value.into())
    }
}
