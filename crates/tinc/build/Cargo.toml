[package]
name = "tinc-build"
version = "0.1.3"
edition = "2024"
description = "A build script that generates code for tinc protobuf annotations"
repository = "https://github.com/scufflecloud/scuffle"
authors = ["Scuffle <opensource@scuffle.cloud>"]
readme = "README.md"
documentation = "https://docs.rs/tinc-build"
license = "MIT OR Apache-2.0"
keywords = ["grpc", "protobuf", "tonic", "codegen"]

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = [
  'cfg(coverage_nightly)',
  'cfg(valgrind)',
] }

[features]
default = ["prost"]
## Enables prost codegen
prost = ["dep:prost", "dep:prost-reflect", "dep:prost-build"]
## Enables documentation of feature flags
docs = ["dep:document-features"]

[dependencies]
anyhow = "1.0.79"
base64 = "0.22"
cel-parser = { version = "0.8.0" }
convert_case = "0.8.0"
document-features = { optional = true, version = "0.2" }
fmtools = "0.1"
heck = "0.5.0"
indexmap = "2.9.0"
num-traits = "0.2.19"
openapiv3_1 = { features = ["debug"], path = "../../openapiv3_1", version = "0.1.1" }
prettyplease = "0.2"
proc-macro2 = "1"
prost = { optional = true, version = "0.13.5" }
prost-build = { optional = true, version = "0.13.5" }
prost-reflect = { optional = true, version = "0.15.1" }
quote = "1"
regex = "1"
runtime-format = "0.1.3"
scuffle-workspace-hack.workspace = true
serde = "1"
serde_derive = "1"
serde_json = "1"
syn = "2"
thiserror = "2"
tinc-cel = { path = "../cel", version = "=0.1.3" }
tinc-pb-prost = { path = "../pb-prost", version = "=0.1.3" }
tonic-build = { default-features = false, version = "0.13.0" }

[dev-dependencies]
insta = "1"
postcompile = { path = "../../postcompile" }

[package.metadata.xtask.powerset]
additive-features = ["prost", "docs"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = [
  "--cfg",
  "docsrs",
  "--sort-modules-by-appearance",
  "--generate-link-to-definition",
]

[package.metadata.cargo-sync-rdme.badge]
style = "flat-square"

[package.metadata.cargo-sync-rdme.badge.badges]
license = true
docs-rs = true
crates-io = true
github-actions = { workflows = "ci.yaml" }
codecov = true

[package.metadata.xtask.release]
group = "tinc"
