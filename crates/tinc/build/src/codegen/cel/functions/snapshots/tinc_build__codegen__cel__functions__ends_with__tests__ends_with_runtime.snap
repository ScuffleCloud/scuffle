---
source: crates/tinc/build/src/codegen/cel/functions/ends_with.rs
expression: "postcompile::compile_str!(postcompile::config!\n{\n    test: true, dependencies:\n    vec![postcompile::Dependency::version(\"tinc\", \"*\"),],\n}, quote::quote!\n{\n    fn ends_with(input: &str) -> Result<bool,\n    ::tinc::__private::cel::CelError<'_>> { Ok(#output) } #[test] fn\n    test_to_double()\n    {\n        assert_eq!(ends_with(\"testing\").unwrap(), true);\n        assert_eq!(ends_with(\"smile\").unwrap(), false);\n    }\n},)"
---
exit status: 0
--- test_stdout
running 1 test
.
test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in [ELAPSED]s
--- expanded
#![feature(prelude_import)]
#[macro_use]
extern crate std;
#[prelude_import]
use std::prelude::rust_2024::*;
fn ends_with(input: &str) -> Result<bool, ::tinc::__private::cel::CelError<'_>> {
    Ok(
        ::tinc::__private::cel::CelValue::cel_ends_with(
            ::tinc::__private::cel::CelValueConv::conv(input),
            ::tinc::__private::cel::CelValue::String(
                ::tinc::__private::cel::CelString::Borrowed("ing"),
            ),
        )?,
    )
}
