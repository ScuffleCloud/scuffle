---
source: crates/tinc/build/src/codegen/cel/functions/size.rs
expression: "postcompile::compile_str!(postcompile::config!\n{\n    test: true, dependencies:\n    vec![postcompile::Dependency::version(\"tinc\", \"*\"),],\n}, quote::quote!\n{\n    #![allow(unused_parens)] fn size(input: &Vec<String>) -> Result<u64,\n    ::tinc::__private::cel::CelError<'_>> { Ok(#output) } #[test] fn\n    test_contains()\n    {\n        assert_eq!(size(&vec![\"value\".into()]).unwrap(), 1);\n        assert_eq!(size(&vec![]).unwrap(), 0);\n        assert_eq!(size(&vec![\"xd\".into(), \"value\".into()]).unwrap(), 2);\n    }\n},)"
---
exit status: 0
--- test_stdout
running 1 test
.
test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in [ELAPSED]s
--- expanded
#![feature(prelude_import)]
#![allow(unused_parens)]
#[prelude_import]
use std::prelude::rust_2024::*;
#[macro_use]
extern crate std;
fn size(input: &Vec<String>) -> Result<u64, ::tinc::__private::cel::CelError<'_>> {
    Ok(((input).len() as u64))
}
