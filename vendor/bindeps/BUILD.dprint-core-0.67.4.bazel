###############################################################################
# @generated
# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To
# regenerate this file, run the following:
#
#     bazel run @@//vendor:bindeps
###############################################################################

load("@rules_rust//cargo:defs.bzl", "cargo_toml_env_vars")
load("@rules_rust//rust:defs.bzl", "rust_library")

package(default_visibility = ["//visibility:public"])

cargo_toml_env_vars(
    name = "cargo_toml_env_vars",
    src = "Cargo.toml",
)

rust_library(
    name = "dprint_core",
    srcs = glob(
        include = ["**/*.rs"],
        allow_empty = True,
    ),
    compile_data = glob(
        include = ["**"],
        allow_empty = True,
        exclude = [
            "**/* *",
            ".tmp_git_root/**/*",
            "BUILD",
            "BUILD.bazel",
            "WORKSPACE",
            "WORKSPACE.bazel",
        ],
    ),
    crate_features = [
        "async-trait",
        "async_runtime",
        "bumpalo",
        "communication",
        "crossbeam-channel",
        "default",
        "formatting",
        "futures",
        "hashbrown",
        "libc",
        "parking_lot",
        "process",
        "rustc-hash",
        "serde_json",
        "tokio",
        "tokio-util",
        "unicode-width",
        "wasm",
        "winapi",
    ],
    crate_root = "src/lib.rs",
    edition = "2021",
    proc_macro_deps = [
        "@bindeps__async-trait-0.1.89//:async_trait",
    ],
    rustc_env_files = [
        ":cargo_toml_env_vars",
    ],
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-bazel",
        "crate-name=dprint-core",
        "manual",
        "noclippy",
        "norustfmt",
    ],
    target_compatible_with = select({
        "@rules_rust//rust/platform:aarch64-apple-darwin": [],
        "@rules_rust//rust/platform:aarch64-pc-windows-msvc": [],
        "@rules_rust//rust/platform:aarch64-unknown-linux-gnu": [],
        "@rules_rust//rust/platform:x86_64-apple-darwin": [],
        "@rules_rust//rust/platform:x86_64-pc-windows-msvc": [],
        "@rules_rust//rust/platform:x86_64-unknown-linux-gnu": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
    version = "0.67.4",
    deps = [
        "@bindeps__anyhow-1.0.99//:anyhow",
        "@bindeps__bumpalo-3.19.0//:bumpalo",
        "@bindeps__crossbeam-channel-0.5.15//:crossbeam_channel",
        "@bindeps__futures-0.3.31//:futures",
        "@bindeps__hashbrown-0.15.5//:hashbrown",
        "@bindeps__indexmap-2.10.0//:indexmap",
        "@bindeps__libc-0.2.175//:libc",  # cfg(not(any(target_os = "unknown", target_arch = "wasm32")))
        "@bindeps__parking_lot-0.12.4//:parking_lot",
        "@bindeps__rustc-hash-2.1.1//:rustc_hash",
        "@bindeps__serde-1.0.219//:serde",
        "@bindeps__serde_json-1.0.143//:serde_json",
        "@bindeps__tokio-1.47.1//:tokio",
        "@bindeps__tokio-util-0.7.16//:tokio_util",
        "@bindeps__unicode-width-0.2.1//:unicode_width",
    ] + select({
        "@rules_rust//rust/platform:aarch64-pc-windows-msvc": [
            "@bindeps__winapi-0.3.9//:winapi",  # cfg(windows)
        ],
        "@rules_rust//rust/platform:x86_64-pc-windows-msvc": [
            "@bindeps__winapi-0.3.9//:winapi",  # cfg(windows)
        ],
        "//conditions:default": [],
    }),
)
