###############################################################################
# @generated
# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To
# regenerate this file, run the following:
#
#     bazel run @@//vendor:bindeps
###############################################################################

load("@rules_rust//cargo:defs.bzl", "cargo_toml_env_vars")
load("@rules_rust//rust:defs.bzl", "rust_library")

package(default_visibility = ["//visibility:public"])

cargo_toml_env_vars(
    name = "cargo_toml_env_vars",
    src = "Cargo.toml",
)

rust_library(
    name = "wasmer_compiler",
    srcs = glob(
        include = ["**/*.rs"],
        allow_empty = True,
    ),
    compile_data = glob(
        include = ["**"],
        allow_empty = True,
        exclude = [
            "**/* *",
            ".tmp_git_root/**/*",
            "BUILD",
            "BUILD.bazel",
            "WORKSPACE",
            "WORKSPACE.bazel",
        ],
    ),
    crate_features = [
        "compiler",
        "default",
        "std",
        "translator",
        "wasmparser",
    ],
    crate_root = "src/lib.rs",
    edition = "2021",
    rustc_env_files = [
        ":cargo_toml_env_vars",
    ],
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-bazel",
        "crate-name=wasmer-compiler",
        "manual",
        "noclippy",
        "norustfmt",
    ],
    target_compatible_with = select({
        "@rules_rust//rust/platform:aarch64-apple-darwin": [],
        "@rules_rust//rust/platform:aarch64-pc-windows-msvc": [],
        "@rules_rust//rust/platform:aarch64-unknown-linux-gnu": [],
        "@rules_rust//rust/platform:x86_64-apple-darwin": [],
        "@rules_rust//rust/platform:x86_64-pc-windows-msvc": [],
        "@rules_rust//rust/platform:x86_64-unknown-linux-gnu": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
    version = "6.1.0-rc.3",
    deps = [
        "@bindeps__backtrace-0.3.75//:backtrace",
        "@bindeps__bytes-1.10.1//:bytes",
        "@bindeps__cfg-if-1.0.1//:cfg_if",
        "@bindeps__enum-iterator-0.7.0//:enum_iterator",
        "@bindeps__enumset-1.1.10//:enumset",
        "@bindeps__leb128-0.2.5//:leb128",
        "@bindeps__libc-0.2.175//:libc",
        "@bindeps__memmap2-0.6.2//:memmap2",
        "@bindeps__more-asserts-0.2.2//:more_asserts",
        "@bindeps__object-0.32.2//:object",
        "@bindeps__region-3.0.2//:region",  # cfg(not(target_arch = "wasm32"))
        "@bindeps__rkyv-0.8.11//:rkyv",
        "@bindeps__self_cell-1.2.0//:self_cell",
        "@bindeps__shared-buffer-0.1.4//:shared_buffer",
        "@bindeps__smallvec-1.15.1//:smallvec",
        "@bindeps__target-lexicon-0.12.16//:target_lexicon",
        "@bindeps__thiserror-1.0.69//:thiserror",
        "@bindeps__wasmer-types-6.1.0-rc.3//:wasmer_types",
        "@bindeps__wasmer-vm-6.1.0-rc.3//:wasmer_vm",  # cfg(not(target_arch = "wasm32"))
        "@bindeps__wasmparser-0.224.1//:wasmparser",
        "@bindeps__xxhash-rust-0.8.15//:xxhash_rust",
    ] + select({
        "@rules_rust//rust/platform:aarch64-apple-darwin": [
            "@bindeps__macho-unwind-info-0.5.0//:macho_unwind_info",  # cfg(all(target_os = "macos", target_arch = "aarch64"))
        ],
        "@rules_rust//rust/platform:aarch64-pc-windows-msvc": [
            "@bindeps__windows-sys-0.59.0//:windows_sys",  # cfg(target_os = "windows")
        ],
        "@rules_rust//rust/platform:x86_64-pc-windows-msvc": [
            "@bindeps__windows-sys-0.59.0//:windows_sys",  # cfg(target_os = "windows")
        ],
        "//conditions:default": [],
    }),
)
