###############################################################################
# @generated
# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To
# regenerate this file, run the following:
#
#     bazel run @@//vendor:bindeps
###############################################################################

load(
    "@rules_rust//cargo:defs.bzl",
    "cargo_build_script",
    "cargo_toml_env_vars",
)
load("@rules_rust//rust:defs.bzl", "rust_library")

package(default_visibility = ["//visibility:public"])

cargo_toml_env_vars(
    name = "cargo_toml_env_vars",
    src = "Cargo.toml",
)

rust_library(
    name = "wasmer_vm",
    srcs = glob(
        include = ["**/*.rs"],
        allow_empty = True,
    ),
    compile_data = glob(
        include = ["**"],
        allow_empty = True,
        exclude = [
            "**/* *",
            ".tmp_git_root/**/*",
            "BUILD",
            "BUILD.bazel",
            "WORKSPACE",
            "WORKSPACE.bazel",
        ],
    ),
    crate_features = [
        "default",
    ],
    crate_root = "src/lib.rs",
    edition = "2021",
    rustc_env_files = [
        ":cargo_toml_env_vars",
    ],
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-bazel",
        "crate-name=wasmer-vm",
        "manual",
        "noclippy",
        "norustfmt",
    ],
    target_compatible_with = select({
        "@rules_rust//rust/platform:aarch64-apple-darwin": [],
        "@rules_rust//rust/platform:aarch64-pc-windows-msvc": [],
        "@rules_rust//rust/platform:aarch64-unknown-linux-gnu": [],
        "@rules_rust//rust/platform:x86_64-apple-darwin": [],
        "@rules_rust//rust/platform:x86_64-pc-windows-msvc": [],
        "@rules_rust//rust/platform:x86_64-unknown-linux-gnu": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
    version = "6.1.0-rc.3",
    deps = [
        "@bindeps__backtrace-0.3.75//:backtrace",
        "@bindeps__cfg-if-1.0.3//:cfg_if",
        "@bindeps__corosensei-0.2.2//:corosensei",
        "@bindeps__crossbeam-queue-0.3.12//:crossbeam_queue",
        "@bindeps__dashmap-6.1.0//:dashmap",
        "@bindeps__enum-iterator-0.7.0//:enum_iterator",
        "@bindeps__fnv-1.0.7//:fnv",
        "@bindeps__indexmap-2.11.0//:indexmap",
        "@bindeps__libc-0.2.175//:libc",
        "@bindeps__memoffset-0.9.1//:memoffset",
        "@bindeps__more-asserts-0.2.2//:more_asserts",
        "@bindeps__region-3.0.2//:region",
        "@bindeps__scopeguard-1.2.0//:scopeguard",
        "@bindeps__thiserror-1.0.69//:thiserror",
        "@bindeps__wasmer-types-6.1.0-rc.3//:wasmer_types",
        "@bindeps__wasmer-vm-6.1.0-rc.3//:build_script_build",
    ] + select({
        "@rules_rust//rust/platform:aarch64-apple-darwin": [
            "@bindeps__libunwind-1.3.3//:libunwind",  # cfg(any(target_family = "unix", all(target_family = "windows", target_env = "gnu")))
            "@bindeps__mach2-0.4.3//:mach2",  # cfg(target_vendor = "apple")
        ],
        "@rules_rust//rust/platform:aarch64-pc-windows-msvc": [
            "@bindeps__windows-sys-0.59.0//:windows_sys",  # cfg(target_os = "windows")
        ],
        "@rules_rust//rust/platform:aarch64-unknown-linux-gnu": [
            "@bindeps__libunwind-1.3.3//:libunwind",  # cfg(any(target_family = "unix", all(target_family = "windows", target_env = "gnu")))
        ],
        "@rules_rust//rust/platform:x86_64-apple-darwin": [
            "@bindeps__libunwind-1.3.3//:libunwind",  # cfg(any(target_family = "unix", all(target_family = "windows", target_env = "gnu")))
            "@bindeps__mach2-0.4.3//:mach2",  # cfg(target_vendor = "apple")
        ],
        "@rules_rust//rust/platform:x86_64-pc-windows-msvc": [
            "@bindeps__windows-sys-0.59.0//:windows_sys",  # cfg(target_os = "windows")
        ],
        "@rules_rust//rust/platform:x86_64-unknown-linux-gnu": [
            "@bindeps__libunwind-1.3.3//:libunwind",  # cfg(any(target_family = "unix", all(target_family = "windows", target_env = "gnu")))
        ],
        "//conditions:default": [],
    }),
)

cargo_build_script(
    name = "_bs",
    srcs = glob(
        include = ["**/*.rs"],
        allow_empty = True,
    ),
    compile_data = glob(
        include = ["**"],
        allow_empty = True,
        exclude = [
            "**/* *",
            "**/*.rs",
            ".tmp_git_root/**/*",
            "BUILD",
            "BUILD.bazel",
            "WORKSPACE",
            "WORKSPACE.bazel",
        ],
    ),
    crate_features = [
        "default",
    ],
    crate_name = "build_script_build",
    crate_root = "build.rs",
    data = glob(
        include = ["**"],
        allow_empty = True,
        exclude = [
            "**/* *",
            ".tmp_git_root/**/*",
            "BUILD",
            "BUILD.bazel",
            "WORKSPACE",
            "WORKSPACE.bazel",
        ],
    ),
    edition = "2021",
    pkg_name = "wasmer-vm",
    proc_macro_deps = [
        "@bindeps__rustversion-1.0.22//:rustversion",
    ],
    rustc_env_files = [
        ":cargo_toml_env_vars",
    ],
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-bazel",
        "crate-name=wasmer-vm",
        "manual",
        "noclippy",
        "norustfmt",
    ],
    version = "6.1.0-rc.3",
    visibility = ["//visibility:private"],
    deps = [
        "@bindeps__cc-1.2.35//:cc",
    ],
)

alias(
    name = "build_script_build",
    actual = ":_bs",
    tags = ["manual"],
)
