###############################################################################
# @generated
# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To
# regenerate this file, run the following:
#
#     bazel run @@//vendor:cargo_vendor
###############################################################################

load(
    "@rules_rust//cargo:defs.bzl",
    "cargo_build_script",
    "cargo_toml_env_vars",
)
load("@rules_rust//rust:defs.bzl", "rust_library")

package(default_visibility = ["//visibility:public"])

cargo_toml_env_vars(
    name = "cargo_toml_env_vars",
    src = "Cargo.toml",
)

rust_library(
    name = "rusty_ffmpeg",
    srcs = glob(
        include = ["**/*.rs"],
        allow_empty = True,
    ),
    compile_data = glob(
        include = ["**"],
        allow_empty = True,
        exclude = [
            "**/* *",
            ".tmp_git_root/**/*",
            "BUILD",
            "BUILD.bazel",
            "WORKSPACE",
            "WORKSPACE.bazel",
        ],
    ),
    crate_features = [
        "link_system_ffmpeg",
        "link_vcpkg_ffmpeg",
        "vcpkg",
    ],
    crate_root = "src/lib.rs",
    edition = "2021",
    rustc_env_files = [
        ":cargo_toml_env_vars",
    ],
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-bazel",
        "crate-name=rusty_ffmpeg",
        "manual",
        "noclippy",
        "norustfmt",
    ],
    target_compatible_with = select({
        "@rules_rust//rust/platform:aarch64-apple-darwin": [],
        "@rules_rust//rust/platform:aarch64-pc-windows-msvc": [],
        "@rules_rust//rust/platform:aarch64-unknown-linux-gnu": [],
        "@rules_rust//rust/platform:wasm32-unknown-unknown": [],
        "@rules_rust//rust/platform:x86_64-apple-darwin": [],
        "@rules_rust//rust/platform:x86_64-pc-windows-msvc": [],
        "@rules_rust//rust/platform:x86_64-unknown-linux-gnu": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
    version = "0.16.7+ffmpeg.8",
    deps = [
        "@cargo_vendor__rusty_ffmpeg-0.16.7-ffmpeg.8//:build_script_build",
    ],
)

cargo_build_script(
    name = "_bs",
    srcs = glob(
        include = ["**/*.rs"],
        allow_empty = True,
    ),
    build_script_env = {
        "BINDGEN_EXTRA_CLANG_ARGS": "$(CFLAGS)",
        "CLANG_PATH": "$${pwd}/$(CC)",
        "FFMPEG_DLL_PATH": "$(execpath @//build/toolchains/ffmpeg:lib)",
        "FFMPEG_INCLUDE_DIR": "$(execpath @//build/toolchains/ffmpeg:include)",
        "LIBCLANG_PATH": "$(execpath @//build/toolchains/clang:libclang)",
    },
    compile_data = glob(
        include = ["**"],
        allow_empty = True,
        exclude = [
            "**/* *",
            "**/*.rs",
            ".tmp_git_root/**/*",
            "BUILD",
            "BUILD.bazel",
            "WORKSPACE",
            "WORKSPACE.bazel",
        ],
    ),
    crate_features = [
        "link_system_ffmpeg",
        "link_vcpkg_ffmpeg",
        "vcpkg",
    ],
    crate_name = "build_script_build",
    crate_root = "build.rs",
    data = glob(
        include = ["**"],
        allow_empty = True,
        exclude = [
            "**/* *",
            ".tmp_git_root/**/*",
            "BUILD",
            "BUILD.bazel",
            "WORKSPACE",
            "WORKSPACE.bazel",
        ],
    ) + [
        "@//build/toolchains/clang:libclang",
        "@//build/toolchains/ffmpeg:include",
        "@//build/toolchains/ffmpeg:lib",
    ],
    edition = "2021",
    links = "ffmpeg",
    pkg_name = "rusty_ffmpeg",
    rustc_env_files = [
        ":cargo_toml_env_vars",
    ],
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-bazel",
        "crate-name=rusty_ffmpeg",
        "manual",
        "noclippy",
        "norustfmt",
    ],
    version = "0.16.7+ffmpeg.8",
    visibility = ["//visibility:private"],
    deps = [
        "@cargo_vendor__bindgen-0.71.1//:bindgen",
        "@cargo_vendor__camino-1.1.12//:camino",
        "@cargo_vendor__once_cell-1.21.3//:once_cell",
        "@cargo_vendor__vcpkg-0.2.15//:vcpkg",
    ] + select({
        "@rules_rust//rust/platform:aarch64-apple-darwin": [
            "@cargo_vendor__pkg-config-0.3.32//:pkg_config",  # cfg(not(windows))
        ],
        "@rules_rust//rust/platform:aarch64-unknown-linux-gnu": [
            "@cargo_vendor__pkg-config-0.3.32//:pkg_config",  # cfg(not(windows))
        ],
        "@rules_rust//rust/platform:wasm32-unknown-unknown": [
            "@cargo_vendor__pkg-config-0.3.32//:pkg_config",  # cfg(not(windows))
        ],
        "@rules_rust//rust/platform:x86_64-apple-darwin": [
            "@cargo_vendor__pkg-config-0.3.32//:pkg_config",  # cfg(not(windows))
        ],
        "@rules_rust//rust/platform:x86_64-unknown-linux-gnu": [
            "@cargo_vendor__pkg-config-0.3.32//:pkg_config",  # cfg(not(windows))
        ],
        "//conditions:default": [],
    }),
)

alias(
    name = "build_script_build",
    actual = ":_bs",
    tags = ["manual"],
)
