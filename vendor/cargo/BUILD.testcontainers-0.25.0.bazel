###############################################################################
# @generated
# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To
# regenerate this file, run the following:
#
#     bazel run @@//vendor:cargo_vendor
###############################################################################

load("@rules_rust//cargo:defs.bzl", "cargo_toml_env_vars")
load("@rules_rust//rust:defs.bzl", "rust_library")

package(default_visibility = ["//visibility:public"])

cargo_toml_env_vars(
    name = "cargo_toml_env_vars",
    src = "Cargo.toml",
)

rust_library(
    name = "testcontainers",
    srcs = glob(
        include = ["**/*.rs"],
        allow_empty = True,
    ),
    compile_data = glob(
        include = ["**"],
        allow_empty = True,
        exclude = [
            "**/* *",
            ".tmp_git_root/**/*",
            "BUILD",
            "BUILD.bazel",
            "WORKSPACE",
            "WORKSPACE.bazel",
        ],
    ),
    crate_features = [
        "aws-lc-rs",
    ],
    crate_root = "src/lib.rs",
    edition = "2021",
    proc_macro_deps = [
        "@cargo_vendor__async-trait-0.1.88//:async_trait",
    ],
    rustc_env_files = [
        ":cargo_toml_env_vars",
    ],
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-bazel",
        "crate-name=testcontainers",
        "manual",
        "noclippy",
        "norustfmt",
    ],
    target_compatible_with = select({
        "@rules_rust//rust/platform:aarch64-apple-darwin": [],
        "@rules_rust//rust/platform:aarch64-pc-windows-msvc": [],
        "@rules_rust//rust/platform:aarch64-unknown-linux-gnu": [],
        "@rules_rust//rust/platform:wasm32-unknown-unknown": [],
        "@rules_rust//rust/platform:x86_64-apple-darwin": [],
        "@rules_rust//rust/platform:x86_64-pc-windows-msvc": [],
        "@rules_rust//rust/platform:x86_64-unknown-linux-gnu": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
    version = "0.25.0",
    deps = [
        "@cargo_vendor__bollard-0.19.3//:bollard",
        "@cargo_vendor__bytes-1.10.1//:bytes",
        "@cargo_vendor__docker_credential-1.3.2//:docker_credential",
        "@cargo_vendor__either-1.15.0//:either",
        "@cargo_vendor__etcetera-0.10.0//:etcetera",
        "@cargo_vendor__futures-0.3.31//:futures",
        "@cargo_vendor__log-0.4.27//:log",
        "@cargo_vendor__memchr-2.7.6//:memchr",
        "@cargo_vendor__parse-display-0.9.1//:parse_display",
        "@cargo_vendor__pin-project-lite-0.2.16//:pin_project_lite",
        "@cargo_vendor__serde-1.0.228//:serde",
        "@cargo_vendor__serde_json-1.0.145//:serde_json",
        "@cargo_vendor__serde_with-3.15.0//:serde_with",
        "@cargo_vendor__thiserror-2.0.17//:thiserror",
        "@cargo_vendor__tokio-1.47.1//:tokio",
        "@cargo_vendor__tokio-stream-0.1.17//:tokio_stream",
        "@cargo_vendor__tokio-tar-0.3.1//:tokio_tar",
        "@cargo_vendor__tokio-util-0.7.15//:tokio_util",
        "@cargo_vendor__ulid-1.2.1//:ulid",
        "@cargo_vendor__url-2.5.4//:url",
    ],
)
