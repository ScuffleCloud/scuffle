###############################################################################
# @generated
# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To
# regenerate this file, run the following:
#
#     bazel run @@//vendor:cargo_vendor
###############################################################################
"""
# `crates_repository` API

- [aliases](#aliases)
- [crate_deps](#crate_deps)
- [all_crate_deps](#all_crate_deps)
- [crate_repositories](#crate_repositories)

"""

load("@bazel_skylib//lib:selects.bzl", "selects")
load("@bazel_tools//tools/build_defs/repo:git.bzl", "new_git_repository")
load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
load("@bazel_tools//tools/build_defs/repo:utils.bzl", "maybe")

###############################################################################
# MACROS API
###############################################################################

# An identifier that represent common dependencies (unconditional).
_COMMON_CONDITION = ""

# An identifier that represents a requried feature (unconditional).
_REQUIRED_FEATURE = ""

def _flatten_features(features, enabled_features):
    """
    Flatten features of a crate

    Args:
        features (dict): A map of feature to list of other features
        enabled_features (list): A list of enabled features

    Returns:
        set: A set of all enabled features
    """
    resolved = set()
    queue = list(enabled_features)

    for _ in range(10000):
        if len(queue) == 0:
            break

        feat = queue.pop()
        if feat in resolved:
            continue

        if feat not in features:
            print("{} is not apart of the features for this package".format(feat))
            continue

        resolved.add(feat)
        queue.extend(features[feat])

    return resolved

def _flatten_dependency_maps(all_dependency_maps, enabled_features_map):
    """Flatten a list of dependency maps into one dictionary.

    Dependency maps have the following structure:

    ```python
    DEPENDENCIES_MAP = {
        # The first key in the map is a feature flag
        "feature": {
            # Not all dependencies are supported for all platforms.
            # the condition key is the condition required to be true
            # on the host platform.
            "condition": {

                # An alias to a crate target.     # The label of the crate target the
                # Aliases are only crate names.   # package name refers to.
                "package_name":                   "@full//:label",
            }
        }
    }
    ```

    Args:
        all_dependency_maps (list): A list of dicts as described above
        enabled_features_map (list): A list of enabled features

    Returns:
        dict: A dictionary as described above
    """
    dependencies = {}
    feature_conditions = {
        _COMMON_CONDITION: set(enabled_features_map.get(_COMMON_CONDITION, set())),
    }

    for condition, feature in enabled_features_map.items():
        for condition in _CONDITIONS.get(condition, []):
            feature_conditions.setdefault(condition, set()).update(feature)

    for feature_deps_map in all_dependency_maps:
        for feature, conditional_deps_map in feature_deps_map.items():
            for condition, deps_map in conditional_deps_map.items():
                condition_flags = _CONDITIONS[condition] if condition != _COMMON_CONDITION else feature_conditions.keys()
                for condition in condition_flags:
                    if feature == _REQUIRED_FEATURE or feature in feature_conditions.get(_COMMON_CONDITION, set()) or feature in feature_conditions.get(condition, set()):
                        dependencies.setdefault(condition, dict()).update(deps_map)

    if _COMMON_CONDITION in dependencies:
        for cond, v in dependencies.items():
            if cond != _COMMON_CONDITION:
                for k in dependencies[_COMMON_CONDITION]:
                    v.pop(k, default = None)

    return dependencies

def _make_crate_features(package_name = None):
    if package_name == None:
        package_name = native.package_name()

    conditions = {}
    vtable = {}

    def make_set():
        return struct(
            _type = "FeatureMap",
            conditions = conditions,
            **vtable
        )

    def feature_map_add(other):
        if other:
            type_other = type(other)
            if type_other == "list" or type_other == "set":
                conditions.setdefault(_COMMON_CONDITION, set()).update(other)
            elif type_other == "dict":
                for key, value in other.items():
                    conditions.setdefault(key, set()).update(value)
            elif hasattr(other, "_type") and other._type == "FeatureMap":
                for key, value in other.conditions.items():
                    conditions.setdefault(key, set()).update(value)
            else:
                fail("unsupported add operation between FeatureMap and %s" % type_other)

        return make_set()

    def feature_map_flatten():
        for features in conditions.values():
            features.update(_flatten_features(_FEATURE_FLAGS.get(package_name, []), features))

        return make_set()

    def feature_map_select():
        feature_map_flatten()
        features = []
        for condition, deps in conditions.items():
            if condition == _COMMON_CONDITION:
                features += list(deps)
            else:
                features += selects.with_or({
                    tuple(_CONDITIONS[condition]): list(deps),
                    "//conditions:default": [],
                })
        return features

    def feature_map_get(condition, default = None):
        return conditions.get(condition, default)

    def feature_map_items():
        return conditions.items()

    vtable["add"] = feature_map_add
    vtable["select"] = feature_map_select
    vtable["flatten"] = feature_map_flatten
    vtable["get"] = feature_map_get
    vtable["items"] = feature_map_items

    return make_set()

def crate_features(
        all = False,
        additional = None,
        default = True,
        package_name = None):
    """Resolves the features for a crate

    Args:
        all (bool, optional): If we should include all crate features.
        additional (list, optional): The desired list of crate targets.
        default: (bool, optional): Should we include the default resolved features.
        package_name (str, optional): The package name of the set of dependencies to look up.
            Defaults to `native.package_name()`.

    Returns:
        list: a map of features based on some conditions
    """

    if package_name == None:
        package_name = native.package_name()

    features = _make_crate_features().add(additional)

    if all:
        features.add(_FEATURE_FLAGS.get(package_name, {}).keys())

    if default:
        features.add(_RESOLVED_FEATURE_FLAGS.get(package_name, {}))

    return features

def crate_version(package_name = None):
    """Returns the defined version in the Cargo.toml

    Args:
        package_name (str, optional): The package name of the set of dependencies to look up.
            Defaults to `native.package_name()`.

    Returns:
        list: a map of features based on some conditions
    """

    if package_name == None:
        package_name = native.package_name()

    return _VERSIONS.get(package_name, "0.0.0")

def crate_deps(deps, package_name = None):
    """Finds the fully qualified label of the requested crates for the package where this macro is called.

    Args:
        deps (list): The desired list of crate targets.
        package_name (str, optional): The package name of the set of dependencies to look up.
            Defaults to `native.package_name()`.

    Returns:
        list: A list of labels to generated rust targets (str)
    """

    if not deps:
        return []

    if package_name == None:
        package_name = native.package_name()

    # Join both sets of dependencies
    dependencies = _flatten_dependency_maps([
        _NORMAL_DEPENDENCIES.get(package_name, {}),
        _NORMAL_DEV_DEPENDENCIES.get(package_name, {}),
        _PROC_MACRO_DEPENDENCIES.get(package_name, {}),
        _PROC_MACRO_DEV_DEPENDENCIES.get(package_name, {}),
        _BUILD_DEPENDENCIES.get(package_name, {}),
        _BUILD_PROC_MACRO_DEPENDENCIES.get(package_name, {}),
    ], crate_features(package_name = package_name, all = True).flatten())

    # Combine all conditional packages so we can easily index over a flat list
    # TODO: Perhaps this should actually return select statements and maintain
    # the conditionals of the dependencies
    flat_deps = {}
    for deps_set in dependencies.values():
        for crate_name, crate_label in deps_set.items():
            flat_deps.update({crate_name: crate_label})

    missing_crates = []
    crate_targets = []
    for crate_target in deps:
        if crate_target not in flat_deps:
            missing_crates.append(crate_target)
        else:
            crate_targets.append(flat_deps[crate_target])

    if missing_crates:
        fail("Could not find crates `{}` among dependencies of `{}`. Available dependencies were `{}`".format(
            missing_crates,
            package_name,
            dependencies,
        ))

    return crate_targets

def all_crate_deps(
        normal = False,
        normal_dev = False,
        proc_macro = False,
        proc_macro_dev = False,
        build = False,
        build_proc_macro = False,
        features = None,
        package_name = None):
    """Finds the fully qualified label of all requested direct crate dependencies \
    for the package where this macro is called.

    If no parameters are set, all normal dependencies are returned. Setting any one flag will
    otherwise impact the contents of the returned list.

    Args:
        normal (bool, optional): If True, normal dependencies are included in the
            output list.
        normal_dev (bool, optional): If True, normal dev dependencies will be
            included in the output list..
        proc_macro (bool, optional): If True, proc_macro dependencies are included
            in the output list.
        proc_macro_dev (bool, optional): If True, dev proc_macro dependencies are
            included in the output list.
        build (bool, optional): If True, build dependencies are included
            in the output list.
        build_proc_macro (bool, optional): If True, build proc_macro dependencies are
            included in the output list.
        features ([str], optional): A list of additional features to include when
            finding crate dependencies.
        package_name (str, optional): The package name of the set of dependencies to look up.
            Defaults to `native.package_name()` when unset.

    Returns:
        list: A list of labels to generated rust targets (str)
    """

    if package_name == None:
        package_name = native.package_name()

    if features == None:
        features = crate_features(package_name = package_name)

    # Default to always using normal dependencies
    if not (normal or normal_dev or proc_macro or proc_macro_dev or build or build_proc_macro):
        normal = True

    # Determine the relevant maps to use
    all_dependency_maps = []
    if normal and package_name in _NORMAL_DEPENDENCIES:
        all_dependency_maps.append(_NORMAL_DEPENDENCIES.get(package_name, {}))
    if normal_dev and package_name in _NORMAL_DEV_DEPENDENCIES:
        all_dependency_maps.append(_NORMAL_DEV_DEPENDENCIES.get(package_name, {}))
    if proc_macro and package_name in _PROC_MACRO_DEPENDENCIES:
        all_dependency_maps.append(_PROC_MACRO_DEPENDENCIES.get(package_name, {}))
    if proc_macro_dev and package_name in _PROC_MACRO_DEV_DEPENDENCIES:
        all_dependency_maps.append(_PROC_MACRO_DEV_DEPENDENCIES.get(package_name, {}))
    if build and package_name in _BUILD_DEPENDENCIES:
        all_dependency_maps.append(_BUILD_DEPENDENCIES.get(package_name, {}))
    if build_proc_macro and package_name in _BUILD_PROC_MACRO_DEPENDENCIES:
        all_dependency_maps.append(_BUILD_PROC_MACRO_DEPENDENCIES.get(package_name, {}))

    if not all_dependency_maps:
        print("Tried to get all_crate_deps for package " + package_name + " but that package had no Cargo.toml file")

    features = _make_crate_features(package_name = package_name).add(features).flatten()
    dependencies = _flatten_dependency_maps(all_dependency_maps, features)

    crate_deps = list(dependencies.pop(_COMMON_CONDITION, {}).values())
    if dependencies:
        select_statement = {
            "//conditions:default": [],
        }
        for condition, deps in dependencies.items():
            select_statement[condition] = deps.values()

        crate_deps += select(select_statement)

    return crate_deps

def aliases(
        normal = False,
        normal_dev = False,
        proc_macro = False,
        proc_macro_dev = False,
        build = False,
        build_proc_macro = False,
        features = None,
        package_name = None):
    """Produces a map of Crate alias names to their original label

    If no dependency kinds are specified, `normal` and `proc_macro` are used by default.
    Setting any one flag will otherwise determine the contents of the returned dict.

    Args:
        normal (bool, optional): If True, normal dependencies are included in the
            output list.
        normal_dev (bool, optional): If True, normal dev dependencies will be
            included in the output list..
        proc_macro (bool, optional): If True, proc_macro dependencies are included
            in the output list.
        proc_macro_dev (bool, optional): If True, dev proc_macro dependencies are
            included in the output list.
        build (bool, optional): If True, build dependencies are included
            in the output list.
        build_proc_macro (bool, optional): If True, build proc_macro dependencies are
            included in the output list.
        features ([str], optional): A list of additional features to include when
            finding crate dependencies.
        package_name (str, optional): The package name of the set of dependencies to look up.
            Defaults to `native.package_name()` when unset.

    Returns:
        dict: The aliases of all associated packages
    """
    if package_name == None:
        package_name = native.package_name()

    if features == None:
        features = crate_features(package_name = package_name)

    if not (normal or normal_dev or proc_macro or proc_macro_dev or build or build_proc_macro):
        normal = True
        proc_macro = True

    # Determine the relevant maps to use
    all_aliases_maps = []
    if normal and package_name in _NORMAL_ALIASES:
        all_aliases_maps.append(_NORMAL_ALIASES.get(package_name, {}))
    if normal_dev and package_name in _NORMAL_DEV_ALIASES:
        all_aliases_maps.append(_NORMAL_DEV_ALIASES.get(package_name, {}))
    if proc_macro and package_name in _PROC_MACRO_ALIASES:
        all_aliases_maps.append(_PROC_MACRO_ALIASES.get(package_name, {}))
    if proc_macro_dev and package_name in _PROC_MACRO_DEV_ALIASES:
        all_aliases_maps.append(_PROC_MACRO_DEV_ALIASES.get(package_name, {}))
    if build and package_name in _BUILD_ALIASES:
        all_aliases_maps.append(_BUILD_ALIASES.get(package_name, {}))
    if build_proc_macro and package_name in _BUILD_PROC_MACRO_ALIASES:
        all_aliases_maps.append(_BUILD_PROC_MACRO_ALIASES.get(package_name, {}))

    if not all_aliases_maps:
        return dict()

    features = _make_crate_features(package_name = package_name).add(features).flatten()
    aliases = _flatten_dependency_maps(all_aliases_maps, features)
    common_items = aliases.pop(_COMMON_CONDITION, {}).items()

    # If there are only common items in the dictionary, immediately return them
    if not aliases:
        return dict(common_items)

    # Build a single select statement where each conditional has accounted for the
    # common set of aliases.
    crate_aliases = {"//conditions:default": dict(common_items)}
    for condition, deps in aliases.items():
        crate_aliases[condition] = dict(deps.items() + common_items)

    return select(crate_aliases)

###############################################################################
# WORKSPACE MEMBER DEPS AND ALIASES
###############################################################################

_NORMAL_DEPENDENCIES = {
    "cloud/core": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "anyhow": Label("@cargo_vendor//:anyhow-1.0.99"),
                "argon2": Label("@cargo_vendor//:argon2-0.5.3"),
                "axum": Label("@cargo_vendor//:axum-0.8.4"),
                "base64": Label("@cargo_vendor//:base64-0.22.1"),
                "cedar-policy": Label("@cargo_vendor//:cedar-policy-4.5.1"),
                "chrono": Label("@cargo_vendor//:chrono-0.4.42"),
                "derive_more": Label("@cargo_vendor//:derive_more-2.0.1"),
                "diesel": Label("@cargo_vendor//:diesel-2.2.12"),
                "diesel-async": Label("@cargo_vendor//:diesel-async-0.6.1"),
                "fred": Label("@cargo_vendor//:fred-10.1.0"),
                "hmac": Label("@cargo_vendor//:hmac-0.12.1"),
                "ipnetwork": Label("@cargo_vendor//:ipnetwork-0.21.1"),
                "itertools": Label("@cargo_vendor//:itertools-0.14.0"),
                "pkcs8": Label("@cargo_vendor//:pkcs8-0.10.2"),
                "prost": Label("@cargo_vendor//:prost-0.14.1"),
                "rand": Label("@cargo_vendor//:rand-0.8.5"),
                "reqwest": Label("@cargo_vendor//:reqwest-0.12.23"),
                "rsa": Label("@cargo_vendor//:rsa-0.9.8"),
                "rustls": Label("@cargo_vendor//:rustls-0.23.32"),
                "sailfish": Label("@cargo_vendor//:sailfish-0.10.0"),
                "serde": Label("@cargo_vendor//:serde-1.0.220"),
                "serde_json": Label("@cargo_vendor//:serde_json-1.0.145"),
                "sha2": Label("@cargo_vendor//:sha2-0.10.9"),
                "swagger-ui-dist": Label("@cargo_vendor//:swagger-ui-dist-5.29.0"),
                "thiserror": Label("@cargo_vendor//:thiserror-2.0.16"),
                "tokio": Label("@cargo_vendor//:tokio-1.47.1"),
                "tonic": Label("@cargo_vendor//:tonic-0.14.2"),
                "tonic-reflection": Label("@cargo_vendor//:tonic-reflection-0.14.2"),
                "tonic-types": Label("@cargo_vendor//:tonic-types-0.14.2"),
                "tonic-web": Label("@cargo_vendor//:tonic-web-0.14.2"),
                "totp-rs": Label("@cargo_vendor//:totp-rs-5.7.0"),
                "tower-http": Label("@cargo_vendor//:tower-http-0.6.6"),
                "tracing": Label("@cargo_vendor//:tracing-0.1.41"),
                "tracing-subscriber": Label("@cargo_vendor//:tracing-subscriber-0.3.20"),
                "ulid": Label("@cargo_vendor//:ulid-1.2.1"),
                "url": Label("@cargo_vendor//:url-2.5.7"),
                "urlencoding": Label("@cargo_vendor//:urlencoding-2.1.3"),
                "uuid": Label("@cargo_vendor//:uuid-1.18.1"),
                "webauthn-rs": Label("@cargo_vendor//:webauthn-rs-0.5.2"),
            },
        },
    },
    "cloud/core/cedar": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "base64": Label("@cargo_vendor//:base64-0.22.1"),
                "cedar-policy": Label("@cargo_vendor//:cedar-policy-4.5.1"),
                "const_panic": Label("@cargo_vendor//:const_panic-0.2.15"),
                "konst": Label("@cargo_vendor//:konst-0.4.2"),
                "serde": Label("@cargo_vendor//:serde-1.0.220"),
                "serde_json": Label("@cargo_vendor//:serde_json-1.0.145"),
                "tonic": Label("@cargo_vendor//:tonic-0.14.2"),
            },
        },
    },
    "cloud/core/db-types": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "chrono": Label("@cargo_vendor//:chrono-0.4.42"),
                "diesel": Label("@cargo_vendor//:diesel-2.2.12"),
                "ipnetwork": Label("@cargo_vendor//:ipnetwork-0.21.1"),
                "serde": Label("@cargo_vendor//:serde-1.0.220"),
                "serde_json": Label("@cargo_vendor//:serde_json-1.0.145"),
                "thiserror": Label("@cargo_vendor//:thiserror-2.0.16"),
                "ulid": Label("@cargo_vendor//:ulid-1.2.1"),
                "uuid": Label("@cargo_vendor//:uuid-1.18.1"),
            },
        },
    },
    "cloud/core/emails": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "chrono": Label("@cargo_vendor//:chrono-0.4.42"),
                "maxminddb": Label("@cargo_vendor//:maxminddb-0.26.0"),
                "sailfish": Label("@cargo_vendor//:sailfish-0.10.0"),
                "url": Label("@cargo_vendor//:url-2.5.7"),
            },
        },
    },
    "cloud/core/traits": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "anyhow": Label("@cargo_vendor//:anyhow-1.0.99"),
                "diesel": Label("@cargo_vendor//:diesel-2.2.12"),
                "diesel-async": Label("@cargo_vendor//:diesel-async-0.6.1"),
                "fred": Label("@cargo_vendor//:fred-10.1.0"),
                "reqwest": Label("@cargo_vendor//:reqwest-0.12.23"),
                "rustls": Label("@cargo_vendor//:rustls-0.23.32"),
                "tonic": Label("@cargo_vendor//:tonic-0.14.2"),
                "tonic-types": Label("@cargo_vendor//:tonic-types-0.14.2"),
                "tracing": Label("@cargo_vendor//:tracing-0.1.41"),
                "url": Label("@cargo_vendor//:url-2.5.7"),
                "webauthn-rs": Label("@cargo_vendor//:webauthn-rs-0.5.2"),
            },
        },
    },
    "cloud/email": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "anyhow": Label("@cargo_vendor//:anyhow-1.0.99"),
                "axum": Label("@cargo_vendor//:axum-0.8.4"),
                "base64": Label("@cargo_vendor//:base64-0.22.1"),
                "http": Label("@cargo_vendor//:http-1.3.1"),
                "mail-builder": Label("@cargo_vendor//:mail-builder-0.4.4"),
                "prost": Label("@cargo_vendor//:prost-0.14.1"),
                "reqsign": Label("@cargo_vendor//:reqsign-0.17.0"),
                "reqwest": Label("@cargo_vendor//:reqwest-0.12.23"),
                "rustls": Label("@cargo_vendor//:rustls-0.23.32"),
                "serde": Label("@cargo_vendor//:serde-1.0.220"),
                "serde_json": Label("@cargo_vendor//:serde_json-1.0.145"),
                "thiserror": Label("@cargo_vendor//:thiserror-2.0.16"),
                "tonic": Label("@cargo_vendor//:tonic-0.14.2"),
                "tonic-reflection": Label("@cargo_vendor//:tonic-reflection-0.14.2"),
                "tonic-types": Label("@cargo_vendor//:tonic-types-0.14.2"),
                "tower-http": Label("@cargo_vendor//:tower-http-0.6.6"),
                "tracing": Label("@cargo_vendor//:tracing-0.1.41"),
                "tracing-subscriber": Label("@cargo_vendor//:tracing-subscriber-0.3.20"),
            },
        },
    },
    "cloud/email/traits": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "anyhow": Label("@cargo_vendor//:anyhow-1.0.99"),
                "reqsign": Label("@cargo_vendor//:reqsign-0.17.0"),
                "reqwest": Label("@cargo_vendor//:reqwest-0.12.23"),
                "rustls": Label("@cargo_vendor//:rustls-0.23.32"),
            },
        },
    },
    "cloud/ext-traits": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "http": Label("@cargo_vendor//:http-1.3.1"),
                "tonic": Label("@cargo_vendor//:tonic-0.14.2"),
                "tonic-types": Label("@cargo_vendor//:tonic-types-0.14.2"),
                "tracing": Label("@cargo_vendor//:tracing-0.1.41"),
            },
        },
    },
    "cloud/geo-ip": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "axum": Label("@cargo_vendor//:axum-0.8.4"),
                "futures": Label("@cargo_vendor//:futures-0.3.31"),
                "ipnetwork": Label("@cargo_vendor//:ipnetwork-0.21.1"),
                "maxminddb": Label("@cargo_vendor//:maxminddb-0.26.0"),
                "serde": Label("@cargo_vendor//:serde-1.0.220"),
                "thiserror": Label("@cargo_vendor//:thiserror-2.0.16"),
                "tonic": Label("@cargo_vendor//:tonic-0.14.2"),
                "tower-layer": Label("@cargo_vendor//:tower-layer-0.3.3"),
                "tower-service": Label("@cargo_vendor//:tower-service-0.3.3"),
                "tracing": Label("@cargo_vendor//:tracing-0.1.41"),
            },
        },
    },
    "cloud/id": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "diesel": Label("@cargo_vendor//:diesel-2.2.12"),
                "serde": Label("@cargo_vendor//:serde-1.0.220"),
                "thiserror": Label("@cargo_vendor//:thiserror-2.0.16"),
                "ulid": Label("@cargo_vendor//:ulid-1.2.1"),
                "uuid": Label("@cargo_vendor//:uuid-1.18.1"),
            },
        },
    },
    "cloud/proto": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "prost": Label("@cargo_vendor//:prost-0.14.1"),
                "serde": Label("@cargo_vendor//:serde-1.0.220"),
            },
        },
    },
    "cloud/video/ingest": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "anyhow": Label("@cargo_vendor//:anyhow-1.0.99"),
                "serde": Label("@cargo_vendor//:serde-1.0.220"),
                "tracing": Label("@cargo_vendor//:tracing-0.1.41"),
                "tracing-subscriber": Label("@cargo_vendor//:tracing-subscriber-0.3.20"),
            },
        },
    },
    "cloud/video/ingest/traits": {
    },
    "crates/aac": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "bytes": Label("@cargo_vendor//:bytes-1.10.1"),
                "num-traits": Label("@cargo_vendor//:num-traits-0.2.19"),
            },
        },
    },
    "crates/amf0": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "byteorder": Label("@cargo_vendor//:byteorder-1.5.0"),
                "bytes": Label("@cargo_vendor//:bytes-1.10.1"),
                "bytestring": Label("@cargo_vendor//:bytestring-1.4.0"),
                "num-traits": Label("@cargo_vendor//:num-traits-0.2.19"),
                "thiserror": Label("@cargo_vendor//:thiserror-2.0.16"),
            },
        },
        "serde": {
            _COMMON_CONDITION: {
                "serde": Label("@cargo_vendor//:serde-1.0.220"),
            },
        },
    },
    "crates/av1": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "byteorder": Label("@cargo_vendor//:byteorder-1.5.0"),
                "bytes": Label("@cargo_vendor//:bytes-1.10.1"),
            },
        },
    },
    "crates/batching": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "tokio": Label("@cargo_vendor//:tokio-1.47.1"),
                "tokio-util": Label("@cargo_vendor//:tokio-util-0.7.16"),
            },
        },
    },
    "crates/bootstrap": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "anyhow": Label("@cargo_vendor//:anyhow-1.0.99"),
                "futures": Label("@cargo_vendor//:futures-0.3.31"),
                "pin-project-lite": Label("@cargo_vendor//:pin-project-lite-0.2.16"),
                "tokio": Label("@cargo_vendor//:tokio-1.47.1"),
            },
        },
    },
    "crates/bootstrap-telemetry": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "anyhow": Label("@cargo_vendor//:anyhow-1.0.99"),
                "bytes": Label("@cargo_vendor//:bytes-1.10.1"),
                "http": Label("@cargo_vendor//:http-1.3.1"),
                "http-body": Label("@cargo_vendor//:http-body-1.0.1"),
                "http-body-util": Label("@cargo_vendor//:http-body-util-0.1.3"),
                "tracing": Label("@cargo_vendor//:tracing-0.1.41"),
            },
        },
        "opentelemetry": {
            _COMMON_CONDITION: {
                "opentelemetry": Label("@cargo_vendor//:opentelemetry-0.30.0"),
                "opentelemetry_sdk": Label("@cargo_vendor//:opentelemetry_sdk-0.30.0"),
            },
        },
        "opentelemetry-appender-tracing": {
            _COMMON_CONDITION: {
                "opentelemetry-appender-tracing": Label("@cargo_vendor//:opentelemetry-appender-tracing-0.30.1"),
            },
        },
        "prometheus-client": {
            _COMMON_CONDITION: {
                "prometheus-client": Label("@cargo_vendor//:prometheus-client-0.23.1"),
            },
        },
        "querystring": {
            _COMMON_CONDITION: {
                "querystring": Label("@cargo_vendor//:querystring-1.1.0"),
            },
        },
        "thiserror": {
            _COMMON_CONDITION: {
                "thiserror": Label("@cargo_vendor//:thiserror-2.0.16"),
            },
        },
        "tokio": {
            _COMMON_CONDITION: {
                "tokio": Label("@cargo_vendor//:tokio-1.47.1"),
            },
        },
        "tracing-opentelemetry": {
            _COMMON_CONDITION: {
                "tracing-opentelemetry": Label("@cargo_vendor//:tracing-opentelemetry-0.31.0"),
            },
        },
    },
    "crates/bootstrap/derive": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "darling": Label("@cargo_vendor//:darling-0.21.3"),
                "proc-macro2": Label("@cargo_vendor//:proc-macro2-1.0.101"),
                "quote": Label("@cargo_vendor//:quote-1.0.40"),
                "syn": Label("@cargo_vendor//:syn-2.0.106"),
            },
        },
    },
    "crates/bytes-util": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "bytes": Label("@cargo_vendor//:bytes-1.10.1"),
                "bytestring": Label("@cargo_vendor//:bytestring-1.4.0"),
            },
        },
        "serde": {
            _COMMON_CONDITION: {
                "serde": Label("@cargo_vendor//:serde-1.0.220"),
            },
        },
    },
    "crates/cedar-policy": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "bon": Label("@cargo_vendor//:bon-3.7.2"),
                "cedar-policy": Label("@cargo_vendor//:cedar-policy-4.5.1"),
                "cedar-policy-core": Label("@cargo_vendor//:cedar-policy-core-4.5.1"),
                "const_panic": Label("@cargo_vendor//:const_panic-0.2.15"),
                "konst": Label("@cargo_vendor//:konst-0.4.2"),
                "serde": Label("@cargo_vendor//:serde-1.0.220"),
                "serde_json": Label("@cargo_vendor//:serde_json-1.0.145"),
                "smol_str": Label("@cargo_vendor//:smol_str-0.3.2"),
                "thiserror": Label("@cargo_vendor//:thiserror-2.0.16"),
            },
        },
    },
    "crates/cedar-policy/codegen": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "cedar-policy-core": Label("@cargo_vendor//:cedar-policy-core-4.5.1"),
                "heck": Label("@cargo_vendor//:heck-0.5.0"),
                "prettyplease": Label("@cargo_vendor//:prettyplease-0.2.37"),
                "proc-macro2": Label("@cargo_vendor//:proc-macro2-1.0.101"),
                "quote": Label("@cargo_vendor//:quote-1.0.40"),
                "syn": Label("@cargo_vendor//:syn-2.0.106"),
                "thiserror": Label("@cargo_vendor//:thiserror-2.0.16"),
            },
        },
    },
    "crates/changelog": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "convert_case": Label("@cargo_vendor//:convert_case-0.8.0"),
                "fmtools": Label("@cargo_vendor//:fmtools-0.1.2"),
                "proc-macro2": Label("@cargo_vendor//:proc-macro2-1.0.101"),
                "quote": Label("@cargo_vendor//:quote-1.0.40"),
                "regex": Label("@cargo_vendor//:regex-1.11.2"),
                "semver": Label("@cargo_vendor//:semver-1.0.26"),
                "syn": Label("@cargo_vendor//:syn-2.0.106"),
            },
        },
    },
    "crates/context": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "futures-lite": Label("@cargo_vendor//:futures-lite-2.6.1"),
                "pin-project-lite": Label("@cargo_vendor//:pin-project-lite-0.2.16"),
                "tokio": Label("@cargo_vendor//:tokio-1.47.1"),
                "tokio-util": Label("@cargo_vendor//:tokio-util-0.7.16"),
            },
        },
    },
    "crates/expgolomb": {
    },
    "crates/ffmpeg": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "aliasable": Label("@cargo_vendor//:aliasable-0.1.3"),
                "arc-swap": Label("@cargo_vendor//:arc-swap-1.7.1"),
                "bon": Label("@cargo_vendor//:bon-3.7.2"),
                "libc": Label("@cargo_vendor//:libc-0.2.175"),
                "rusty_ffmpeg": Label("@cargo_vendor//:rusty_ffmpeg-0.16.7+ffmpeg.8"),
                "thiserror": Label("@cargo_vendor//:thiserror-2.0.16"),
                "va_list": Label("@cargo_vendor//:va_list-0.2.1"),
            },
        },
        "channel": {
            _COMMON_CONDITION: {
                "bytes": Label("@cargo_vendor//:bytes-1.10.1"),
            },
        },
        "crossbeam-channel": {
            _COMMON_CONDITION: {
                "crossbeam-channel": Label("@cargo_vendor//:crossbeam-channel-0.5.15"),
            },
        },
        "tokio-channel": {
            _COMMON_CONDITION: {
                "tokio": Label("@cargo_vendor//:tokio-1.47.1"),
            },
        },
        "tracing": {
            _COMMON_CONDITION: {
                "tracing": Label("@cargo_vendor//:tracing-0.1.41"),
            },
        },
    },
    "crates/flv": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "byteorder": Label("@cargo_vendor//:byteorder-1.5.0"),
                "bytes": Label("@cargo_vendor//:bytes-1.10.1"),
                "num-traits": Label("@cargo_vendor//:num-traits-0.2.19"),
                "serde": Label("@cargo_vendor//:serde-1.0.220"),
                "thiserror": Label("@cargo_vendor//:thiserror-2.0.16"),
            },
        },
    },
    "crates/future-ext": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "tokio": Label("@cargo_vendor//:tokio-1.47.1"),
            },
        },
    },
    "crates/h264": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "byteorder": Label("@cargo_vendor//:byteorder-1.5.0"),
                "bytes": Label("@cargo_vendor//:bytes-1.10.1"),
            },
        },
    },
    "crates/h265": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "bitflags": Label("@cargo_vendor//:bitflags-2.9.4"),
                "byteorder": Label("@cargo_vendor//:byteorder-1.5.0"),
                "bytes": Label("@cargo_vendor//:bytes-1.10.1"),
            },
        },
    },
    "crates/http": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "bon": Label("@cargo_vendor//:bon-3.7.2"),
                "bytes": Label("@cargo_vendor//:bytes-1.10.1"),
                "futures": Label("@cargo_vendor//:futures-0.3.31"),
                "http": Label("@cargo_vendor//:http-1.3.1"),
                "http-body": Label("@cargo_vendor//:http-body-1.0.1"),
                "pin-project-lite": Label("@cargo_vendor//:pin-project-lite-0.2.16"),
                "thiserror": Label("@cargo_vendor//:thiserror-2.0.16"),
                "tokio": Label("@cargo_vendor//:tokio-1.47.1"),
            },
        },
        "http1": {
            _COMMON_CONDITION: {
                "hyper": Label("@cargo_vendor//:hyper-1.7.0"),
                "hyper-util": Label("@cargo_vendor//:hyper-util-0.1.16"),
                "libc": Label("@cargo_vendor//:libc-0.2.175"),
            },
        },
        "http2": {
            _COMMON_CONDITION: {
                "hyper": Label("@cargo_vendor//:hyper-1.7.0"),
                "hyper-util": Label("@cargo_vendor//:hyper-util-0.1.16"),
                "libc": Label("@cargo_vendor//:libc-0.2.175"),
            },
        },
        "http3": {
            _COMMON_CONDITION: {
                "h3": Label("@cargo_vendor//:h3-0.0.8"),
                "h3-quinn": Label("@cargo_vendor//:h3-quinn-0.0.10"),
                "quinn": Label("@cargo_vendor//:quinn-0.11.9"),
            },
        },
        "tls-rustls": {
            _COMMON_CONDITION: {
                "rustls": Label("@cargo_vendor//:rustls-0.23.32"),
                "tokio-rustls": Label("@cargo_vendor//:tokio-rustls-0.26.2"),
            },
        },
        "tower": {
            _COMMON_CONDITION: {
                "tower": Label("@cargo_vendor//:tower-0.5.2"),
            },
        },
        "tracing": {
            _COMMON_CONDITION: {
                "tracing": Label("@cargo_vendor//:tracing-0.1.41"),
            },
        },
    },
    "crates/metrics": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "opentelemetry": Label("@cargo_vendor//:opentelemetry-0.30.0"),
                "opentelemetry_sdk": Label("@cargo_vendor//:opentelemetry_sdk-0.30.0"),
                "parking_lot": Label("@cargo_vendor//:parking_lot-0.12.4"),
            },
        },
        "prometheus": {
            _COMMON_CONDITION: {
                "prometheus-client": Label("@cargo_vendor//:prometheus-client-0.23.1"),
            },
        },
        "tracing": {
            _COMMON_CONDITION: {
                "tracing": Label("@cargo_vendor//:tracing-0.1.41"),
            },
        },
    },
    "crates/metrics/derive": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "darling": Label("@cargo_vendor//:darling-0.21.3"),
                "proc-macro2": Label("@cargo_vendor//:proc-macro2-1.0.101"),
                "quote": Label("@cargo_vendor//:quote-1.0.40"),
                "syn": Label("@cargo_vendor//:syn-2.0.106"),
            },
        },
    },
    "crates/mp4": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "byteorder": Label("@cargo_vendor//:byteorder-1.5.0"),
                "bytes": Label("@cargo_vendor//:bytes-1.10.1"),
                "fixed": Label("@cargo_vendor//:fixed-1.29.0"),
            },
        },
    },
    "crates/nutype-enum": {
    },
    "crates/openapiv3_1": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "bon": Label("@cargo_vendor//:bon-3.7.2"),
                "indexmap": Label("@cargo_vendor//:indexmap-2.11.1"),
                "is_empty": Label("@cargo_vendor//:is_empty-0.3.0"),
                "ordered-float": Label("@cargo_vendor//:ordered-float-5.0.0"),
                "serde": Label("@cargo_vendor//:serde-1.0.220"),
                "serde_json": Label("@cargo_vendor//:serde_json-1.0.145"),
            },
        },
        "yaml": {
            _COMMON_CONDITION: {
                "serde_norway": Label("@cargo_vendor//:serde_norway-0.9.42"),
            },
        },
    },
    "crates/postcompile": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "cargo-manifest": Label("@cargo_vendor//:cargo-manifest-0.19.1"),
                "cargo_metadata": Label("@cargo_vendor//:cargo_metadata-0.21.0"),
                "prettyplease": Label("@cargo_vendor//:prettyplease-0.2.37"),
                "regex": Label("@cargo_vendor//:regex-1.11.2"),
                "serde": Label("@cargo_vendor//:serde-1.0.220"),
                "serde_json": Label("@cargo_vendor//:serde_json-1.0.145"),
                "syn": Label("@cargo_vendor//:syn-2.0.106"),
                "target-triple": Label("@cargo_vendor//:target-triple-0.1.4"),
                "toml": Label("@cargo_vendor//:toml-0.9.5"),
            },
        },
    },
    "crates/pprof": {
        _REQUIRED_FEATURE: {
            "cfg(unix)": {
                "flate2": Label("@cargo_vendor//:flate2-1.1.2"),
                "pprof": Label("@cargo_vendor//:pprof-0.15.0"),
                "thiserror": Label("@cargo_vendor//:thiserror-2.0.16"),
            },
        },
    },
    "crates/rtmp": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "byteorder": Label("@cargo_vendor//:byteorder-1.5.0"),
                "bytes": Label("@cargo_vendor//:bytes-1.10.1"),
                "hmac": Label("@cargo_vendor//:hmac-0.12.1"),
                "num-traits": Label("@cargo_vendor//:num-traits-0.2.19"),
                "rand": Label("@cargo_vendor//:rand-0.9.2"),
                "serde": Label("@cargo_vendor//:serde-1.0.220"),
                "sha2": Label("@cargo_vendor//:sha2-0.10.9"),
                "thiserror": Label("@cargo_vendor//:thiserror-2.0.16"),
                "tokio": Label("@cargo_vendor//:tokio-1.47.1"),
                "tracing": Label("@cargo_vendor//:tracing-0.1.41"),
            },
        },
    },
    "crates/settings": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "config": Label("@cargo_vendor//:config-0.15.15"),
                "serde": Label("@cargo_vendor//:serde-1.0.220"),
                "thiserror": Label("@cargo_vendor//:thiserror-2.0.16"),
            },
        },
        "anyhow": {
            _COMMON_CONDITION: {
                "anyhow": Label("@cargo_vendor//:anyhow-1.0.99"),
            },
        },
        "clap": {
            _COMMON_CONDITION: {
                "clap": Label("@cargo_vendor//:clap-4.5.47"),
            },
        },
        "minijinja": {
            _COMMON_CONDITION: {
                "minijinja": Label("@cargo_vendor//:minijinja-2.12.0"),
            },
        },
    },
    "crates/signal": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "tokio": Label("@cargo_vendor//:tokio-1.47.1"),
            },
        },
        "anyhow": {
            _COMMON_CONDITION: {
                "anyhow": Label("@cargo_vendor//:anyhow-1.0.99"),
            },
        },
    },
    "crates/tinc": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "axum": Label("@cargo_vendor//:axum-0.8.4"),
                "base64": Label("@cargo_vendor//:base64-0.22.1"),
                "bytes": Label("@cargo_vendor//:bytes-1.10.1"),
                "chrono": Label("@cargo_vendor//:chrono-0.4.42"),
                "http": Label("@cargo_vendor//:http-1.3.1"),
                "http-body": Label("@cargo_vendor//:http-body-1.0.1"),
                "http-body-util": Label("@cargo_vendor//:http-body-util-0.1.3"),
                "linear-map": Label("@cargo_vendor//:linear-map-1.2.0"),
                "linkme": Label("@cargo_vendor//:linkme-0.3.33"),
                "mediatype": Label("@cargo_vendor//:mediatype-0.20.0"),
                "num-traits": Label("@cargo_vendor//:num-traits-0.2.19"),
                "regex": Label("@cargo_vendor//:regex-1.11.2"),
                "serde": Label("@cargo_vendor//:serde-1.0.220"),
                "serde_json": Label("@cargo_vendor//:serde_json-1.0.145"),
                "serde_qs": Label("@cargo_vendor//:serde_qs-0.15.0"),
                "thiserror": Label("@cargo_vendor//:thiserror-2.0.16"),
            },
        },
        "prost": {
            _COMMON_CONDITION: {
                "prost": Label("@cargo_vendor//:prost-0.14.1"),
                "prost-types": Label("@cargo_vendor//:prost-types-0.14.1"),
                "tonic-prost": Label("@cargo_vendor//:tonic-prost-0.14.2"),
            },
        },
        "tonic": {
            _COMMON_CONDITION: {
                "tonic": Label("@cargo_vendor//:tonic-0.14.2"),
                "tonic-types": Label("@cargo_vendor//:tonic-types-0.14.2"),
            },
        },
    },
    "crates/tinc/build": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "anyhow": Label("@cargo_vendor//:anyhow-1.0.99"),
                "base64": Label("@cargo_vendor//:base64-0.22.1"),
                "bytes": Label("@cargo_vendor//:bytes-1.10.1"),
                "cel-parser": Label("@cargo_vendor//:cel-parser-0.8.1"),
                "convert_case": Label("@cargo_vendor//:convert_case-0.8.0"),
                "fmtools": Label("@cargo_vendor//:fmtools-0.1.2"),
                "heck": Label("@cargo_vendor//:heck-0.5.0"),
                "indexmap": Label("@cargo_vendor//:indexmap-2.11.1"),
                "num-traits": Label("@cargo_vendor//:num-traits-0.2.19"),
                "prettyplease": Label("@cargo_vendor//:prettyplease-0.2.37"),
                "proc-macro2": Label("@cargo_vendor//:proc-macro2-1.0.101"),
                "quote": Label("@cargo_vendor//:quote-1.0.40"),
                "regex": Label("@cargo_vendor//:regex-1.11.2"),
                "runtime-format": Label("@cargo_vendor//:runtime-format-0.1.3"),
                "serde": Label("@cargo_vendor//:serde-1.0.220"),
                "serde_json": Label("@cargo_vendor//:serde_json-1.0.145"),
                "syn": Label("@cargo_vendor//:syn-2.0.106"),
                "thiserror": Label("@cargo_vendor//:thiserror-2.0.16"),
                "tonic-build": Label("@cargo_vendor//:tonic-build-0.14.2"),
            },
        },
        "prost": {
            _COMMON_CONDITION: {
                "prost": Label("@cargo_vendor//:prost-0.14.1"),
                "prost-build": Label("@cargo_vendor//:prost-build-0.14.1"),
                "prost-reflect": Label("@cargo_vendor//:prost-reflect-0.16.1"),
                "prost-types": Label("@cargo_vendor//:prost-types-0.14.1"),
            },
        },
    },
    "crates/tinc/cel": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "bytes": Label("@cargo_vendor//:bytes-1.10.1"),
                "chrono": Label("@cargo_vendor//:chrono-0.4.42"),
                "email_address": Label("@cargo_vendor//:email_address-0.2.9"),
                "float-cmp": Label("@cargo_vendor//:float-cmp-0.10.0"),
                "fmtools": Label("@cargo_vendor//:fmtools-0.1.2"),
                "linkme": Label("@cargo_vendor//:linkme-0.3.33"),
                "num-traits": Label("@cargo_vendor//:num-traits-0.2.19"),
                "regex": Label("@cargo_vendor//:regex-1.11.2"),
                "thiserror": Label("@cargo_vendor//:thiserror-2.0.16"),
                "ulid": Label("@cargo_vendor//:ulid-1.2.1"),
                "url": Label("@cargo_vendor//:url-2.5.7"),
                "uuid": Label("@cargo_vendor//:uuid-1.18.1"),
            },
        },
    },
    "crates/tinc/derive": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "proc-macro2": Label("@cargo_vendor//:proc-macro2-1.0.101"),
                "quote": Label("@cargo_vendor//:quote-1.0.40"),
                "syn": Label("@cargo_vendor//:syn-2.0.106"),
            },
        },
    },
    "crates/tinc/integration": {
    },
    "crates/tinc/pb-prost": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "prost": Label("@cargo_vendor//:prost-0.14.1"),
                "prost-types": Label("@cargo_vendor//:prost-types-0.14.1"),
            },
        },
    },
    "crates/transmuxer": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "byteorder": Label("@cargo_vendor//:byteorder-1.5.0"),
                "bytes": Label("@cargo_vendor//:bytes-1.10.1"),
                "thiserror": Label("@cargo_vendor//:thiserror-2.0.16"),
            },
        },
    },
    "dev-tools/xtask": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "anyhow": Label("@cargo_vendor//:anyhow-1.0.99"),
                "cargo-platform": Label("@cargo_vendor//:cargo-platform-0.2.0"),
                "cargo_metadata": Label("@cargo_vendor//:cargo_metadata-0.21.0"),
                "chrono": Label("@cargo_vendor//:chrono-0.4.42"),
                "clap": Label("@cargo_vendor//:clap-4.5.47"),
                "fmtools": Label("@cargo_vendor//:fmtools-0.1.2"),
                "hex": Label("@cargo_vendor//:hex-0.4.3"),
                "home": Label("@cargo_vendor//:home-0.5.11"),
                "indent_write": Label("@cargo_vendor//:indent_write-2.2.0"),
                "minijinja": Label("@cargo_vendor//:minijinja-2.12.0"),
                "num_cpus": Label("@cargo_vendor//:num_cpus-1.17.0"),
                "serde": Label("@cargo_vendor//:serde-1.0.220"),
                "serde_json": Label("@cargo_vendor//:serde_json-1.0.145"),
                "sha2": Label("@cargo_vendor//:sha2-0.10.9"),
                "toml_edit": Label("@cargo_vendor//:toml_edit-0.22.27"),
                "tracing": Label("@cargo_vendor//:tracing-0.1.41"),
                "tracing-subscriber": Label("@cargo_vendor//:tracing-subscriber-0.3.20"),
            },
        },
    },
    "misc/utils/protobuf/file_concat": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "anyhow": Label("@cargo_vendor//:anyhow-1.0.99"),
            },
        },
    },
    "misc/utils/rust/analyzer/check": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "anyhow": Label("@cargo_vendor//:anyhow-1.0.99"),
                "camino": Label("@cargo_vendor//:camino-1.1.12"),
                "clap": Label("@cargo_vendor//:clap-4.5.47"),
                "serde": Label("@cargo_vendor//:serde-1.0.220"),
                "serde_json": Label("@cargo_vendor//:serde_json-1.0.145"),
            },
        },
    },
    "misc/utils/rust/analyzer/discover": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "anyhow": Label("@cargo_vendor//:anyhow-1.0.99"),
                "camino": Label("@cargo_vendor//:camino-1.1.12"),
                "clap": Label("@cargo_vendor//:clap-4.5.47"),
                "env_logger": Label("@cargo_vendor//:env_logger-0.10.2"),
                "log": Label("@cargo_vendor//:log-0.4.28"),
                "serde": Label("@cargo_vendor//:serde-1.0.220"),
                "serde_json": Label("@cargo_vendor//:serde_json-1.0.145"),
            },
        },
    },
    "misc/utils/rust/clippy": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "camino": Label("@cargo_vendor//:camino-1.1.12"),
                "clap": Label("@cargo_vendor//:clap-4.5.47"),
                "serde": Label("@cargo_vendor//:serde-1.0.220"),
                "serde_json": Label("@cargo_vendor//:serde_json-1.0.145"),
            },
        },
    },
    "misc/utils/rust/diesel_migration/runner": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "anyhow": Label("@cargo_vendor//:anyhow-1.0.99"),
                "camino": Label("@cargo_vendor//:camino-1.1.12"),
                "clap": Label("@cargo_vendor//:clap-4.5.47"),
                "env_logger": Label("@cargo_vendor//:env_logger-0.11.8"),
                "log": Label("@cargo_vendor//:log-0.4.28"),
                "serde": Label("@cargo_vendor//:serde-1.0.220"),
                "serde_json": Label("@cargo_vendor//:serde_json-1.0.145"),
                "testcontainers": Label("@cargo_vendor//:testcontainers-0.25.0"),
                "tokio": Label("@cargo_vendor//:tokio-1.47.1"),
            },
        },
    },
    "misc/utils/rust/diesel_migration/test": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "anyhow": Label("@cargo_vendor//:anyhow-1.0.99"),
                "camino": Label("@cargo_vendor//:camino-1.1.12"),
                "clap": Label("@cargo_vendor//:clap-4.5.47"),
                "console": Label("@cargo_vendor//:console-0.16.1"),
                "serde": Label("@cargo_vendor//:serde-1.0.220"),
                "serde_json": Label("@cargo_vendor//:serde_json-1.0.145"),
                "similar": Label("@cargo_vendor//:similar-2.7.0"),
            },
        },
    },
    "misc/utils/rust/doc/merger": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "camino": Label("@cargo_vendor//:camino-1.1.12"),
                "clap": Label("@cargo_vendor//:clap-4.5.47"),
                "copy_dir": Label("@cargo_vendor//:copy_dir-0.1.3"),
                "lol_html": Label("@cargo_vendor//:lol_html-2.6.0"),
                "serde": Label("@cargo_vendor//:serde-1.0.220"),
                "serde_json": Label("@cargo_vendor//:serde_json-1.0.145"),
            },
        },
    },
    "misc/utils/rust/doc/test/builder": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "camino": Label("@cargo_vendor//:camino-1.1.12"),
                "clap": Label("@cargo_vendor//:clap-4.5.47"),
                "serde": Label("@cargo_vendor//:serde-1.0.220"),
                "serde_json": Label("@cargo_vendor//:serde_json-1.0.145"),
            },
        },
    },
    "misc/utils/rust/doc/test/common": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "camino": Label("@cargo_vendor//:camino-1.1.12"),
                "serde": Label("@cargo_vendor//:serde-1.0.220"),
            },
        },
    },
    "misc/utils/rust/doc/test/runner": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "camino": Label("@cargo_vendor//:camino-1.1.12"),
                "clap": Label("@cargo_vendor//:clap-4.5.47"),
                "serde": Label("@cargo_vendor//:serde-1.0.220"),
                "serde_json": Label("@cargo_vendor//:serde_json-1.0.145"),
            },
        },
    },
    "misc/utils/rust/doc/wrapper": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "camino": Label("@cargo_vendor//:camino-1.1.12"),
                "camino-tempfile": Label("@cargo_vendor//:camino-tempfile-1.4.1"),
                "clap": Label("@cargo_vendor//:clap-4.5.47"),
            },
        },
    },
    "misc/utils/rust/sync_readme": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "anyhow": Label("@cargo_vendor//:anyhow-1.0.99"),
                "camino": Label("@cargo_vendor//:camino-1.1.12"),
                "cargo_toml": Label("@cargo_vendor//:cargo_toml-0.22.3"),
                "clap": Label("@cargo_vendor//:clap-4.5.47"),
                "pulldown-cmark": Label("@cargo_vendor//:pulldown-cmark-0.13.0"),
                "pulldown-cmark-to-cmark": Label("@cargo_vendor//:pulldown-cmark-to-cmark-21.0.0"),
                "regex": Label("@cargo_vendor//:regex-1.11.2"),
                "rustdoc-types": Label("@cargo_vendor//:rustdoc-types-0.55.0"),
                "serde": Label("@cargo_vendor//:serde-1.0.220"),
                "serde_json": Label("@cargo_vendor//:serde_json-1.0.145"),
                "toml": Label("@cargo_vendor//:toml-0.9.5"),
            },
        },
    },
    "misc/utils/rust/sync_readme/common": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "camino": Label("@cargo_vendor//:camino-1.1.12"),
                "serde": Label("@cargo_vendor//:serde-1.0.220"),
            },
        },
    },
    "misc/utils/rust/sync_readme/test_runner": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "anyhow": Label("@cargo_vendor//:anyhow-1.0.99"),
                "camino": Label("@cargo_vendor//:camino-1.1.12"),
                "clap": Label("@cargo_vendor//:clap-4.5.47"),
                "console": Label("@cargo_vendor//:console-0.16.1"),
                "serde_json": Label("@cargo_vendor//:serde_json-1.0.145"),
                "similar": Label("@cargo_vendor//:similar-2.7.0"),
            },
        },
    },
    "misc/utils/rust/test_runner": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "camino": Label("@cargo_vendor//:camino-1.1.12"),
                "clap": Label("@cargo_vendor//:clap-4.5.47"),
                "target-spec": Label("@cargo_vendor//:target-spec-3.5.0"),
            },
        },
    },
    "misc/utils/rust/test_runner/lib": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "camino": Label("@cargo_vendor//:camino-1.1.12"),
                "cargo_metadata": Label("@cargo_vendor//:cargo_metadata-0.21.0"),
                "clap": Label("@cargo_vendor//:clap-4.5.47"),
                "guppy": Label("@cargo_vendor//:guppy-0.17.20"),
                "nextest-filtering": Label("@cargo_vendor//:nextest-filtering-0.16.0"),
                "nextest-metadata": Label("@cargo_vendor//:nextest-metadata-0.12.2"),
                "nextest-runner": Label("@cargo_vendor//:nextest-runner-0.85.0"),
                "serde_json": Label("@cargo_vendor//:serde_json-1.0.145"),
                "toml_edit": Label("@cargo_vendor//:toml_edit-0.23.4"),
                "walkdir": Label("@cargo_vendor//:walkdir-2.5.0"),
            },
        },
    },
    "tools/cargo/clippy": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "anyhow": Label("@cargo_vendor//:anyhow-1.0.99"),
                "camino": Label("@cargo_vendor//:camino-1.1.12"),
                "clap": Label("@cargo_vendor//:clap-4.5.47"),
                "env_logger": Label("@cargo_vendor//:env_logger-0.11.8"),
                "log": Label("@cargo_vendor//:log-0.4.28"),
                "rustfix": Label("@cargo_vendor//:rustfix-0.9.1"),
                "serde_json": Label("@cargo_vendor//:serde_json-1.0.145"),
            },
        },
    },
    "tools/cargo/sync-readme": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "anyhow": Label("@cargo_vendor//:anyhow-1.0.99"),
                "camino": Label("@cargo_vendor//:camino-1.1.12"),
                "clap": Label("@cargo_vendor//:clap-4.5.47"),
                "env_logger": Label("@cargo_vendor//:env_logger-0.11.8"),
                "log": Label("@cargo_vendor//:log-0.4.28"),
                "serde_json": Label("@cargo_vendor//:serde_json-1.0.145"),
            },
        },
    },
    "tools/diesel-schema": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "anyhow": Label("@cargo_vendor//:anyhow-1.0.99"),
                "camino": Label("@cargo_vendor//:camino-1.1.12"),
                "clap": Label("@cargo_vendor//:clap-4.5.47"),
                "env_logger": Label("@cargo_vendor//:env_logger-0.11.8"),
                "log": Label("@cargo_vendor//:log-0.4.28"),
                "serde_json": Label("@cargo_vendor//:serde_json-1.0.145"),
            },
        },
    },
}

_NORMAL_ALIASES = {
    "cloud/core": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "cloud/core/cedar": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "cloud/core/db-types": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "cloud/core/emails": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "cloud/core/traits": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "cloud/email": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "cloud/email/traits": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "cloud/ext-traits": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "cloud/geo-ip": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "cloud/id": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "cloud/proto": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "cloud/video/ingest": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "cloud/video/ingest/traits": {
    },
    "crates/aac": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/amf0": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
        "serde": {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/av1": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/batching": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/bootstrap": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/bootstrap-telemetry": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
        "opentelemetry": {
            _COMMON_CONDITION: {
            },
        },
        "opentelemetry-appender-tracing": {
            _COMMON_CONDITION: {
            },
        },
        "prometheus-client": {
            _COMMON_CONDITION: {
            },
        },
        "querystring": {
            _COMMON_CONDITION: {
            },
        },
        "thiserror": {
            _COMMON_CONDITION: {
            },
        },
        "tokio": {
            _COMMON_CONDITION: {
            },
        },
        "tracing-opentelemetry": {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/bootstrap/derive": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/bytes-util": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
        "serde": {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/cedar-policy": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/cedar-policy/codegen": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/changelog": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/context": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/expgolomb": {
    },
    "crates/ffmpeg": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
        "channel": {
            _COMMON_CONDITION: {
            },
        },
        "crossbeam-channel": {
            _COMMON_CONDITION: {
            },
        },
        "tokio-channel": {
            _COMMON_CONDITION: {
            },
        },
        "tracing": {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/flv": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/future-ext": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/h264": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/h265": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/http": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
        "http1": {
            _COMMON_CONDITION: {
            },
        },
        "http2": {
            _COMMON_CONDITION: {
            },
        },
        "http3": {
            _COMMON_CONDITION: {
            },
        },
        "tls-rustls": {
            _COMMON_CONDITION: {
            },
        },
        "tower": {
            _COMMON_CONDITION: {
            },
        },
        "tracing": {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/metrics": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
        "prometheus": {
            _COMMON_CONDITION: {
            },
        },
        "tracing": {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/metrics/derive": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/mp4": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/nutype-enum": {
    },
    "crates/openapiv3_1": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
        "yaml": {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/postcompile": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/pprof": {
        _REQUIRED_FEATURE: {
            "cfg(unix)": {
            },
        },
    },
    "crates/rtmp": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/settings": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
        "anyhow": {
            _COMMON_CONDITION: {
            },
        },
        "clap": {
            _COMMON_CONDITION: {
            },
        },
        "minijinja": {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/signal": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
        "anyhow": {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/tinc": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
        "prost": {
            _COMMON_CONDITION: {
            },
        },
        "tonic": {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/tinc/build": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
        "prost": {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/tinc/cel": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/tinc/derive": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/tinc/integration": {
    },
    "crates/tinc/pb-prost": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/transmuxer": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "dev-tools/xtask": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "misc/utils/protobuf/file_concat": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "misc/utils/rust/analyzer/check": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "misc/utils/rust/analyzer/discover": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "misc/utils/rust/clippy": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "misc/utils/rust/diesel_migration/runner": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "misc/utils/rust/diesel_migration/test": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "misc/utils/rust/doc/merger": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "misc/utils/rust/doc/test/builder": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "misc/utils/rust/doc/test/common": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "misc/utils/rust/doc/test/runner": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "misc/utils/rust/doc/wrapper": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "misc/utils/rust/sync_readme": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "misc/utils/rust/sync_readme/common": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "misc/utils/rust/sync_readme/test_runner": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "misc/utils/rust/test_runner": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "misc/utils/rust/test_runner/lib": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "tools/cargo/clippy": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "tools/cargo/sync-readme": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "tools/diesel-schema": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
}

_NORMAL_DEV_DEPENDENCIES = {
    "cloud/core": {
    },
    "cloud/core/cedar": {
    },
    "cloud/core/db-types": {
    },
    "cloud/core/emails": {
    },
    "cloud/core/traits": {
    },
    "cloud/email": {
    },
    "cloud/email/traits": {
    },
    "cloud/ext-traits": {
    },
    "cloud/geo-ip": {
    },
    "cloud/id": {
    },
    "cloud/proto": {
    },
    "cloud/video/ingest": {
    },
    "cloud/video/ingest/traits": {
    },
    "crates/aac": {
    },
    "crates/amf0": {
    },
    "crates/av1": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "insta": Label("@cargo_vendor//:insta-1.43.2"),
            },
        },
    },
    "crates/batching": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "criterion": Label("@cargo_vendor//:criterion-0.7.0"),
                "futures": Label("@cargo_vendor//:futures-0.3.31"),
                "tokio": Label("@cargo_vendor//:tokio-1.47.1"),
                "tokio-test": Label("@cargo_vendor//:tokio-test-0.4.4"),
            },
        },
    },
    "crates/bootstrap": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "insta": Label("@cargo_vendor//:insta-1.43.2"),
                "serde": Label("@cargo_vendor//:serde-1.0.220"),
                "tracing": Label("@cargo_vendor//:tracing-0.1.41"),
                "tracing-subscriber": Label("@cargo_vendor//:tracing-subscriber-0.3.20"),
            },
        },
    },
    "crates/bootstrap-telemetry": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "reqwest": Label("@cargo_vendor//:reqwest-0.12.23"),
                "rustls": Label("@cargo_vendor//:rustls-0.23.32"),
            },
        },
    },
    "crates/bootstrap/derive": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "insta": Label("@cargo_vendor//:insta-1.43.2"),
                "prettyplease": Label("@cargo_vendor//:prettyplease-0.2.37"),
            },
        },
    },
    "crates/bytes-util": {
    },
    "crates/cedar-policy": {
    },
    "crates/cedar-policy/codegen": {
    },
    "crates/changelog": {
    },
    "crates/context": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "tokio": Label("@cargo_vendor//:tokio-1.47.1"),
                "tokio-test": Label("@cargo_vendor//:tokio-test-0.4.4"),
            },
        },
    },
    "crates/expgolomb": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "bytes": Label("@cargo_vendor//:bytes-1.10.1"),
            },
        },
    },
    "crates/ffmpeg": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "bytes": Label("@cargo_vendor//:bytes-1.10.1"),
                "insta": Label("@cargo_vendor//:insta-1.43.2"),
                "rand": Label("@cargo_vendor//:rand-0.9.2"),
                "sha2": Label("@cargo_vendor//:sha2-0.10.9"),
                "tempfile": Label("@cargo_vendor//:tempfile-3.22.0"),
                "tracing-subscriber": Label("@cargo_vendor//:tracing-subscriber-0.3.20"),
                "tracing-test": Label("@cargo_vendor//:tracing-test-0.2.5"),
            },
        },
    },
    "crates/flv": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "insta": Label("@cargo_vendor//:insta-1.43.2"),
            },
        },
    },
    "crates/future-ext": {
    },
    "crates/h264": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "insta": Label("@cargo_vendor//:insta-1.43.2"),
            },
        },
    },
    "crates/h265": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "insta": Label("@cargo_vendor//:insta-1.43.2"),
            },
        },
    },
    "crates/http": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "axum": Label("@cargo_vendor//:axum-0.8.4"),
                "reqwest": Label("@cargo_vendor//:reqwest-0.12.23"),
                "rustls-pemfile": Label("@cargo_vendor//:rustls-pemfile-2.2.0"),
                "tokio": Label("@cargo_vendor//:tokio-1.47.1"),
                "tokio-test": Label("@cargo_vendor//:tokio-test-0.4.4"),
                "tracing": Label("@cargo_vendor//:tracing-0.1.41"),
                "tracing-subscriber": Label("@cargo_vendor//:tracing-subscriber-0.3.20"),
            },
        },
    },
    "crates/metrics": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "insta": Label("@cargo_vendor//:insta-1.43.2"),
                "opentelemetry-stdout": Label("@cargo_vendor//:opentelemetry-stdout-0.30.0"),
                "tokio": Label("@cargo_vendor//:tokio-1.47.1"),
            },
        },
    },
    "crates/metrics/derive": {
    },
    "crates/mp4": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "serde": Label("@cargo_vendor//:serde-1.0.220"),
                "serde_json": Label("@cargo_vendor//:serde_json-1.0.145"),
            },
        },
    },
    "crates/nutype-enum": {
    },
    "crates/openapiv3_1": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "insta": Label("@cargo_vendor//:insta-1.43.2"),
            },
        },
    },
    "crates/postcompile": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "insta": Label("@cargo_vendor//:insta-1.43.2"),
            },
        },
    },
    "crates/pprof": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "rand": Label("@cargo_vendor//:rand-0.9.2"),
            },
        },
    },
    "crates/rtmp": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "serde_json": Label("@cargo_vendor//:serde_json-1.0.145"),
                "tokio": Label("@cargo_vendor//:tokio-1.47.1"),
                "tracing": Label("@cargo_vendor//:tracing-0.1.41"),
                "tracing-subscriber": Label("@cargo_vendor//:tracing-subscriber-0.3.20"),
            },
        },
    },
    "crates/settings": {
    },
    "crates/signal": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "futures": Label("@cargo_vendor//:futures-0.3.31"),
                "libc": Label("@cargo_vendor//:libc-0.2.175"),
                "tokio": Label("@cargo_vendor//:tokio-1.47.1"),
                "tokio-test": Label("@cargo_vendor//:tokio-test-0.4.4"),
            },
            "cfg(windows)": {
                "tokio-stream": Label("@cargo_vendor//:tokio-stream-0.1.17"),
            },
        },
    },
    "crates/tinc": {
    },
    "crates/tinc/build": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "insta": Label("@cargo_vendor//:insta-1.43.2"),
            },
        },
    },
    "crates/tinc/cel": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "insta": Label("@cargo_vendor//:insta-1.43.2"),
            },
        },
    },
    "crates/tinc/derive": {
    },
    "crates/tinc/integration": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "bytes": Label("@cargo_vendor//:bytes-1.10.1"),
                "http": Label("@cargo_vendor//:http-1.3.1"),
                "http-body-util": Label("@cargo_vendor//:http-body-util-0.1.3"),
                "insta": Label("@cargo_vendor//:insta-1.43.2"),
                "prost": Label("@cargo_vendor//:prost-0.14.1"),
                "prost-types": Label("@cargo_vendor//:prost-types-0.14.1"),
                "rand": Label("@cargo_vendor//:rand-0.9.2"),
                "serde": Label("@cargo_vendor//:serde-1.0.220"),
                "serde_json": Label("@cargo_vendor//:serde_json-1.0.145"),
                "tokio": Label("@cargo_vendor//:tokio-1.47.1"),
                "tonic": Label("@cargo_vendor//:tonic-0.14.2"),
                "tower": Label("@cargo_vendor//:tower-0.5.2"),
            },
        },
    },
    "crates/tinc/pb-prost": {
    },
    "crates/transmuxer": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "serde": Label("@cargo_vendor//:serde-1.0.220"),
                "serde_json": Label("@cargo_vendor//:serde_json-1.0.145"),
            },
        },
    },
    "dev-tools/xtask": {
    },
    "misc/utils/protobuf/file_concat": {
    },
    "misc/utils/rust/analyzer/check": {
    },
    "misc/utils/rust/analyzer/discover": {
    },
    "misc/utils/rust/clippy": {
    },
    "misc/utils/rust/diesel_migration/runner": {
    },
    "misc/utils/rust/diesel_migration/test": {
    },
    "misc/utils/rust/doc/merger": {
    },
    "misc/utils/rust/doc/test/builder": {
    },
    "misc/utils/rust/doc/test/common": {
    },
    "misc/utils/rust/doc/test/runner": {
    },
    "misc/utils/rust/doc/wrapper": {
    },
    "misc/utils/rust/sync_readme": {
    },
    "misc/utils/rust/sync_readme/common": {
    },
    "misc/utils/rust/sync_readme/test_runner": {
    },
    "misc/utils/rust/test_runner": {
    },
    "misc/utils/rust/test_runner/lib": {
    },
    "tools/cargo/clippy": {
    },
    "tools/cargo/sync-readme": {
    },
    "tools/diesel-schema": {
    },
}

_NORMAL_DEV_ALIASES = {
    "cloud/core": {
    },
    "cloud/core/cedar": {
    },
    "cloud/core/db-types": {
    },
    "cloud/core/emails": {
    },
    "cloud/core/traits": {
    },
    "cloud/email": {
    },
    "cloud/email/traits": {
    },
    "cloud/ext-traits": {
    },
    "cloud/geo-ip": {
    },
    "cloud/id": {
    },
    "cloud/proto": {
    },
    "cloud/video/ingest": {
    },
    "cloud/video/ingest/traits": {
    },
    "crates/aac": {
    },
    "crates/amf0": {
    },
    "crates/av1": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/batching": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/bootstrap": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/bootstrap-telemetry": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/bootstrap/derive": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/bytes-util": {
    },
    "crates/cedar-policy": {
    },
    "crates/cedar-policy/codegen": {
    },
    "crates/changelog": {
    },
    "crates/context": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/expgolomb": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/ffmpeg": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/flv": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/future-ext": {
    },
    "crates/h264": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/h265": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/http": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/metrics": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/metrics/derive": {
    },
    "crates/mp4": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/nutype-enum": {
    },
    "crates/openapiv3_1": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/postcompile": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/pprof": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/rtmp": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/settings": {
    },
    "crates/signal": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
            "cfg(windows)": {
            },
        },
    },
    "crates/tinc": {
    },
    "crates/tinc/build": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/tinc/cel": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/tinc/derive": {
    },
    "crates/tinc/integration": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/tinc/pb-prost": {
    },
    "crates/transmuxer": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "dev-tools/xtask": {
    },
    "misc/utils/protobuf/file_concat": {
    },
    "misc/utils/rust/analyzer/check": {
    },
    "misc/utils/rust/analyzer/discover": {
    },
    "misc/utils/rust/clippy": {
    },
    "misc/utils/rust/diesel_migration/runner": {
    },
    "misc/utils/rust/diesel_migration/test": {
    },
    "misc/utils/rust/doc/merger": {
    },
    "misc/utils/rust/doc/test/builder": {
    },
    "misc/utils/rust/doc/test/common": {
    },
    "misc/utils/rust/doc/test/runner": {
    },
    "misc/utils/rust/doc/wrapper": {
    },
    "misc/utils/rust/sync_readme": {
    },
    "misc/utils/rust/sync_readme/common": {
    },
    "misc/utils/rust/sync_readme/test_runner": {
    },
    "misc/utils/rust/test_runner": {
    },
    "misc/utils/rust/test_runner/lib": {
    },
    "tools/cargo/clippy": {
    },
    "tools/cargo/sync-readme": {
    },
    "tools/diesel-schema": {
    },
}

_PROC_MACRO_DEPENDENCIES = {
    "cloud/core": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "async-trait": Label("@cargo_vendor//:async-trait-0.1.89"),
                "sailfish-macros": Label("@cargo_vendor//:sailfish-macros-0.10.0"),
                "serde_derive": Label("@cargo_vendor//:serde_derive-1.0.220"),
                "smart-default": Label("@cargo_vendor//:smart-default-0.7.1"),
            },
        },
    },
    "cloud/core/cedar": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "serde_derive": Label("@cargo_vendor//:serde_derive-1.0.220"),
            },
        },
    },
    "cloud/core/db-types": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "serde_derive": Label("@cargo_vendor//:serde_derive-1.0.220"),
            },
        },
    },
    "cloud/core/emails": {
    },
    "cloud/core/traits": {
    },
    "cloud/email": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "async-trait": Label("@cargo_vendor//:async-trait-0.1.89"),
                "serde_derive": Label("@cargo_vendor//:serde_derive-1.0.220"),
                "smart-default": Label("@cargo_vendor//:smart-default-0.7.1"),
            },
        },
    },
    "cloud/email/traits": {
    },
    "cloud/ext-traits": {
    },
    "cloud/geo-ip": {
    },
    "cloud/id": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "serde_derive": Label("@cargo_vendor//:serde_derive-1.0.220"),
            },
        },
    },
    "cloud/proto": {
    },
    "cloud/video/ingest": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "serde_derive": Label("@cargo_vendor//:serde_derive-1.0.220"),
                "smart-default": Label("@cargo_vendor//:smart-default-0.7.1"),
            },
        },
    },
    "cloud/video/ingest/traits": {
    },
    "crates/aac": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "num-derive": Label("@cargo_vendor//:num-derive-0.4.2"),
            },
        },
        "docs": {
            _COMMON_CONDITION: {
                "document-features": Label("@cargo_vendor//:document-features-0.2.11"),
            },
        },
    },
    "crates/amf0": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "num-derive": Label("@cargo_vendor//:num-derive-0.4.2"),
            },
        },
        "docs": {
            _COMMON_CONDITION: {
                "document-features": Label("@cargo_vendor//:document-features-0.2.11"),
            },
        },
    },
    "crates/av1": {
        "docs": {
            _COMMON_CONDITION: {
                "document-features": Label("@cargo_vendor//:document-features-0.2.11"),
            },
        },
    },
    "crates/batching": {
        "docs": {
            _COMMON_CONDITION: {
                "document-features": Label("@cargo_vendor//:document-features-0.2.11"),
            },
        },
    },
    "crates/bootstrap": {
        "docs": {
            _COMMON_CONDITION: {
                "document-features": Label("@cargo_vendor//:document-features-0.2.11"),
            },
        },
    },
    "crates/bootstrap-telemetry": {
        "docs": {
            _COMMON_CONDITION: {
                "document-features": Label("@cargo_vendor//:document-features-0.2.11"),
            },
        },
    },
    "crates/bootstrap/derive": {
    },
    "crates/bytes-util": {
        "docs": {
            _COMMON_CONDITION: {
                "document-features": Label("@cargo_vendor//:document-features-0.2.11"),
            },
        },
    },
    "crates/cedar-policy": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "serde_derive": Label("@cargo_vendor//:serde_derive-1.0.220"),
            },
        },
        "docs": {
            _COMMON_CONDITION: {
                "document-features": Label("@cargo_vendor//:document-features-0.2.11"),
            },
        },
    },
    "crates/cedar-policy/codegen": {
    },
    "crates/changelog": {
    },
    "crates/context": {
        "docs": {
            _COMMON_CONDITION: {
                "document-features": Label("@cargo_vendor//:document-features-0.2.11"),
            },
        },
    },
    "crates/expgolomb": {
        "docs": {
            _COMMON_CONDITION: {
                "document-features": Label("@cargo_vendor//:document-features-0.2.11"),
            },
        },
    },
    "crates/ffmpeg": {
        "docs": {
            _COMMON_CONDITION: {
                "document-features": Label("@cargo_vendor//:document-features-0.2.11"),
            },
        },
    },
    "crates/flv": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "bitmask-enum": Label("@cargo_vendor//:bitmask-enum-2.2.5"),
                "num-derive": Label("@cargo_vendor//:num-derive-0.4.2"),
                "serde_derive": Label("@cargo_vendor//:serde_derive-1.0.220"),
            },
        },
        "docs": {
            _COMMON_CONDITION: {
                "document-features": Label("@cargo_vendor//:document-features-0.2.11"),
            },
        },
    },
    "crates/future-ext": {
        "docs": {
            _COMMON_CONDITION: {
                "document-features": Label("@cargo_vendor//:document-features-0.2.11"),
            },
        },
    },
    "crates/h264": {
        "docs": {
            _COMMON_CONDITION: {
                "document-features": Label("@cargo_vendor//:document-features-0.2.11"),
            },
        },
    },
    "crates/h265": {
        "docs": {
            _COMMON_CONDITION: {
                "document-features": Label("@cargo_vendor//:document-features-0.2.11"),
            },
        },
    },
    "crates/http": {
        "docs": {
            _COMMON_CONDITION: {
                "document-features": Label("@cargo_vendor//:document-features-0.2.11"),
            },
        },
    },
    "crates/metrics": {
        "docs": {
            _COMMON_CONDITION: {
                "document-features": Label("@cargo_vendor//:document-features-0.2.11"),
            },
        },
    },
    "crates/metrics/derive": {
    },
    "crates/mp4": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "paste": Label("@cargo_vendor//:paste-1.0.15"),
            },
        },
        "docs": {
            _COMMON_CONDITION: {
                "document-features": Label("@cargo_vendor//:document-features-0.2.11"),
            },
        },
    },
    "crates/nutype-enum": {
        "docs": {
            _COMMON_CONDITION: {
                "document-features": Label("@cargo_vendor//:document-features-0.2.11"),
            },
        },
    },
    "crates/openapiv3_1": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "serde_derive": Label("@cargo_vendor//:serde_derive-1.0.220"),
            },
        },
        "docs": {
            _COMMON_CONDITION: {
                "document-features": Label("@cargo_vendor//:document-features-0.2.11"),
            },
        },
    },
    "crates/postcompile": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "serde_derive": Label("@cargo_vendor//:serde_derive-1.0.220"),
            },
        },
        "docs": {
            _COMMON_CONDITION: {
                "document-features": Label("@cargo_vendor//:document-features-0.2.11"),
            },
        },
    },
    "crates/pprof": {
        "docs": {
            _COMMON_CONDITION: {
                "document-features": Label("@cargo_vendor//:document-features-0.2.11"),
            },
        },
    },
    "crates/rtmp": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "bitmask-enum": Label("@cargo_vendor//:bitmask-enum-2.2.5"),
                "num-derive": Label("@cargo_vendor//:num-derive-0.4.2"),
                "serde_derive": Label("@cargo_vendor//:serde_derive-1.0.220"),
            },
        },
        "docs": {
            _COMMON_CONDITION: {
                "document-features": Label("@cargo_vendor//:document-features-0.2.11"),
            },
        },
    },
    "crates/settings": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "serde_derive": Label("@cargo_vendor//:serde_derive-1.0.220"),
            },
        },
        "docs": {
            _COMMON_CONDITION: {
                "document-features": Label("@cargo_vendor//:document-features-0.2.11"),
            },
        },
    },
    "crates/signal": {
        "docs": {
            _COMMON_CONDITION: {
                "document-features": Label("@cargo_vendor//:document-features-0.2.11"),
            },
        },
    },
    "crates/tinc": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "serde_derive": Label("@cargo_vendor//:serde_derive-1.0.220"),
                "serde_repr": Label("@cargo_vendor//:serde_repr-0.1.20"),
            },
        },
        "docs": {
            _COMMON_CONDITION: {
                "document-features": Label("@cargo_vendor//:document-features-0.2.11"),
            },
        },
    },
    "crates/tinc/build": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "serde_derive": Label("@cargo_vendor//:serde_derive-1.0.220"),
            },
        },
        "docs": {
            _COMMON_CONDITION: {
                "document-features": Label("@cargo_vendor//:document-features-0.2.11"),
            },
        },
    },
    "crates/tinc/cel": {
        "docs": {
            _COMMON_CONDITION: {
                "document-features": Label("@cargo_vendor//:document-features-0.2.11"),
            },
        },
    },
    "crates/tinc/derive": {
    },
    "crates/tinc/integration": {
    },
    "crates/tinc/pb-prost": {
        "docs": {
            _COMMON_CONDITION: {
                "document-features": Label("@cargo_vendor//:document-features-0.2.11"),
            },
        },
    },
    "crates/transmuxer": {
        "docs": {
            _COMMON_CONDITION: {
                "document-features": Label("@cargo_vendor//:document-features-0.2.11"),
            },
        },
    },
    "dev-tools/xtask": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "serde_derive": Label("@cargo_vendor//:serde_derive-1.0.220"),
            },
        },
    },
    "misc/utils/protobuf/file_concat": {
    },
    "misc/utils/rust/analyzer/check": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "serde_derive": Label("@cargo_vendor//:serde_derive-1.0.220"),
            },
        },
    },
    "misc/utils/rust/analyzer/discover": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "serde_derive": Label("@cargo_vendor//:serde_derive-1.0.220"),
            },
        },
    },
    "misc/utils/rust/clippy": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "serde_derive": Label("@cargo_vendor//:serde_derive-1.0.220"),
            },
        },
    },
    "misc/utils/rust/diesel_migration/runner": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "serde_derive": Label("@cargo_vendor//:serde_derive-1.0.220"),
            },
        },
    },
    "misc/utils/rust/diesel_migration/test": {
    },
    "misc/utils/rust/doc/merger": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "serde_derive": Label("@cargo_vendor//:serde_derive-1.0.220"),
            },
        },
    },
    "misc/utils/rust/doc/test/builder": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "serde_derive": Label("@cargo_vendor//:serde_derive-1.0.220"),
            },
        },
    },
    "misc/utils/rust/doc/test/common": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "serde_derive": Label("@cargo_vendor//:serde_derive-1.0.220"),
            },
        },
    },
    "misc/utils/rust/doc/test/runner": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "serde_derive": Label("@cargo_vendor//:serde_derive-1.0.220"),
            },
        },
    },
    "misc/utils/rust/doc/wrapper": {
    },
    "misc/utils/rust/sync_readme": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "serde_derive": Label("@cargo_vendor//:serde_derive-1.0.220"),
            },
        },
    },
    "misc/utils/rust/sync_readme/common": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "serde_derive": Label("@cargo_vendor//:serde_derive-1.0.220"),
            },
        },
    },
    "misc/utils/rust/sync_readme/test_runner": {
    },
    "misc/utils/rust/test_runner": {
    },
    "misc/utils/rust/test_runner/lib": {
    },
    "tools/cargo/clippy": {
    },
    "tools/cargo/sync-readme": {
    },
    "tools/diesel-schema": {
    },
}

_PROC_MACRO_ALIASES = {
    "cloud/core": {
    },
    "cloud/core/cedar": {
    },
    "cloud/core/db-types": {
    },
    "cloud/core/emails": {
    },
    "cloud/core/traits": {
    },
    "cloud/email": {
    },
    "cloud/email/traits": {
    },
    "cloud/ext-traits": {
    },
    "cloud/geo-ip": {
    },
    "cloud/id": {
    },
    "cloud/proto": {
    },
    "cloud/video/ingest": {
    },
    "cloud/video/ingest/traits": {
    },
    "crates/aac": {
    },
    "crates/amf0": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/av1": {
    },
    "crates/batching": {
    },
    "crates/bootstrap": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/bootstrap-telemetry": {
    },
    "crates/bootstrap/derive": {
    },
    "crates/bytes-util": {
    },
    "crates/cedar-policy": {
    },
    "crates/cedar-policy/codegen": {
    },
    "crates/changelog": {
    },
    "crates/context": {
    },
    "crates/expgolomb": {
    },
    "crates/ffmpeg": {
    },
    "crates/flv": {
    },
    "crates/future-ext": {
    },
    "crates/h264": {
    },
    "crates/h265": {
    },
    "crates/http": {
    },
    "crates/metrics": {
    },
    "crates/metrics/derive": {
    },
    "crates/mp4": {
    },
    "crates/nutype-enum": {
    },
    "crates/openapiv3_1": {
    },
    "crates/postcompile": {
    },
    "crates/pprof": {
    },
    "crates/rtmp": {
    },
    "crates/settings": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/signal": {
    },
    "crates/tinc": {
    },
    "crates/tinc/build": {
    },
    "crates/tinc/cel": {
    },
    "crates/tinc/derive": {
    },
    "crates/tinc/integration": {
    },
    "crates/tinc/pb-prost": {
    },
    "crates/transmuxer": {
    },
    "dev-tools/xtask": {
    },
    "misc/utils/protobuf/file_concat": {
    },
    "misc/utils/rust/analyzer/check": {
    },
    "misc/utils/rust/analyzer/discover": {
    },
    "misc/utils/rust/clippy": {
    },
    "misc/utils/rust/diesel_migration/runner": {
    },
    "misc/utils/rust/diesel_migration/test": {
    },
    "misc/utils/rust/doc/merger": {
    },
    "misc/utils/rust/doc/test/builder": {
    },
    "misc/utils/rust/doc/test/common": {
    },
    "misc/utils/rust/doc/test/runner": {
    },
    "misc/utils/rust/doc/wrapper": {
    },
    "misc/utils/rust/sync_readme": {
    },
    "misc/utils/rust/sync_readme/common": {
    },
    "misc/utils/rust/sync_readme/test_runner": {
    },
    "misc/utils/rust/test_runner": {
    },
    "misc/utils/rust/test_runner/lib": {
    },
    "tools/cargo/clippy": {
    },
    "tools/cargo/sync-readme": {
    },
    "tools/diesel-schema": {
    },
}

_PROC_MACRO_DEV_DEPENDENCIES = {
    "cloud/core": {
    },
    "cloud/core/cedar": {
    },
    "cloud/core/db-types": {
    },
    "cloud/core/emails": {
    },
    "cloud/core/traits": {
    },
    "cloud/email": {
    },
    "cloud/email/traits": {
    },
    "cloud/ext-traits": {
    },
    "cloud/geo-ip": {
    },
    "cloud/id": {
    },
    "cloud/proto": {
    },
    "cloud/video/ingest": {
    },
    "cloud/video/ingest/traits": {
    },
    "crates/aac": {
    },
    "crates/amf0": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "serde_derive": Label("@cargo_vendor//:serde_derive-1.0.220"),
            },
        },
    },
    "crates/av1": {
    },
    "crates/batching": {
    },
    "crates/bootstrap": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "serde_derive": Label("@cargo_vendor//:serde_derive-1.0.220"),
                "smart-default": Label("@cargo_vendor//:smart-default-0.7.1"),
            },
        },
    },
    "crates/bootstrap-telemetry": {
    },
    "crates/bootstrap/derive": {
    },
    "crates/bytes-util": {
    },
    "crates/cedar-policy": {
    },
    "crates/cedar-policy/codegen": {
    },
    "crates/changelog": {
    },
    "crates/context": {
    },
    "crates/expgolomb": {
    },
    "crates/ffmpeg": {
    },
    "crates/flv": {
    },
    "crates/future-ext": {
    },
    "crates/h264": {
    },
    "crates/h265": {
    },
    "crates/http": {
    },
    "crates/metrics": {
    },
    "crates/metrics/derive": {
    },
    "crates/mp4": {
    },
    "crates/nutype-enum": {
    },
    "crates/openapiv3_1": {
    },
    "crates/postcompile": {
    },
    "crates/pprof": {
    },
    "crates/rtmp": {
    },
    "crates/settings": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "serde_derive": Label("@cargo_vendor//:serde_derive-1.0.220"),
                "smart-default": Label("@cargo_vendor//:smart-default-0.7.1"),
            },
        },
    },
    "crates/signal": {
    },
    "crates/tinc": {
    },
    "crates/tinc/build": {
    },
    "crates/tinc/cel": {
    },
    "crates/tinc/derive": {
    },
    "crates/tinc/integration": {
    },
    "crates/tinc/pb-prost": {
    },
    "crates/transmuxer": {
    },
    "dev-tools/xtask": {
    },
    "misc/utils/protobuf/file_concat": {
    },
    "misc/utils/rust/analyzer/check": {
    },
    "misc/utils/rust/analyzer/discover": {
    },
    "misc/utils/rust/clippy": {
    },
    "misc/utils/rust/diesel_migration/runner": {
    },
    "misc/utils/rust/diesel_migration/test": {
    },
    "misc/utils/rust/doc/merger": {
    },
    "misc/utils/rust/doc/test/builder": {
    },
    "misc/utils/rust/doc/test/common": {
    },
    "misc/utils/rust/doc/test/runner": {
    },
    "misc/utils/rust/doc/wrapper": {
    },
    "misc/utils/rust/sync_readme": {
    },
    "misc/utils/rust/sync_readme/common": {
    },
    "misc/utils/rust/sync_readme/test_runner": {
    },
    "misc/utils/rust/test_runner": {
    },
    "misc/utils/rust/test_runner/lib": {
    },
    "tools/cargo/clippy": {
    },
    "tools/cargo/sync-readme": {
    },
    "tools/diesel-schema": {
    },
}

_PROC_MACRO_DEV_ALIASES = {
    "cloud/core": {
    },
    "cloud/core/cedar": {
    },
    "cloud/core/db-types": {
    },
    "cloud/core/emails": {
    },
    "cloud/core/traits": {
    },
    "cloud/email": {
    },
    "cloud/email/traits": {
    },
    "cloud/ext-traits": {
    },
    "cloud/geo-ip": {
    },
    "cloud/id": {
    },
    "cloud/proto": {
    },
    "cloud/video/ingest": {
    },
    "cloud/video/ingest/traits": {
    },
    "crates/aac": {
    },
    "crates/amf0": {
    },
    "crates/av1": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/batching": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/bootstrap": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/bootstrap-telemetry": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/bootstrap/derive": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/bytes-util": {
    },
    "crates/cedar-policy": {
    },
    "crates/cedar-policy/codegen": {
    },
    "crates/changelog": {
    },
    "crates/context": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/expgolomb": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/ffmpeg": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/flv": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/future-ext": {
    },
    "crates/h264": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/h265": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/http": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/metrics": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/metrics/derive": {
    },
    "crates/mp4": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/nutype-enum": {
    },
    "crates/openapiv3_1": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/postcompile": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/pprof": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/rtmp": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/settings": {
    },
    "crates/signal": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
            "cfg(windows)": {
            },
        },
    },
    "crates/tinc": {
    },
    "crates/tinc/build": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/tinc/cel": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/tinc/derive": {
    },
    "crates/tinc/integration": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/tinc/pb-prost": {
    },
    "crates/transmuxer": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "dev-tools/xtask": {
    },
    "misc/utils/protobuf/file_concat": {
    },
    "misc/utils/rust/analyzer/check": {
    },
    "misc/utils/rust/analyzer/discover": {
    },
    "misc/utils/rust/clippy": {
    },
    "misc/utils/rust/diesel_migration/runner": {
    },
    "misc/utils/rust/diesel_migration/test": {
    },
    "misc/utils/rust/doc/merger": {
    },
    "misc/utils/rust/doc/test/builder": {
    },
    "misc/utils/rust/doc/test/common": {
    },
    "misc/utils/rust/doc/test/runner": {
    },
    "misc/utils/rust/doc/wrapper": {
    },
    "misc/utils/rust/sync_readme": {
    },
    "misc/utils/rust/sync_readme/common": {
    },
    "misc/utils/rust/sync_readme/test_runner": {
    },
    "misc/utils/rust/test_runner": {
    },
    "misc/utils/rust/test_runner/lib": {
    },
    "tools/cargo/clippy": {
    },
    "tools/cargo/sync-readme": {
    },
    "tools/diesel-schema": {
    },
}

_BUILD_DEPENDENCIES = {
    "cloud/core": {
    },
    "cloud/core/cedar": {
    },
    "cloud/core/db-types": {
    },
    "cloud/core/emails": {
    },
    "cloud/core/traits": {
    },
    "cloud/email": {
    },
    "cloud/email/traits": {
    },
    "cloud/ext-traits": {
    },
    "cloud/geo-ip": {
    },
    "cloud/id": {
    },
    "cloud/proto": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "glob": Label("@cargo_vendor//:glob-0.3.3"),
            },
        },
    },
    "cloud/video/ingest": {
    },
    "cloud/video/ingest/traits": {
    },
    "crates/aac": {
    },
    "crates/amf0": {
    },
    "crates/av1": {
    },
    "crates/batching": {
    },
    "crates/bootstrap": {
    },
    "crates/bootstrap-telemetry": {
    },
    "crates/bootstrap/derive": {
    },
    "crates/bytes-util": {
    },
    "crates/cedar-policy": {
    },
    "crates/cedar-policy/codegen": {
    },
    "crates/changelog": {
    },
    "crates/context": {
    },
    "crates/expgolomb": {
    },
    "crates/ffmpeg": {
    },
    "crates/flv": {
    },
    "crates/future-ext": {
    },
    "crates/h264": {
    },
    "crates/h265": {
    },
    "crates/http": {
    },
    "crates/metrics": {
    },
    "crates/metrics/derive": {
    },
    "crates/mp4": {
    },
    "crates/nutype-enum": {
    },
    "crates/openapiv3_1": {
    },
    "crates/postcompile": {
    },
    "crates/pprof": {
    },
    "crates/rtmp": {
    },
    "crates/settings": {
    },
    "crates/signal": {
    },
    "crates/tinc": {
    },
    "crates/tinc/build": {
    },
    "crates/tinc/cel": {
    },
    "crates/tinc/derive": {
    },
    "crates/tinc/integration": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "prost-build": Label("@cargo_vendor//:prost-build-0.14.1"),
            },
        },
    },
    "crates/tinc/pb-prost": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
                "prost": Label("@cargo_vendor//:prost-0.14.1"),
                "prost-build": Label("@cargo_vendor//:prost-build-0.14.1"),
                "prost-types": Label("@cargo_vendor//:prost-types-0.14.1"),
            },
        },
    },
    "crates/transmuxer": {
    },
    "dev-tools/xtask": {
    },
    "misc/utils/protobuf/file_concat": {
    },
    "misc/utils/rust/analyzer/check": {
    },
    "misc/utils/rust/analyzer/discover": {
    },
    "misc/utils/rust/clippy": {
    },
    "misc/utils/rust/diesel_migration/runner": {
    },
    "misc/utils/rust/diesel_migration/test": {
    },
    "misc/utils/rust/doc/merger": {
    },
    "misc/utils/rust/doc/test/builder": {
    },
    "misc/utils/rust/doc/test/common": {
    },
    "misc/utils/rust/doc/test/runner": {
    },
    "misc/utils/rust/doc/wrapper": {
    },
    "misc/utils/rust/sync_readme": {
    },
    "misc/utils/rust/sync_readme/common": {
    },
    "misc/utils/rust/sync_readme/test_runner": {
    },
    "misc/utils/rust/test_runner": {
    },
    "misc/utils/rust/test_runner/lib": {
    },
    "tools/cargo/clippy": {
    },
    "tools/cargo/sync-readme": {
    },
    "tools/diesel-schema": {
    },
}

_BUILD_ALIASES = {
    "cloud/core": {
    },
    "cloud/core/cedar": {
    },
    "cloud/core/db-types": {
    },
    "cloud/core/emails": {
    },
    "cloud/core/traits": {
    },
    "cloud/email": {
    },
    "cloud/email/traits": {
    },
    "cloud/ext-traits": {
    },
    "cloud/geo-ip": {
    },
    "cloud/id": {
    },
    "cloud/proto": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "cloud/video/ingest": {
    },
    "cloud/video/ingest/traits": {
    },
    "crates/aac": {
    },
    "crates/amf0": {
    },
    "crates/av1": {
    },
    "crates/batching": {
    },
    "crates/bootstrap": {
    },
    "crates/bootstrap-telemetry": {
    },
    "crates/bootstrap/derive": {
    },
    "crates/bytes-util": {
    },
    "crates/cedar-policy": {
    },
    "crates/cedar-policy/codegen": {
    },
    "crates/changelog": {
    },
    "crates/context": {
    },
    "crates/expgolomb": {
    },
    "crates/ffmpeg": {
    },
    "crates/flv": {
    },
    "crates/future-ext": {
    },
    "crates/h264": {
    },
    "crates/h265": {
    },
    "crates/http": {
    },
    "crates/metrics": {
    },
    "crates/metrics/derive": {
    },
    "crates/mp4": {
    },
    "crates/nutype-enum": {
    },
    "crates/openapiv3_1": {
    },
    "crates/postcompile": {
    },
    "crates/pprof": {
    },
    "crates/rtmp": {
    },
    "crates/settings": {
    },
    "crates/signal": {
    },
    "crates/tinc": {
    },
    "crates/tinc/build": {
    },
    "crates/tinc/cel": {
    },
    "crates/tinc/derive": {
    },
    "crates/tinc/integration": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/tinc/pb-prost": {
        _REQUIRED_FEATURE: {
            _COMMON_CONDITION: {
            },
        },
    },
    "crates/transmuxer": {
    },
    "dev-tools/xtask": {
    },
    "misc/utils/protobuf/file_concat": {
    },
    "misc/utils/rust/analyzer/check": {
    },
    "misc/utils/rust/analyzer/discover": {
    },
    "misc/utils/rust/clippy": {
    },
    "misc/utils/rust/diesel_migration/runner": {
    },
    "misc/utils/rust/diesel_migration/test": {
    },
    "misc/utils/rust/doc/merger": {
    },
    "misc/utils/rust/doc/test/builder": {
    },
    "misc/utils/rust/doc/test/common": {
    },
    "misc/utils/rust/doc/test/runner": {
    },
    "misc/utils/rust/doc/wrapper": {
    },
    "misc/utils/rust/sync_readme": {
    },
    "misc/utils/rust/sync_readme/common": {
    },
    "misc/utils/rust/sync_readme/test_runner": {
    },
    "misc/utils/rust/test_runner": {
    },
    "misc/utils/rust/test_runner/lib": {
    },
    "tools/cargo/clippy": {
    },
    "tools/cargo/sync-readme": {
    },
    "tools/diesel-schema": {
    },
}

_BUILD_PROC_MACRO_DEPENDENCIES = {
    "cloud/core": {
    },
    "cloud/core/cedar": {
    },
    "cloud/core/db-types": {
    },
    "cloud/core/emails": {
    },
    "cloud/core/traits": {
    },
    "cloud/email": {
    },
    "cloud/email/traits": {
    },
    "cloud/ext-traits": {
    },
    "cloud/geo-ip": {
    },
    "cloud/id": {
    },
    "cloud/proto": {
    },
    "cloud/video/ingest": {
    },
    "cloud/video/ingest/traits": {
    },
    "crates/aac": {
    },
    "crates/amf0": {
    },
    "crates/av1": {
    },
    "crates/batching": {
    },
    "crates/bootstrap": {
    },
    "crates/bootstrap-telemetry": {
    },
    "crates/bootstrap/derive": {
    },
    "crates/bytes-util": {
    },
    "crates/cedar-policy": {
    },
    "crates/cedar-policy/codegen": {
    },
    "crates/changelog": {
    },
    "crates/context": {
    },
    "crates/expgolomb": {
    },
    "crates/ffmpeg": {
    },
    "crates/flv": {
    },
    "crates/future-ext": {
    },
    "crates/h264": {
    },
    "crates/h265": {
    },
    "crates/http": {
    },
    "crates/metrics": {
    },
    "crates/metrics/derive": {
    },
    "crates/mp4": {
    },
    "crates/nutype-enum": {
    },
    "crates/openapiv3_1": {
    },
    "crates/postcompile": {
    },
    "crates/pprof": {
    },
    "crates/rtmp": {
    },
    "crates/settings": {
    },
    "crates/signal": {
    },
    "crates/tinc": {
    },
    "crates/tinc/build": {
    },
    "crates/tinc/cel": {
    },
    "crates/tinc/derive": {
    },
    "crates/tinc/integration": {
    },
    "crates/tinc/pb-prost": {
    },
    "crates/transmuxer": {
    },
    "dev-tools/xtask": {
    },
    "misc/utils/protobuf/file_concat": {
    },
    "misc/utils/rust/analyzer/check": {
    },
    "misc/utils/rust/analyzer/discover": {
    },
    "misc/utils/rust/clippy": {
    },
    "misc/utils/rust/diesel_migration/runner": {
    },
    "misc/utils/rust/diesel_migration/test": {
    },
    "misc/utils/rust/doc/merger": {
    },
    "misc/utils/rust/doc/test/builder": {
    },
    "misc/utils/rust/doc/test/common": {
    },
    "misc/utils/rust/doc/test/runner": {
    },
    "misc/utils/rust/doc/wrapper": {
    },
    "misc/utils/rust/sync_readme": {
    },
    "misc/utils/rust/sync_readme/common": {
    },
    "misc/utils/rust/sync_readme/test_runner": {
    },
    "misc/utils/rust/test_runner": {
    },
    "misc/utils/rust/test_runner/lib": {
    },
    "tools/cargo/clippy": {
    },
    "tools/cargo/sync-readme": {
    },
    "tools/diesel-schema": {
    },
}

_BUILD_PROC_MACRO_ALIASES = {
    "cloud/core": {
    },
    "cloud/core/cedar": {
    },
    "cloud/core/db-types": {
    },
    "cloud/core/emails": {
    },
    "cloud/core/traits": {
    },
    "cloud/email": {
    },
    "cloud/email/traits": {
    },
    "cloud/ext-traits": {
    },
    "cloud/geo-ip": {
    },
    "cloud/id": {
    },
    "cloud/proto": {
    },
    "cloud/video/ingest": {
    },
    "cloud/video/ingest/traits": {
    },
    "crates/aac": {
    },
    "crates/amf0": {
    },
    "crates/av1": {
    },
    "crates/batching": {
    },
    "crates/bootstrap": {
    },
    "crates/bootstrap-telemetry": {
    },
    "crates/bootstrap/derive": {
    },
    "crates/bytes-util": {
    },
    "crates/cedar-policy": {
    },
    "crates/cedar-policy/codegen": {
    },
    "crates/changelog": {
    },
    "crates/context": {
    },
    "crates/expgolomb": {
    },
    "crates/ffmpeg": {
    },
    "crates/flv": {
    },
    "crates/future-ext": {
    },
    "crates/h264": {
    },
    "crates/h265": {
    },
    "crates/http": {
    },
    "crates/metrics": {
    },
    "crates/metrics/derive": {
    },
    "crates/mp4": {
    },
    "crates/nutype-enum": {
    },
    "crates/openapiv3_1": {
    },
    "crates/postcompile": {
    },
    "crates/pprof": {
    },
    "crates/rtmp": {
    },
    "crates/settings": {
    },
    "crates/signal": {
    },
    "crates/tinc": {
    },
    "crates/tinc/build": {
    },
    "crates/tinc/cel": {
    },
    "crates/tinc/derive": {
    },
    "crates/tinc/integration": {
    },
    "crates/tinc/pb-prost": {
    },
    "crates/transmuxer": {
    },
    "dev-tools/xtask": {
    },
    "misc/utils/protobuf/file_concat": {
    },
    "misc/utils/rust/analyzer/check": {
    },
    "misc/utils/rust/analyzer/discover": {
    },
    "misc/utils/rust/clippy": {
    },
    "misc/utils/rust/diesel_migration/runner": {
    },
    "misc/utils/rust/diesel_migration/test": {
    },
    "misc/utils/rust/doc/merger": {
    },
    "misc/utils/rust/doc/test/builder": {
    },
    "misc/utils/rust/doc/test/common": {
    },
    "misc/utils/rust/doc/test/runner": {
    },
    "misc/utils/rust/doc/wrapper": {
    },
    "misc/utils/rust/sync_readme": {
    },
    "misc/utils/rust/sync_readme/common": {
    },
    "misc/utils/rust/sync_readme/test_runner": {
    },
    "misc/utils/rust/test_runner": {
    },
    "misc/utils/rust/test_runner/lib": {
    },
    "tools/cargo/clippy": {
    },
    "tools/cargo/sync-readme": {
    },
    "tools/diesel-schema": {
    },
}

_FEATURE_FLAGS = {
    "cloud/core": {
    },
    "cloud/core/cedar": {
    },
    "cloud/core/db-types": {
    },
    "cloud/core/emails": {
    },
    "cloud/core/traits": {
    },
    "cloud/email": {
    },
    "cloud/email/traits": {
    },
    "cloud/ext-traits": {
    },
    "cloud/geo-ip": {
    },
    "cloud/id": {
    },
    "cloud/proto": {
    },
    "cloud/video/ingest": {
    },
    "cloud/video/ingest/traits": {
    },
    "crates/aac": {
        "docs": [
        ],
    },
    "crates/amf0": {
        "docs": [
        ],
        "serde": [
        ],
    },
    "crates/av1": {
        "docs": [
        ],
    },
    "crates/batching": {
        "docs": [
        ],
    },
    "crates/bootstrap": {
        "docs": [
        ],
    },
    "crates/bootstrap-telemetry": {
        "default": [
            "opentelemetry-logs",
            "opentelemetry-metrics",
            "opentelemetry-traces",
            "pprof",
            "prometheus",
        ],
        "docs": [
        ],
        "opentelemetry": [
            "thiserror",
            "tokio",
        ],
        "opentelemetry-appender-tracing": [
        ],
        "opentelemetry-logs": [
            "opentelemetry",
            "opentelemetry-appender-tracing",
        ],
        "opentelemetry-metrics": [
            "opentelemetry",
        ],
        "opentelemetry-traces": [
            "opentelemetry",
            "tracing-opentelemetry",
        ],
        "pprof": [
            "querystring",
            "scuffle-pprof",
            "tokio",
        ],
        "prometheus": [
            "opentelemetry",
            "prometheus-client",
        ],
        "prometheus-client": [
        ],
        "querystring": [
        ],
        "scuffle-pprof": [
        ],
        "thiserror": [
        ],
        "tokio": [
        ],
        "tracing-opentelemetry": [
        ],
    },
    "crates/bootstrap/derive": {
    },
    "crates/bytes-util": {
        "docs": [
        ],
        "serde": [
        ],
    },
    "crates/cedar-policy": {
        "docs": [
        ],
    },
    "crates/cedar-policy/codegen": {
    },
    "crates/changelog": {
    },
    "crates/context": {
        "docs": [
        ],
    },
    "crates/expgolomb": {
        "docs": [
        ],
    },
    "crates/ffmpeg": {
        "channel": [
        ],
        "crossbeam-channel": [
            "channel",
        ],
        "default": [
            "link_system_ffmpeg",
        ],
        "docs": [
        ],
        "link_system_ffmpeg": [
        ],
        "link_vcpkg_ffmpeg": [
        ],
        "tokio-channel": [
            "channel",
        ],
        "tracing": [
        ],
    },
    "crates/flv": {
        "docs": [
        ],
    },
    "crates/future-ext": {
        "docs": [
        ],
    },
    "crates/h264": {
        "docs": [
        ],
    },
    "crates/h265": {
        "docs": [
        ],
    },
    "crates/http": {
        "default": [
            "http1",
            "http2",
            "tower",
        ],
        "docs": [
        ],
        "http1": [
        ],
        "http2": [
        ],
        "http3": [
        ],
        "http3-tls-rustls": [
            "http3",
            "tls-rustls",
        ],
        "tls-rustls": [
        ],
        "tower": [
        ],
        "tracing": [
        ],
    },
    "crates/metrics": {
        "default": [
            "prometheus",
        ],
        "docs": [
        ],
        "prometheus": [
        ],
        "tracing": [
        ],
    },
    "crates/metrics/derive": {
    },
    "crates/mp4": {
        "docs": [
        ],
    },
    "crates/nutype-enum": {
        "docs": [
        ],
    },
    "crates/openapiv3_1": {
        "debug": [
        ],
        "docs": [
        ],
        "yaml": [
        ],
    },
    "crates/postcompile": {
        "docs": [
        ],
    },
    "crates/pprof": {
        "docs": [
        ],
    },
    "crates/rtmp": {
        "docs": [
        ],
    },
    "crates/settings": {
        "all-formats": [
            "ini",
            "json",
            "json5",
            "ron",
            "toml",
            "yaml",
        ],
        "anyhow": [
        ],
        "bootstrap": [
            "anyhow",
            "cli",
            "scuffle-bootstrap",
        ],
        "clap": [
        ],
        "cli": [
            "clap",
        ],
        "docs": [
        ],
        "full": [
            "all-formats",
            "bootstrap",
            "cli",
            "templates",
        ],
        "ini": [
        ],
        "json": [
        ],
        "json5": [
        ],
        "minijinja": [
        ],
        "ron": [
        ],
        "scuffle-bootstrap": [
        ],
        "templates": [
            "minijinja",
        ],
        "toml": [
        ],
        "yaml": [
        ],
    },
    "crates/signal": {
        "anyhow": [
        ],
        "bootstrap": [
            "anyhow",
            "scuffle-bootstrap",
            "scuffle-context",
        ],
        "docs": [
        ],
        "scuffle-bootstrap": [
        ],
        "scuffle-context": [
        ],
    },
    "crates/tinc": {
        "default": [
            "prost",
            "tonic",
        ],
        "docs": [
        ],
        "prost": [
        ],
        "tonic": [
        ],
    },
    "crates/tinc/build": {
        "default": [
            "prost",
        ],
        "docs": [
        ],
        "prost": [
        ],
    },
    "crates/tinc/cel": {
        "docs": [
        ],
        "runtime": [
        ],
    },
    "crates/tinc/derive": {
    },
    "crates/tinc/integration": {
    },
    "crates/tinc/pb-prost": {
        "docs": [
        ],
    },
    "crates/transmuxer": {
        "docs": [
        ],
    },
    "dev-tools/xtask": {
    },
    "misc/utils/protobuf/file_concat": {
    },
    "misc/utils/rust/analyzer/check": {
    },
    "misc/utils/rust/analyzer/discover": {
    },
    "misc/utils/rust/clippy": {
    },
    "misc/utils/rust/diesel_migration/runner": {
    },
    "misc/utils/rust/diesel_migration/test": {
    },
    "misc/utils/rust/doc/merger": {
    },
    "misc/utils/rust/doc/test/builder": {
    },
    "misc/utils/rust/doc/test/common": {
    },
    "misc/utils/rust/doc/test/runner": {
    },
    "misc/utils/rust/doc/wrapper": {
    },
    "misc/utils/rust/sync_readme": {
    },
    "misc/utils/rust/sync_readme/common": {
    },
    "misc/utils/rust/sync_readme/test_runner": {
    },
    "misc/utils/rust/test_runner": {
    },
    "misc/utils/rust/test_runner/lib": {
    },
    "tools/cargo/clippy": {
    },
    "tools/cargo/sync-readme": {
    },
    "tools/diesel-schema": {
    },
}

_RESOLVED_FEATURE_FLAGS = {
    "cloud/core": {
    },
    "cloud/core/cedar": {
    },
    "cloud/core/db-types": {
    },
    "cloud/core/emails": {
    },
    "cloud/core/traits": {
    },
    "cloud/email": {
    },
    "cloud/email/traits": {
    },
    "cloud/ext-traits": {
    },
    "cloud/geo-ip": {
    },
    "cloud/id": {
    },
    "cloud/proto": {
    },
    "cloud/video/ingest": {
    },
    "cloud/video/ingest/traits": {
    },
    "crates/aac": {
    },
    "crates/amf0": {
        _COMMON_CONDITION: [
            "serde",
        ],
    },
    "crates/av1": {
    },
    "crates/batching": {
    },
    "crates/bootstrap": {
    },
    "crates/bootstrap-telemetry": {
        _COMMON_CONDITION: [
            "default",
            "opentelemetry-logs",
            "opentelemetry-traces",
        ],
    },
    "crates/bootstrap/derive": {
    },
    "crates/bytes-util": {
        _COMMON_CONDITION: [
            "serde",
        ],
    },
    "crates/cedar-policy": {
    },
    "crates/cedar-policy/codegen": {
    },
    "crates/changelog": {
    },
    "crates/context": {
    },
    "crates/expgolomb": {
    },
    "crates/ffmpeg": {
    },
    "crates/flv": {
    },
    "crates/future-ext": {
    },
    "crates/h264": {
    },
    "crates/h265": {
    },
    "crates/http": {
        _COMMON_CONDITION: [
            "default",
            "tls-rustls",
            "tracing",
        ],
    },
    "crates/metrics": {
        _COMMON_CONDITION: [
            "default",
        ],
    },
    "crates/metrics/derive": {
    },
    "crates/mp4": {
    },
    "crates/nutype-enum": {
    },
    "crates/openapiv3_1": {
        _COMMON_CONDITION: [
            "debug",
        ],
    },
    "crates/postcompile": {
    },
    "crates/pprof": {
    },
    "crates/rtmp": {
    },
    "crates/settings": {
        _COMMON_CONDITION: [
            "all-formats",
            "bootstrap",
        ],
    },
    "crates/signal": {
        _COMMON_CONDITION: [
            "bootstrap",
        ],
    },
    "crates/tinc": {
        _COMMON_CONDITION: [
            "default",
        ],
    },
    "crates/tinc/build": {
        "aarch64-apple-darwin": [
            "default",
        ],
        "aarch64-pc-windows-msvc": [
            "default",
        ],
        "aarch64-unknown-linux-gnu": [
            "default",
        ],
        "x86_64-apple-darwin": [
            "default",
        ],
        "x86_64-pc-windows-msvc": [
            "default",
        ],
        "x86_64-unknown-linux-gnu": [
            "default",
        ],
    },
    "crates/tinc/cel": {
        _COMMON_CONDITION: [
            "runtime",
        ],
    },
    "crates/tinc/derive": {
    },
    "crates/tinc/integration": {
    },
    "crates/tinc/pb-prost": {
    },
    "crates/transmuxer": {
    },
    "dev-tools/xtask": {
    },
    "misc/utils/protobuf/file_concat": {
    },
    "misc/utils/rust/analyzer/check": {
    },
    "misc/utils/rust/analyzer/discover": {
    },
    "misc/utils/rust/clippy": {
    },
    "misc/utils/rust/diesel_migration/runner": {
    },
    "misc/utils/rust/diesel_migration/test": {
    },
    "misc/utils/rust/doc/merger": {
    },
    "misc/utils/rust/doc/test/builder": {
    },
    "misc/utils/rust/doc/test/common": {
    },
    "misc/utils/rust/doc/test/runner": {
    },
    "misc/utils/rust/doc/wrapper": {
    },
    "misc/utils/rust/sync_readme": {
    },
    "misc/utils/rust/sync_readme/common": {
    },
    "misc/utils/rust/sync_readme/test_runner": {
    },
    "misc/utils/rust/test_runner": {
    },
    "misc/utils/rust/test_runner/lib": {
    },
    "tools/cargo/clippy": {
    },
    "tools/cargo/sync-readme": {
    },
    "tools/diesel-schema": {
    },
}

_VERSIONS = {
    "cloud/core": "0.1.0",
    "cloud/core/cedar": "0.1.0",
    "cloud/core/db-types": "0.1.0",
    "cloud/core/emails": "0.1.0",
    "cloud/core/traits": "0.1.0",
    "cloud/email": "0.1.0",
    "cloud/email/traits": "0.1.0",
    "cloud/ext-traits": "0.1.0",
    "cloud/geo-ip": "0.1.0",
    "cloud/id": "0.1.0",
    "cloud/proto": "0.1.0",
    "cloud/video/ingest": "0.1.0",
    "cloud/video/ingest/traits": "0.1.0",
    "crates/aac": "0.1.4",
    "crates/amf0": "0.2.4",
    "crates/av1": "0.1.4",
    "crates/batching": "0.1.6",
    "crates/bootstrap": "0.1.7",
    "crates/bootstrap-telemetry": "0.3.0",
    "crates/bootstrap/derive": "0.1.7",
    "crates/bytes-util": "0.1.5",
    "crates/cedar-policy": "0.1.0",
    "crates/cedar-policy/codegen": "0.1.1",
    "crates/changelog": "0.1.1",
    "crates/context": "0.1.5",
    "crates/expgolomb": "0.1.5",
    "crates/ffmpeg": "0.3.5",
    "crates/flv": "0.2.2",
    "crates/future-ext": "0.1.4",
    "crates/h264": "0.2.2",
    "crates/h265": "0.2.2",
    "crates/http": "0.3.2",
    "crates/metrics": "0.4.2",
    "crates/metrics/derive": "0.4.2",
    "crates/mp4": "0.1.5",
    "crates/nutype-enum": "0.1.5",
    "crates/openapiv3_1": "0.1.3",
    "crates/postcompile": "0.3.3",
    "crates/pprof": "0.2.0",
    "crates/rtmp": "0.2.3",
    "crates/settings": "0.1.4",
    "crates/signal": "0.3.3",
    "crates/tinc": "0.2.0",
    "crates/tinc/build": "0.2.0",
    "crates/tinc/cel": "0.2.0",
    "crates/tinc/derive": "0.2.0",
    "crates/tinc/integration": "0.0.0",
    "crates/tinc/pb-prost": "0.2.0",
    "crates/transmuxer": "0.2.2",
    "dev-tools/xtask": "0.0.0",
    "misc/utils/protobuf/file_concat": "0.0.0",
    "misc/utils/rust/analyzer/check": "0.0.0",
    "misc/utils/rust/analyzer/discover": "0.0.0",
    "misc/utils/rust/clippy": "0.0.0",
    "misc/utils/rust/diesel_migration/runner": "0.0.0",
    "misc/utils/rust/diesel_migration/test": "0.0.0",
    "misc/utils/rust/doc/merger": "0.0.0",
    "misc/utils/rust/doc/test/builder": "0.0.0",
    "misc/utils/rust/doc/test/common": "0.0.0",
    "misc/utils/rust/doc/test/runner": "0.0.0",
    "misc/utils/rust/doc/wrapper": "0.0.0",
    "misc/utils/rust/sync_readme": "0.0.0",
    "misc/utils/rust/sync_readme/common": "0.0.0",
    "misc/utils/rust/sync_readme/test_runner": "0.0.0",
    "misc/utils/rust/test_runner": "0.0.0",
    "misc/utils/rust/test_runner/lib": "0.0.0",
    "tools/cargo/clippy": "0.0.0",
    "tools/cargo/sync-readme": "0.0.0",
    "tools/diesel-schema": "0.0.0",
}

_CONDITIONS = {
    "aarch64-apple-darwin": ["@rules_rust//rust/platform:aarch64-apple-darwin"],
    "aarch64-pc-windows-msvc": ["@rules_rust//rust/platform:aarch64-pc-windows-msvc"],
    "aarch64-unknown-linux-gnu": ["@rules_rust//rust/platform:aarch64-unknown-linux-gnu"],
    "cfg(all(any(target_arch = \"wasm32\", target_arch = \"wasm64\"), target_os = \"unknown\"))": ["@rules_rust//rust/platform:wasm32-unknown-unknown"],
    "cfg(all(any(target_arch = \"x86_64\", target_arch = \"arm64ec\"), target_env = \"msvc\", not(windows_raw_dylib)))": ["@rules_rust//rust/platform:x86_64-pc-windows-msvc"],
    "cfg(all(any(target_os = \"linux\", target_os = \"android\"), not(any(all(target_os = \"linux\", target_env = \"\"), getrandom_backend = \"custom\", getrandom_backend = \"linux_raw\", getrandom_backend = \"rdrand\", getrandom_backend = \"rndr\"))))": ["@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(all(not(rustix_use_libc), not(miri), target_os = \"linux\", any(target_endian = \"little\", any(target_arch = \"s390x\", target_arch = \"powerpc\")), any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc\"), all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"s390x\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"))))": ["@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(all(not(rustix_use_libc), not(miri), target_os = \"linux\", any(target_endian = \"little\", target_arch = \"s390x\"), any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"s390x\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"))))": ["@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_endian = \"little\", any(target_arch = \"s390x\", target_arch = \"powerpc\")), any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc\"), all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"s390x\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:wasm32-unknown-unknown", "@rules_rust//rust/platform:x86_64-apple-darwin"],
    "cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_endian = \"little\", target_arch = \"s390x\"), any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"s390x\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:wasm32-unknown-unknown", "@rules_rust//rust/platform:x86_64-apple-darwin"],
    "cfg(all(target_arch = \"aarch64\", target_env = \"msvc\", not(windows_raw_dylib)))": ["@rules_rust//rust/platform:aarch64-pc-windows-msvc"],
    "cfg(all(target_arch = \"aarch64\", target_os = \"linux\"))": ["@rules_rust//rust/platform:aarch64-unknown-linux-gnu"],
    "cfg(all(target_arch = \"aarch64\", target_vendor = \"apple\"))": ["@rules_rust//rust/platform:aarch64-apple-darwin"],
    "cfg(all(target_arch = \"wasm32\", any(target_os = \"unknown\", target_os = \"none\")))": ["@rules_rust//rust/platform:wasm32-unknown-unknown"],
    "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))": ["@rules_rust//rust/platform:wasm32-unknown-unknown"],
    "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))": ["@rules_rust//rust/platform:wasm32-unknown-unknown"],
    "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))": ["@rules_rust//rust/platform:wasm32-unknown-unknown"],
    "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(daku)))": ["@rules_rust//rust/platform:wasm32-unknown-unknown"],
    "cfg(all(target_family = \"wasm\", target_os = \"unknown\"))": ["@rules_rust//rust/platform:wasm32-unknown-unknown"],
    "cfg(all(unix, not(target_os = \"android\"), not(target_vendor = \"apple\"), not(target_arch = \"wasm32\")))": ["@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(all(unix, not(target_os = \"macos\")))": ["@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(any(target_arch = \"aarch64\", target_arch = \"x86\", target_arch = \"x86_64\"))": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:aarch64-pc-windows-msvc", "@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-apple-darwin", "@rules_rust//rust/platform:x86_64-pc-windows-msvc", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:aarch64-pc-windows-msvc", "@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-apple-darwin", "@rules_rust//rust/platform:x86_64-pc-windows-msvc", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))": ["@rules_rust//rust/platform:x86_64-apple-darwin", "@rules_rust//rust/platform:x86_64-pc-windows-msvc", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(any(target_os = \"android\", target_os = \"linux\", target_os = \"macos\", target_os = \"hurd\"))": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-apple-darwin", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(any(target_os = \"macos\", target_os = \"ios\"))": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:x86_64-apple-darwin"],
    "cfg(any(target_os = \"macos\", target_os = \"openbsd\", target_os = \"vita\", target_os = \"emscripten\"))": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:x86_64-apple-darwin"],
    "cfg(any(target_vendor = \"apple\"))": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:x86_64-apple-darwin"],
    "cfg(any(unix, target_os = \"wasi\"))": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-apple-darwin", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(any(unix, windows, target_os = \"wasi\"))": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:aarch64-pc-windows-msvc", "@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-apple-darwin", "@rules_rust//rust/platform:x86_64-pc-windows-msvc", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(not(all(target_arch = \"arm\", target_os = \"none\")))": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:aarch64-pc-windows-msvc", "@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:wasm32-unknown-unknown", "@rules_rust//rust/platform:x86_64-apple-darwin", "@rules_rust//rust/platform:x86_64-pc-windows-msvc", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(not(all(target_arch = \"wasm32\", any(target_os = \"unknown\", target_os = \"none\"))))": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:aarch64-pc-windows-msvc", "@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-apple-darwin", "@rules_rust//rust/platform:x86_64-pc-windows-msvc", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(not(all(target_family = \"wasm\", target_os = \"unknown\")))": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:aarch64-pc-windows-msvc", "@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-apple-darwin", "@rules_rust//rust/platform:x86_64-pc-windows-msvc", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:wasm32-unknown-unknown", "@rules_rust//rust/platform:x86_64-apple-darwin", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(not(target_arch = \"wasm32\"))": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:aarch64-pc-windows-msvc", "@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-apple-darwin", "@rules_rust//rust/platform:x86_64-pc-windows-msvc", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(not(target_family = \"wasm\"))": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:aarch64-pc-windows-msvc", "@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-apple-darwin", "@rules_rust//rust/platform:x86_64-pc-windows-msvc", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(not(windows))": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:wasm32-unknown-unknown", "@rules_rust//rust/platform:x86_64-apple-darwin", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(target_arch = \"aarch64\")": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:aarch64-pc-windows-msvc", "@rules_rust//rust/platform:aarch64-unknown-linux-gnu"],
    "cfg(target_arch = \"wasm32\")": ["@rules_rust//rust/platform:wasm32-unknown-unknown"],
    "cfg(target_os = \"macos\")": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:x86_64-apple-darwin"],
    "cfg(target_os = \"windows\")": ["@rules_rust//rust/platform:aarch64-pc-windows-msvc", "@rules_rust//rust/platform:x86_64-pc-windows-msvc"],
    "cfg(target_vendor = \"apple\")": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:x86_64-apple-darwin"],
    "cfg(unix)": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-apple-darwin", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(windows)": ["@rules_rust//rust/platform:aarch64-pc-windows-msvc", "@rules_rust//rust/platform:x86_64-pc-windows-msvc"],
    "wasm32-unknown-unknown": ["@rules_rust//rust/platform:wasm32-unknown-unknown"],
    "x86_64-apple-darwin": ["@rules_rust//rust/platform:x86_64-apple-darwin"],
    "x86_64-pc-windows-msvc": ["@rules_rust//rust/platform:x86_64-pc-windows-msvc"],
    "x86_64-unknown-linux-gnu": ["@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
}

###############################################################################

def crate_repositories():
    """A macro for defining repositories for all generated crates.

    Returns:
      A list of repos visible to the module through the module extension.
    """
    maybe(
        http_archive,
        name = "cargo_vendor__addr2line-0.24.2",
        sha256 = "dfbe277e56a376000877090da837660b4427aad530e3028d44e0bffe4f89a1c1",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/addr2line/0.24.2/download"],
        strip_prefix = "addr2line-0.24.2",
        build_file = Label("//vendor/cargo:BUILD.addr2line-0.24.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__adler2-2.0.1",
        sha256 = "320119579fcad9c21884f5c4861d16174d0e06250625266f50fe6898340abefa",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/adler2/2.0.1/download"],
        strip_prefix = "adler2-2.0.1",
        build_file = Label("//vendor/cargo:BUILD.adler2-2.0.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__ahash-0.8.12",
        sha256 = "5a15f179cd60c4584b8a8c596927aadc462e27f2ca70c04e0071964a73ba7a75",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/ahash/0.8.12/download"],
        strip_prefix = "ahash-0.8.12",
        build_file = Label("//vendor/cargo:BUILD.ahash-0.8.12.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__aho-corasick-1.1.3",
        sha256 = "8e60d3430d3a69478ad0993f19238d2df97c507009a52b3c10addcd7f6bcb916",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/aho-corasick/1.1.3/download"],
        strip_prefix = "aho-corasick-1.1.3",
        build_file = Label("//vendor/cargo:BUILD.aho-corasick-1.1.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__aliasable-0.1.3",
        sha256 = "250f629c0161ad8107cf89319e990051fae62832fd343083bea452d93e2205fd",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/aliasable/0.1.3/download"],
        strip_prefix = "aliasable-0.1.3",
        build_file = Label("//vendor/cargo:BUILD.aliasable-0.1.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__aligned-vec-0.6.4",
        sha256 = "dc890384c8602f339876ded803c97ad529f3842aba97f6392b3dba0dd171769b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/aligned-vec/0.6.4/download"],
        strip_prefix = "aligned-vec-0.6.4",
        build_file = Label("//vendor/cargo:BUILD.aligned-vec-0.6.4.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__allocator-api2-0.2.21",
        sha256 = "683d7910e743518b0e34f1186f92494becacb047c7b6bf616c96772180fef923",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/allocator-api2/0.2.21/download"],
        strip_prefix = "allocator-api2-0.2.21",
        build_file = Label("//vendor/cargo:BUILD.allocator-api2-0.2.21.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__anes-0.1.6",
        sha256 = "4b46cbb362ab8752921c97e041f5e366ee6297bd428a31275b9fcf1e380f7299",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/anes/0.1.6/download"],
        strip_prefix = "anes-0.1.6",
        build_file = Label("//vendor/cargo:BUILD.anes-0.1.6.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__anstream-0.6.20",
        sha256 = "3ae563653d1938f79b1ab1b5e668c87c76a9930414574a6583a7b7e11a8e6192",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/anstream/0.6.20/download"],
        strip_prefix = "anstream-0.6.20",
        build_file = Label("//vendor/cargo:BUILD.anstream-0.6.20.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__anstyle-1.0.11",
        sha256 = "862ed96ca487e809f1c8e5a8447f6ee2cf102f846893800b20cebdf541fc6bbd",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/anstyle/1.0.11/download"],
        strip_prefix = "anstyle-1.0.11",
        build_file = Label("//vendor/cargo:BUILD.anstyle-1.0.11.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__anstyle-parse-0.2.7",
        sha256 = "4e7644824f0aa2c7b9384579234ef10eb7efb6a0deb83f9630a49594dd9c15c2",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/anstyle-parse/0.2.7/download"],
        strip_prefix = "anstyle-parse-0.2.7",
        build_file = Label("//vendor/cargo:BUILD.anstyle-parse-0.2.7.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__anstyle-query-1.1.4",
        sha256 = "9e231f6134f61b71076a3eab506c379d4f36122f2af15a9ff04415ea4c3339e2",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/anstyle-query/1.1.4/download"],
        strip_prefix = "anstyle-query-1.1.4",
        build_file = Label("//vendor/cargo:BUILD.anstyle-query-1.1.4.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__anstyle-wincon-3.0.10",
        sha256 = "3e0633414522a32ffaac8ac6cc8f748e090c5717661fddeea04219e2344f5f2a",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/anstyle-wincon/3.0.10/download"],
        strip_prefix = "anstyle-wincon-3.0.10",
        build_file = Label("//vendor/cargo:BUILD.anstyle-wincon-3.0.10.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__anyhow-1.0.99",
        sha256 = "b0674a1ddeecb70197781e945de4b3b8ffb61fa939a5597bcf48503737663100",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/anyhow/1.0.99/download"],
        strip_prefix = "anyhow-1.0.99",
        build_file = Label("//vendor/cargo:BUILD.anyhow-1.0.99.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__arc-swap-1.7.1",
        sha256 = "69f7f8c3906b62b754cd5326047894316021dcfe5a194c8ea52bdd94934a3457",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/arc-swap/1.7.1/download"],
        strip_prefix = "arc-swap-1.7.1",
        build_file = Label("//vendor/cargo:BUILD.arc-swap-1.7.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__argon2-0.5.3",
        sha256 = "3c3610892ee6e0cbce8ae2700349fcf8f98adb0dbfbee85aec3c9179d29cc072",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/argon2/0.5.3/download"],
        strip_prefix = "argon2-0.5.3",
        build_file = Label("//vendor/cargo:BUILD.argon2-0.5.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__arraydeque-0.5.1",
        sha256 = "7d902e3d592a523def97af8f317b08ce16b7ab854c1985a0c671e6f15cebc236",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/arraydeque/0.5.1/download"],
        strip_prefix = "arraydeque-0.5.1",
        build_file = Label("//vendor/cargo:BUILD.arraydeque-0.5.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__arrayvec-0.5.2",
        sha256 = "23b62fc65de8e4e7f52534fb52b0f3ed04746ae267519eef2a83941e8085068b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/arrayvec/0.5.2/download"],
        strip_prefix = "arrayvec-0.5.2",
        build_file = Label("//vendor/cargo:BUILD.arrayvec-0.5.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__ascii-canvas-4.0.0",
        sha256 = "ef1e3e699d84ab1b0911a1010c5c106aa34ae89aeac103be5ce0c3859db1e891",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/ascii-canvas/4.0.0/download"],
        strip_prefix = "ascii-canvas-4.0.0",
        build_file = Label("//vendor/cargo:BUILD.ascii-canvas-4.0.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__asn1-rs-0.6.2",
        sha256 = "5493c3bedbacf7fd7382c6346bbd66687d12bbaad3a89a2d2c303ee6cf20b048",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/asn1-rs/0.6.2/download"],
        strip_prefix = "asn1-rs-0.6.2",
        build_file = Label("//vendor/cargo:BUILD.asn1-rs-0.6.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__asn1-rs-derive-0.5.1",
        sha256 = "965c2d33e53cb6b267e148a4cb0760bc01f4904c1cd4bb4002a085bb016d1490",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/asn1-rs-derive/0.5.1/download"],
        strip_prefix = "asn1-rs-derive-0.5.1",
        build_file = Label("//vendor/cargo:BUILD.asn1-rs-derive-0.5.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__asn1-rs-impl-0.2.0",
        sha256 = "7b18050c2cd6fe86c3a76584ef5e0baf286d038cda203eb6223df2cc413565f7",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/asn1-rs-impl/0.2.0/download"],
        strip_prefix = "asn1-rs-impl-0.2.0",
        build_file = Label("//vendor/cargo:BUILD.asn1-rs-impl-0.2.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__async-scoped-0.9.0",
        sha256 = "4042078ea593edffc452eef14e99fdb2b120caa4ad9618bcdeabc4a023b98740",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/async-scoped/0.9.0/download"],
        strip_prefix = "async-scoped-0.9.0",
        build_file = Label("//vendor/cargo:BUILD.async-scoped-0.9.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__async-stream-0.3.6",
        sha256 = "0b5a71a6f37880a80d1d7f19efd781e4b5de42c88f0722cc13bcb6cc2cfe8476",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/async-stream/0.3.6/download"],
        strip_prefix = "async-stream-0.3.6",
        build_file = Label("//vendor/cargo:BUILD.async-stream-0.3.6.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__async-stream-impl-0.3.6",
        sha256 = "c7c24de15d275a1ecfd47a380fb4d5ec9bfe0933f309ed5e705b775596a3574d",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/async-stream-impl/0.3.6/download"],
        strip_prefix = "async-stream-impl-0.3.6",
        build_file = Label("//vendor/cargo:BUILD.async-stream-impl-0.3.6.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__async-trait-0.1.89",
        sha256 = "9035ad2d096bed7955a320ee7e2230574d28fd3c3a0f186cbea1ff3c7eed5dbb",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/async-trait/0.1.89/download"],
        strip_prefix = "async-trait-0.1.89",
        build_file = Label("//vendor/cargo:BUILD.async-trait-0.1.89.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__atomic-waker-1.1.2",
        sha256 = "1505bd5d3d116872e7271a6d4e16d81d0c8570876c8de68093a09ac269d8aac0",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/atomic-waker/1.1.2/download"],
        strip_prefix = "atomic-waker-1.1.2",
        build_file = Label("//vendor/cargo:BUILD.atomic-waker-1.1.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__atomicwrites-0.4.4",
        sha256 = "3ef1bb8d1b645fe38d51dfc331d720fb5fc2c94b440c76cc79c80ff265ca33e3",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/atomicwrites/0.4.4/download"],
        strip_prefix = "atomicwrites-0.4.4",
        build_file = Label("//vendor/cargo:BUILD.atomicwrites-0.4.4.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__autocfg-1.5.0",
        sha256 = "c08606f8c3cbf4ce6ec8e28fb0014a2c086708fe954eaa885384a6165172e7e8",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/autocfg/1.5.0/download"],
        strip_prefix = "autocfg-1.5.0",
        build_file = Label("//vendor/cargo:BUILD.autocfg-1.5.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__aws-lc-rs-1.14.0",
        sha256 = "94b8ff6c09cd57b16da53641caa860168b88c172a5ee163b0288d3d6eea12786",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/aws-lc-rs/1.14.0/download"],
        strip_prefix = "aws-lc-rs-1.14.0",
        build_file = Label("//vendor/cargo:BUILD.aws-lc-rs-1.14.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__aws-lc-sys-0.31.0",
        sha256 = "0e44d16778acaf6a9ec9899b92cebd65580b83f685446bf2e1f5d3d732f99dcd",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/aws-lc-sys/0.31.0/download"],
        strip_prefix = "aws-lc-sys-0.31.0",
        build_file = Label("//vendor/cargo:BUILD.aws-lc-sys-0.31.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__axum-0.8.4",
        sha256 = "021e862c184ae977658b36c4500f7feac3221ca5da43e3f25bd04ab6c79a29b5",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/axum/0.8.4/download"],
        strip_prefix = "axum-0.8.4",
        build_file = Label("//vendor/cargo:BUILD.axum-0.8.4.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__axum-core-0.5.2",
        sha256 = "68464cd0412f486726fb3373129ef5d2993f90c34bc2bc1c1e9943b2f4fc7ca6",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/axum-core/0.5.2/download"],
        strip_prefix = "axum-core-0.5.2",
        build_file = Label("//vendor/cargo:BUILD.axum-core-0.5.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__axum-macros-0.5.0",
        sha256 = "604fde5e028fea851ce1d8570bbdc034bec850d157f7569d10f347d06808c05c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/axum-macros/0.5.0/download"],
        strip_prefix = "axum-macros-0.5.0",
        build_file = Label("//vendor/cargo:BUILD.axum-macros-0.5.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__az-1.2.1",
        sha256 = "7b7e4c2464d97fe331d41de9d5db0def0a96f4d823b8b32a2efd503578988973",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/az/1.2.1/download"],
        strip_prefix = "az-1.2.1",
        build_file = Label("//vendor/cargo:BUILD.az-1.2.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__backtrace-0.3.75",
        sha256 = "6806a6321ec58106fea15becdad98371e28d92ccbc7c8f1b3b6dd724fe8f1002",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/backtrace/0.3.75/download"],
        strip_prefix = "backtrace-0.3.75",
        build_file = Label("//vendor/cargo:BUILD.backtrace-0.3.75.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__base32-0.5.1",
        sha256 = "022dfe9eb35f19ebbcb51e0b40a5ab759f46ad60cadf7297e0bd085afb50e076",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/base32/0.5.1/download"],
        strip_prefix = "base32-0.5.1",
        build_file = Label("//vendor/cargo:BUILD.base32-0.5.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__base64-0.21.7",
        sha256 = "9d297deb1925b89f2ccc13d7635fa0714f12c87adce1c75356b39ca9b7178567",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/base64/0.21.7/download"],
        strip_prefix = "base64-0.21.7",
        build_file = Label("//vendor/cargo:BUILD.base64-0.21.7.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__base64-0.22.1",
        sha256 = "72b3254f16251a8381aa12e40e3c4d2f0199f8c6508fbecb9d91f575e0fbb8c6",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/base64/0.22.1/download"],
        strip_prefix = "base64-0.22.1",
        build_file = Label("//vendor/cargo:BUILD.base64-0.22.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__base64ct-1.8.0",
        sha256 = "55248b47b0caf0546f7988906588779981c43bb1bc9d0c44087278f80cdb44ba",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/base64ct/1.8.0/download"],
        strip_prefix = "base64ct-1.8.0",
        build_file = Label("//vendor/cargo:BUILD.base64ct-1.8.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__base64urlsafedata-0.5.2",
        sha256 = "e5913e643e4dfb43d5908e9e6f1386f8e0dfde086ecef124a6450c6195d89160",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/base64urlsafedata/0.5.2/download"],
        strip_prefix = "base64urlsafedata-0.5.2",
        build_file = Label("//vendor/cargo:BUILD.base64urlsafedata-0.5.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__bb8-0.9.0",
        sha256 = "212d8b8e1a22743d9241575c6ba822cf9c8fef34771c86ab7e477a4fbfd254e5",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/bb8/0.9.0/download"],
        strip_prefix = "bb8-0.9.0",
        build_file = Label("//vendor/cargo:BUILD.bb8-0.9.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__beef-0.5.2",
        sha256 = "3a8241f3ebb85c056b509d4327ad0358fbbba6ffb340bf388f26350aeda225b1",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/beef/0.5.2/download"],
        strip_prefix = "beef-0.5.2",
        build_file = Label("//vendor/cargo:BUILD.beef-0.5.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__bindgen-0.71.1",
        sha256 = "5f58bf3d7db68cfbac37cfc485a8d711e87e064c3d0fe0435b92f7a407f9d6b3",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/bindgen/0.71.1/download"],
        strip_prefix = "bindgen-0.71.1",
        build_file = Label("//vendor/cargo:BUILD.bindgen-0.71.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__bit-set-0.8.0",
        sha256 = "08807e080ed7f9d5433fa9b275196cfc35414f66a0c79d864dc51a0d825231a3",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/bit-set/0.8.0/download"],
        strip_prefix = "bit-set-0.8.0",
        build_file = Label("//vendor/cargo:BUILD.bit-set-0.8.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__bit-vec-0.8.0",
        sha256 = "5e764a1d40d510daf35e07be9eb06e75770908c27d411ee6c92109c9840eaaf7",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/bit-vec/0.8.0/download"],
        strip_prefix = "bit-vec-0.8.0",
        build_file = Label("//vendor/cargo:BUILD.bit-vec-0.8.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__bitflags-1.3.2",
        sha256 = "bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/bitflags/1.3.2/download"],
        strip_prefix = "bitflags-1.3.2",
        build_file = Label("//vendor/cargo:BUILD.bitflags-1.3.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__bitflags-2.9.4",
        sha256 = "2261d10cca569e4643e526d8dc2e62e433cc8aba21ab764233731f8d369bf394",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/bitflags/2.9.4/download"],
        strip_prefix = "bitflags-2.9.4",
        build_file = Label("//vendor/cargo:BUILD.bitflags-2.9.4.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__bitmask-enum-2.2.5",
        sha256 = "e6cbbb8f56245b5a479b30a62cdc86d26e2f35c2b9f594bc4671654b03851380",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/bitmask-enum/2.2.5/download"],
        strip_prefix = "bitmask-enum-2.2.5",
        build_file = Label("//vendor/cargo:BUILD.bitmask-enum-2.2.5.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__blake2-0.10.6",
        sha256 = "46502ad458c9a52b69d4d4d32775c788b7a1b85e8bc9d482d92250fc0e3f8efe",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/blake2/0.10.6/download"],
        strip_prefix = "blake2-0.10.6",
        build_file = Label("//vendor/cargo:BUILD.blake2-0.10.6.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__block-buffer-0.10.4",
        sha256 = "3078c7629b62d3f0439517fa394996acacc5cbc91c5a20d8c658e77abd503a71",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/block-buffer/0.10.4/download"],
        strip_prefix = "block-buffer-0.10.4",
        build_file = Label("//vendor/cargo:BUILD.block-buffer-0.10.4.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__bollard-0.19.3",
        sha256 = "ec7646ee90964aa59e9f832a67182791396a19a5b1d76eb17599a8310a7e2e09",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/bollard/0.19.3/download"],
        strip_prefix = "bollard-0.19.3",
        build_file = Label("//vendor/cargo:BUILD.bollard-0.19.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__bollard-buildkit-proto-0.7.0",
        sha256 = "85a885520bf6249ab931a764ffdb87b0ceef48e6e7d807cfdb21b751e086e1ad",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/bollard-buildkit-proto/0.7.0/download"],
        strip_prefix = "bollard-buildkit-proto-0.7.0",
        build_file = Label("//vendor/cargo:BUILD.bollard-buildkit-proto-0.7.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__bollard-stubs-1.49.1-rc.28.4.0",
        sha256 = "5731fe885755e92beff1950774068e0cae67ea6ec7587381536fca84f1779623",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/bollard-stubs/1.49.1-rc.28.4.0/download"],
        strip_prefix = "bollard-stubs-1.49.1-rc.28.4.0",
        build_file = Label("//vendor/cargo:BUILD.bollard-stubs-1.49.1-rc.28.4.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__bon-3.7.2",
        sha256 = "c2529c31017402be841eb45892278a6c21a000c0a17643af326c73a73f83f0fb",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/bon/3.7.2/download"],
        strip_prefix = "bon-3.7.2",
        build_file = Label("//vendor/cargo:BUILD.bon-3.7.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__bon-macros-3.7.2",
        sha256 = "d82020dadcb845a345591863adb65d74fa8dc5c18a0b6d408470e13b7adc7005",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/bon-macros/3.7.2/download"],
        strip_prefix = "bon-macros-3.7.2",
        build_file = Label("//vendor/cargo:BUILD.bon-macros-3.7.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__bstr-1.12.0",
        sha256 = "234113d19d0d7d613b40e86fb654acf958910802bcceab913a4f9e7cda03b1a4",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/bstr/1.12.0/download"],
        strip_prefix = "bstr-1.12.0",
        build_file = Label("//vendor/cargo:BUILD.bstr-1.12.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__bumpalo-3.19.0",
        sha256 = "46c5e41b57b8bba42a04676d81cb89e9ee8e859a1a66f80a5a72e1cb76b34d43",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/bumpalo/3.19.0/download"],
        strip_prefix = "bumpalo-3.19.0",
        build_file = Label("//vendor/cargo:BUILD.bumpalo-3.19.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__bytemuck-1.23.2",
        sha256 = "3995eaeebcdf32f91f980d360f78732ddc061097ab4e39991ae7a6ace9194677",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/bytemuck/1.23.2/download"],
        strip_prefix = "bytemuck-1.23.2",
        build_file = Label("//vendor/cargo:BUILD.bytemuck-1.23.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__byteorder-1.5.0",
        sha256 = "1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/byteorder/1.5.0/download"],
        strip_prefix = "byteorder-1.5.0",
        build_file = Label("//vendor/cargo:BUILD.byteorder-1.5.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__byteorder-lite-0.1.0",
        sha256 = "8f1fe948ff07f4bd06c30984e69f5b4899c516a3ef74f34df92a2df2ab535495",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/byteorder-lite/0.1.0/download"],
        strip_prefix = "byteorder-lite-0.1.0",
        build_file = Label("//vendor/cargo:BUILD.byteorder-lite-0.1.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__bytes-1.10.1",
        sha256 = "d71b6127be86fdcfddb610f7182ac57211d4b18a3e9c82eb2d17662f2227ad6a",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/bytes/1.10.1/download"],
        strip_prefix = "bytes-1.10.1",
        build_file = Label("//vendor/cargo:BUILD.bytes-1.10.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__bytes-utils-0.1.4",
        sha256 = "7dafe3a8757b027e2be6e4e5601ed563c55989fcf1546e933c66c8eb3a058d35",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/bytes-utils/0.1.4/download"],
        strip_prefix = "bytes-utils-0.1.4",
        build_file = Label("//vendor/cargo:BUILD.bytes-utils-0.1.4.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__bytestring-1.4.0",
        sha256 = "e465647ae23b2823b0753f50decb2d5a86d2bb2cac04788fafd1f80e45378e5f",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/bytestring/1.4.0/download"],
        strip_prefix = "bytestring-1.4.0",
        build_file = Label("//vendor/cargo:BUILD.bytestring-1.4.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__camino-1.1.12",
        sha256 = "dd0b03af37dad7a14518b7691d81acb0f8222604ad3d1b02f6b4bed5188c0cd5",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/camino/1.1.12/download"],
        strip_prefix = "camino-1.1.12",
        build_file = Label("//vendor/cargo:BUILD.camino-1.1.12.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__camino-tempfile-1.4.1",
        sha256 = "64308c4c82a5c38679945ddf88738dc1483dcc563bbb5780755ae9f8497d2b20",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/camino-tempfile/1.4.1/download"],
        strip_prefix = "camino-tempfile-1.4.1",
        build_file = Label("//vendor/cargo:BUILD.camino-tempfile-1.4.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__cargo-manifest-0.19.1",
        sha256 = "a1d8af896b707212cd0e99c112a78c9497dd32994192a463ed2f7419d29bd8c6",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/cargo-manifest/0.19.1/download"],
        strip_prefix = "cargo-manifest-0.19.1",
        build_file = Label("//vendor/cargo:BUILD.cargo-manifest-0.19.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__cargo-platform-0.2.0",
        sha256 = "84982c6c0ae343635a3a4ee6dedef965513735c8b183caa7289fa6e27399ebd4",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/cargo-platform/0.2.0/download"],
        strip_prefix = "cargo-platform-0.2.0",
        build_file = Label("//vendor/cargo:BUILD.cargo-platform-0.2.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__cargo-util-schemas-0.8.2",
        sha256 = "7dc1a6f7b5651af85774ae5a34b4e8be397d9cf4bc063b7e6dbd99a841837830",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/cargo-util-schemas/0.8.2/download"],
        strip_prefix = "cargo-util-schemas-0.8.2",
        build_file = Label("//vendor/cargo:BUILD.cargo-util-schemas-0.8.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__cargo_metadata-0.21.0",
        sha256 = "5cfca2aaa699835ba88faf58a06342a314a950d2b9686165e038286c30316868",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/cargo_metadata/0.21.0/download"],
        strip_prefix = "cargo_metadata-0.21.0",
        build_file = Label("//vendor/cargo:BUILD.cargo_metadata-0.21.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__cargo_toml-0.22.3",
        sha256 = "374b7c592d9c00c1f4972ea58390ac6b18cbb6ab79011f3bdc90a0b82ca06b77",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/cargo_toml/0.22.3/download"],
        strip_prefix = "cargo_toml-0.22.3",
        build_file = Label("//vendor/cargo:BUILD.cargo_toml-0.22.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__cast-0.3.0",
        sha256 = "37b2a672a2cb129a2e41c10b1224bb368f9f37a2b16b612598138befd7b37eb5",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/cast/0.3.0/download"],
        strip_prefix = "cast-0.3.0",
        build_file = Label("//vendor/cargo:BUILD.cast-0.3.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__cc-1.2.37",
        sha256 = "65193589c6404eb80b450d618eaf9a2cafaaafd57ecce47370519ef674a7bd44",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/cc/1.2.37/download"],
        strip_prefix = "cc-1.2.37",
        build_file = Label("//vendor/cargo:BUILD.cc-1.2.37.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__cedar-policy-4.5.1",
        sha256 = "c48e6e6d7a17aabe41cf70c5613413ce0cc82f5f651357843bd02b8d41ca08a4",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/cedar-policy/4.5.1/download"],
        strip_prefix = "cedar-policy-4.5.1",
        build_file = Label("//vendor/cargo:BUILD.cedar-policy-4.5.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__cedar-policy-core-4.5.1",
        sha256 = "02b45be5c965ce63bec3d284fefe0e042342f4e77f149a1e7aafc045119df738",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/cedar-policy-core/4.5.1/download"],
        strip_prefix = "cedar-policy-core-4.5.1",
        build_file = Label("//vendor/cargo:BUILD.cedar-policy-core-4.5.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__cedar-policy-formatter-4.5.1",
        sha256 = "ddec9c888e3afff8000f92d7c93e20a32559301c65fb80683335fb8bb8bf2f35",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/cedar-policy-formatter/4.5.1/download"],
        strip_prefix = "cedar-policy-formatter-4.5.1",
        build_file = Label("//vendor/cargo:BUILD.cedar-policy-formatter-4.5.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__cel-parser-0.8.1",
        sha256 = "e0dd23a4ed74b971fc46943ea8869a1cc751350f98571e09985f88570fe3f9e1",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/cel-parser/0.8.1/download"],
        strip_prefix = "cel-parser-0.8.1",
        build_file = Label("//vendor/cargo:BUILD.cel-parser-0.8.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__cexpr-0.6.0",
        sha256 = "6fac387a98bb7c37292057cffc56d62ecb629900026402633ae9160df93a8766",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/cexpr/0.6.0/download"],
        strip_prefix = "cexpr-0.6.0",
        build_file = Label("//vendor/cargo:BUILD.cexpr-0.6.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__cfg-expr-0.20.2",
        sha256 = "c8d458d63f0f0f482c8da9b7c8b76c21bd885a02056cc94c6404d861ca2b8206",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/cfg-expr/0.20.2/download"],
        strip_prefix = "cfg-expr-0.20.2",
        build_file = Label("//vendor/cargo:BUILD.cfg-expr-0.20.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__cfg-if-1.0.3",
        sha256 = "2fd1289c04a9ea8cb22300a459a72a385d7c73d3259e2ed7dcb2af674838cfa9",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/cfg-if/1.0.3/download"],
        strip_prefix = "cfg-if-1.0.3",
        build_file = Label("//vendor/cargo:BUILD.cfg-if-1.0.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__cfg_aliases-0.2.1",
        sha256 = "613afe47fcd5fac7ccf1db93babcb082c5994d996f20b8b159f2ad1658eb5724",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/cfg_aliases/0.2.1/download"],
        strip_prefix = "cfg_aliases-0.2.1",
        build_file = Label("//vendor/cargo:BUILD.cfg_aliases-0.2.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__chrono-0.4.42",
        sha256 = "145052bdd345b87320e369255277e3fb5152762ad123a901ef5c262dd38fe8d2",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/chrono/0.4.42/download"],
        strip_prefix = "chrono-0.4.42",
        build_file = Label("//vendor/cargo:BUILD.chrono-0.4.42.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__ciborium-0.2.2",
        sha256 = "42e69ffd6f0917f5c029256a24d0161db17cea3997d185db0d35926308770f0e",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/ciborium/0.2.2/download"],
        strip_prefix = "ciborium-0.2.2",
        build_file = Label("//vendor/cargo:BUILD.ciborium-0.2.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__ciborium-io-0.2.2",
        sha256 = "05afea1e0a06c9be33d539b876f1ce3692f4afea2cb41f740e7743225ed1c757",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/ciborium-io/0.2.2/download"],
        strip_prefix = "ciborium-io-0.2.2",
        build_file = Label("//vendor/cargo:BUILD.ciborium-io-0.2.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__ciborium-ll-0.2.2",
        sha256 = "57663b653d948a338bfb3eeba9bb2fd5fcfaecb9e199e87e1eda4d9e8b240fd9",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/ciborium-ll/0.2.2/download"],
        strip_prefix = "ciborium-ll-0.2.2",
        build_file = Label("//vendor/cargo:BUILD.ciborium-ll-0.2.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__clang-sys-1.8.1",
        sha256 = "0b023947811758c97c59bf9d1c188fd619ad4718dcaa767947df1cadb14f39f4",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/clang-sys/1.8.1/download"],
        strip_prefix = "clang-sys-1.8.1",
        build_file = Label("//vendor/cargo:BUILD.clang-sys-1.8.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__clap-4.5.47",
        sha256 = "7eac00902d9d136acd712710d71823fb8ac8004ca445a89e73a41d45aa712931",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/clap/4.5.47/download"],
        strip_prefix = "clap-4.5.47",
        build_file = Label("//vendor/cargo:BUILD.clap-4.5.47.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__clap_builder-4.5.47",
        sha256 = "2ad9bbf750e73b5884fb8a211a9424a1906c1e156724260fdae972f31d70e1d6",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/clap_builder/4.5.47/download"],
        strip_prefix = "clap_builder-4.5.47",
        build_file = Label("//vendor/cargo:BUILD.clap_builder-4.5.47.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__clap_derive-4.5.47",
        sha256 = "bbfd7eae0b0f1a6e63d4b13c9c478de77c2eb546fba158ad50b4203dc24b9f9c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/clap_derive/4.5.47/download"],
        strip_prefix = "clap_derive-4.5.47",
        build_file = Label("//vendor/cargo:BUILD.clap_derive-4.5.47.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__clap_lex-0.7.5",
        sha256 = "b94f61472cee1439c0b966b47e3aca9ae07e45d070759512cd390ea2bebc6675",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/clap_lex/0.7.5/download"],
        strip_prefix = "clap_lex-0.7.5",
        build_file = Label("//vendor/cargo:BUILD.clap_lex-0.7.5.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__cmake-0.1.54",
        sha256 = "e7caa3f9de89ddbe2c607f4101924c5abec803763ae9534e4f4d7d8f84aa81f0",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/cmake/0.1.54/download"],
        strip_prefix = "cmake-0.1.54",
        build_file = Label("//vendor/cargo:BUILD.cmake-0.1.54.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__colorchoice-1.0.4",
        sha256 = "b05b61dc5112cbb17e4b6cd61790d9845d13888356391624cbe7e41efeac1e75",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/colorchoice/1.0.4/download"],
        strip_prefix = "colorchoice-1.0.4",
        build_file = Label("//vendor/cargo:BUILD.colorchoice-1.0.4.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__config-0.15.15",
        sha256 = "0faa974509d38b33ff89282db9c3295707ccf031727c0de9772038ec526852ba",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/config/0.15.15/download"],
        strip_prefix = "config-0.15.15",
        build_file = Label("//vendor/cargo:BUILD.config-0.15.15.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__console-0.15.11",
        sha256 = "054ccb5b10f9f2cbf51eb355ca1d05c2d279ce1804688d0db74b4733a5aeafd8",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/console/0.15.11/download"],
        strip_prefix = "console-0.15.11",
        build_file = Label("//vendor/cargo:BUILD.console-0.15.11.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__console-0.16.1",
        sha256 = "b430743a6eb14e9764d4260d4c0d8123087d504eeb9c48f2b2a5e810dd369df4",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/console/0.16.1/download"],
        strip_prefix = "console-0.16.1",
        build_file = Label("//vendor/cargo:BUILD.console-0.16.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__const-oid-0.9.6",
        sha256 = "c2459377285ad874054d797f3ccebf984978aa39129f6eafde5cdc8315b612f8",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/const-oid/0.9.6/download"],
        strip_prefix = "const-oid-0.9.6",
        build_file = Label("//vendor/cargo:BUILD.const-oid-0.9.6.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__const-random-0.1.18",
        sha256 = "87e00182fe74b066627d63b85fd550ac2998d4b0bd86bfed477a0ae4c7c71359",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/const-random/0.1.18/download"],
        strip_prefix = "const-random-0.1.18",
        build_file = Label("//vendor/cargo:BUILD.const-random-0.1.18.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__const-random-macro-0.1.16",
        sha256 = "f9d839f2a20b0aee515dc581a6172f2321f96cab76c1a38a4c584a194955390e",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/const-random-macro/0.1.16/download"],
        strip_prefix = "const-random-macro-0.1.16",
        build_file = Label("//vendor/cargo:BUILD.const-random-macro-0.1.16.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__const_panic-0.2.15",
        sha256 = "e262cdaac42494e3ae34c43969f9cdeb7da178bdb4b66fa6a1ea2edb4c8ae652",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/const_panic/0.2.15/download"],
        strip_prefix = "const_panic-0.2.15",
        build_file = Label("//vendor/cargo:BUILD.const_panic-0.2.15.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__constant_time_eq-0.3.1",
        sha256 = "7c74b8349d32d297c9134b8c88677813a227df8f779daa29bfc29c183fe3dca6",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/constant_time_eq/0.3.1/download"],
        strip_prefix = "constant_time_eq-0.3.1",
        build_file = Label("//vendor/cargo:BUILD.constant_time_eq-0.3.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__convert_case-0.7.1",
        sha256 = "bb402b8d4c85569410425650ce3eddc7d698ed96d39a73f941b08fb63082f1e7",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/convert_case/0.7.1/download"],
        strip_prefix = "convert_case-0.7.1",
        build_file = Label("//vendor/cargo:BUILD.convert_case-0.7.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__convert_case-0.8.0",
        sha256 = "baaaa0ecca5b51987b9423ccdc971514dd8b0bb7b4060b983d3664dad3f1f89f",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/convert_case/0.8.0/download"],
        strip_prefix = "convert_case-0.8.0",
        build_file = Label("//vendor/cargo:BUILD.convert_case-0.8.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__cookie-factory-0.3.2",
        sha256 = "396de984970346b0d9e93d1415082923c679e5ae5c3ee3dcbd104f5610af126b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/cookie-factory/0.3.2/download"],
        strip_prefix = "cookie-factory-0.3.2",
        build_file = Label("//vendor/cargo:BUILD.cookie-factory-0.3.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__copy_dir-0.1.3",
        sha256 = "543d1dd138ef086e2ff05e3a48cf9da045da2033d16f8538fd76b86cd49b2ca3",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/copy_dir/0.1.3/download"],
        strip_prefix = "copy_dir-0.1.3",
        build_file = Label("//vendor/cargo:BUILD.copy_dir-0.1.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__core-foundation-0.10.1",
        sha256 = "b2a6cd9ae233e7f62ba4e9353e81a88df7fc8a5987b8d445b4d90c879bd156f6",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/core-foundation/0.10.1/download"],
        strip_prefix = "core-foundation-0.10.1",
        build_file = Label("//vendor/cargo:BUILD.core-foundation-0.10.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__core-foundation-sys-0.8.7",
        sha256 = "773648b94d0e5d620f64f280777445740e61fe701025087ec8b57f45c791888b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/core-foundation-sys/0.8.7/download"],
        strip_prefix = "core-foundation-sys-0.8.7",
        build_file = Label("//vendor/cargo:BUILD.core-foundation-sys-0.8.7.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__cpp_demangle-0.4.4",
        sha256 = "96e58d342ad113c2b878f16d5d034c03be492ae460cdbc02b7f0f2284d310c7d",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/cpp_demangle/0.4.4/download"],
        strip_prefix = "cpp_demangle-0.4.4",
        build_file = Label("//vendor/cargo:BUILD.cpp_demangle-0.4.4.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__cpufeatures-0.2.17",
        sha256 = "59ed5838eebb26a2bb2e58f6d5b5316989ae9d08bab10e0e6d103e656d1b0280",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/cpufeatures/0.2.17/download"],
        strip_prefix = "cpufeatures-0.2.17",
        build_file = Label("//vendor/cargo:BUILD.cpufeatures-0.2.17.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__crc16-0.4.0",
        sha256 = "338089f42c427b86394a5ee60ff321da23a5c89c9d89514c829687b26359fcff",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/crc16/0.4.0/download"],
        strip_prefix = "crc16-0.4.0",
        build_file = Label("//vendor/cargo:BUILD.crc16-0.4.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__crc32fast-1.5.0",
        sha256 = "9481c1c90cbf2ac953f07c8d4a58aa3945c425b7185c9154d67a65e4230da511",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/crc32fast/1.5.0/download"],
        strip_prefix = "crc32fast-1.5.0",
        build_file = Label("//vendor/cargo:BUILD.crc32fast-1.5.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__criterion-0.7.0",
        sha256 = "e1c047a62b0cc3e145fa84415a3191f628e980b194c2755aa12300a4e6cbd928",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/criterion/0.7.0/download"],
        strip_prefix = "criterion-0.7.0",
        build_file = Label("//vendor/cargo:BUILD.criterion-0.7.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__criterion-plot-0.6.0",
        sha256 = "9b1bcc0dc7dfae599d84ad0b1a55f80cde8af3725da8313b528da95ef783e338",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/criterion-plot/0.6.0/download"],
        strip_prefix = "criterion-plot-0.6.0",
        build_file = Label("//vendor/cargo:BUILD.criterion-plot-0.6.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__crossbeam-channel-0.5.15",
        sha256 = "82b8f8f868b36967f9606790d1903570de9ceaf870a7bf9fbbd3016d636a2cb2",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/crossbeam-channel/0.5.15/download"],
        strip_prefix = "crossbeam-channel-0.5.15",
        build_file = Label("//vendor/cargo:BUILD.crossbeam-channel-0.5.15.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__crossbeam-deque-0.8.6",
        sha256 = "9dd111b7b7f7d55b72c0a6ae361660ee5853c9af73f70c3c2ef6858b950e2e51",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/crossbeam-deque/0.8.6/download"],
        strip_prefix = "crossbeam-deque-0.8.6",
        build_file = Label("//vendor/cargo:BUILD.crossbeam-deque-0.8.6.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__crossbeam-epoch-0.9.18",
        sha256 = "5b82ac4a3c2ca9c3460964f020e1402edd5753411d7737aa39c3714ad1b5420e",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/crossbeam-epoch/0.9.18/download"],
        strip_prefix = "crossbeam-epoch-0.9.18",
        build_file = Label("//vendor/cargo:BUILD.crossbeam-epoch-0.9.18.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__crossbeam-utils-0.8.21",
        sha256 = "d0a5c400df2834b80a4c3327b3aad3a4c4cd4de0629063962b03235697506a28",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/crossbeam-utils/0.8.21/download"],
        strip_prefix = "crossbeam-utils-0.8.21",
        build_file = Label("//vendor/cargo:BUILD.crossbeam-utils-0.8.21.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__crossterm-0.29.0",
        sha256 = "d8b9f2e4c67f833b660cdb0a3523065869fb35570177239812ed4c905aeff87b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/crossterm/0.29.0/download"],
        strip_prefix = "crossterm-0.29.0",
        build_file = Label("//vendor/cargo:BUILD.crossterm-0.29.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__crossterm_winapi-0.9.1",
        sha256 = "acdd7c62a3665c7f6830a51635d9ac9b23ed385797f70a83bb8bafe9c572ab2b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/crossterm_winapi/0.9.1/download"],
        strip_prefix = "crossterm_winapi-0.9.1",
        build_file = Label("//vendor/cargo:BUILD.crossterm_winapi-0.9.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__crunchy-0.2.4",
        sha256 = "460fbee9c2c2f33933d720630a6a0bac33ba7053db5344fac858d4b8952d77d5",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/crunchy/0.2.4/download"],
        strip_prefix = "crunchy-0.2.4",
        build_file = Label("//vendor/cargo:BUILD.crunchy-0.2.4.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__crypto-common-0.1.6",
        sha256 = "1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/crypto-common/0.1.6/download"],
        strip_prefix = "crypto-common-0.1.6",
        build_file = Label("//vendor/cargo:BUILD.crypto-common-0.1.6.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__cssparser-0.35.0",
        sha256 = "4e901edd733a1472f944a45116df3f846f54d37e67e68640ac8bb69689aca2aa",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/cssparser/0.35.0/download"],
        strip_prefix = "cssparser-0.35.0",
        build_file = Label("//vendor/cargo:BUILD.cssparser-0.35.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__cssparser-macros-0.6.1",
        sha256 = "13b588ba4ac1a99f7f2964d24b3d896ddc6bf847ee3855dbd4366f058cfcd331",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/cssparser-macros/0.6.1/download"],
        strip_prefix = "cssparser-macros-0.6.1",
        build_file = Label("//vendor/cargo:BUILD.cssparser-macros-0.6.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__darling-0.20.11",
        sha256 = "fc7f46116c46ff9ab3eb1597a45688b6715c6e628b5c133e288e709a29bcb4ee",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/darling/0.20.11/download"],
        strip_prefix = "darling-0.20.11",
        build_file = Label("//vendor/cargo:BUILD.darling-0.20.11.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__darling-0.21.3",
        sha256 = "9cdf337090841a411e2a7f3deb9187445851f91b309c0c0a29e05f74a00a48c0",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/darling/0.21.3/download"],
        strip_prefix = "darling-0.21.3",
        build_file = Label("//vendor/cargo:BUILD.darling-0.21.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__darling_core-0.20.11",
        sha256 = "0d00b9596d185e565c2207a0b01f8bd1a135483d02d9b7b0a54b11da8d53412e",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/darling_core/0.20.11/download"],
        strip_prefix = "darling_core-0.20.11",
        build_file = Label("//vendor/cargo:BUILD.darling_core-0.20.11.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__darling_core-0.21.3",
        sha256 = "1247195ecd7e3c85f83c8d2a366e4210d588e802133e1e355180a9870b517ea4",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/darling_core/0.21.3/download"],
        strip_prefix = "darling_core-0.21.3",
        build_file = Label("//vendor/cargo:BUILD.darling_core-0.21.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__darling_macro-0.20.11",
        sha256 = "fc34b93ccb385b40dc71c6fceac4b2ad23662c7eeb248cf10d529b7e055b6ead",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/darling_macro/0.20.11/download"],
        strip_prefix = "darling_macro-0.20.11",
        build_file = Label("//vendor/cargo:BUILD.darling_macro-0.20.11.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__darling_macro-0.21.3",
        sha256 = "d38308df82d1080de0afee5d069fa14b0326a88c14f15c5ccda35b4a6c414c81",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/darling_macro/0.21.3/download"],
        strip_prefix = "darling_macro-0.21.3",
        build_file = Label("//vendor/cargo:BUILD.darling_macro-0.21.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__data-encoding-2.9.0",
        sha256 = "2a2330da5de22e8a3cb63252ce2abb30116bf5265e89c0e01bc17015ce30a476",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/data-encoding/2.9.0/download"],
        strip_prefix = "data-encoding-2.9.0",
        build_file = Label("//vendor/cargo:BUILD.data-encoding-2.9.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__debug-ignore-1.0.5",
        sha256 = "ffe7ed1d93f4553003e20b629abe9085e1e81b1429520f897f8f8860bc6dfc21",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/debug-ignore/1.0.5/download"],
        strip_prefix = "debug-ignore-1.0.5",
        build_file = Label("//vendor/cargo:BUILD.debug-ignore-1.0.5.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__debugid-0.8.0",
        sha256 = "bef552e6f588e446098f6ba40d89ac146c8c7b64aade83c051ee00bb5d2bc18d",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/debugid/0.8.0/download"],
        strip_prefix = "debugid-0.8.0",
        build_file = Label("//vendor/cargo:BUILD.debugid-0.8.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__der-0.7.10",
        sha256 = "e7c1832837b905bbfb5101e07cc24c8deddf52f93225eee6ead5f4d63d53ddcb",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/der/0.7.10/download"],
        strip_prefix = "der-0.7.10",
        build_file = Label("//vendor/cargo:BUILD.der-0.7.10.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__der-parser-9.0.0",
        sha256 = "5cd0a5c643689626bec213c4d8bd4d96acc8ffdb4ad4bb6bc16abf27d5f4b553",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/der-parser/9.0.0/download"],
        strip_prefix = "der-parser-9.0.0",
        build_file = Label("//vendor/cargo:BUILD.der-parser-9.0.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__deranged-0.5.3",
        sha256 = "d630bccd429a5bb5a64b5e94f693bfc48c9f8566418fda4c494cc94f911f87cc",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/deranged/0.5.3/download"],
        strip_prefix = "deranged-0.5.3",
        build_file = Label("//vendor/cargo:BUILD.deranged-0.5.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__derive-where-1.6.0",
        sha256 = "ef941ded77d15ca19b40374869ac6000af1c9f2a4c0f3d4c70926287e6364a8f",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/derive-where/1.6.0/download"],
        strip_prefix = "derive-where-1.6.0",
        build_file = Label("//vendor/cargo:BUILD.derive-where-1.6.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__derive_more-2.0.1",
        sha256 = "093242cf7570c207c83073cf82f79706fe7b8317e98620a47d5be7c3d8497678",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/derive_more/2.0.1/download"],
        strip_prefix = "derive_more-2.0.1",
        build_file = Label("//vendor/cargo:BUILD.derive_more-2.0.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__derive_more-impl-2.0.1",
        sha256 = "bda628edc44c4bb645fbe0f758797143e4e07926f7ebf4e9bdfbd3d2ce621df3",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/derive_more-impl/2.0.1/download"],
        strip_prefix = "derive_more-impl-2.0.1",
        build_file = Label("//vendor/cargo:BUILD.derive_more-impl-2.0.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__diesel-2.2.12",
        sha256 = "229850a212cd9b84d4f0290ad9d294afc0ae70fccaa8949dbe8b43ffafa1e20c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/diesel/2.2.12/download"],
        strip_prefix = "diesel-2.2.12",
        build_file = Label("//vendor/cargo:BUILD.diesel-2.2.12.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__diesel-async-0.6.1",
        sha256 = "7fcc26599f590c7e5b182a05061cfb445f216bb069df72eb31f38cffde8ca598",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/diesel-async/0.6.1/download"],
        strip_prefix = "diesel-async-0.6.1",
        build_file = Label("//vendor/cargo:BUILD.diesel-async-0.6.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__diesel_derives-2.2.7",
        sha256 = "1b96984c469425cb577bf6f17121ecb3e4fe1e81de5d8f780dd372802858d756",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/diesel_derives/2.2.7/download"],
        strip_prefix = "diesel_derives-2.2.7",
        build_file = Label("//vendor/cargo:BUILD.diesel_derives-2.2.7.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__diesel_table_macro_syntax-0.2.0",
        sha256 = "209c735641a413bc68c4923a9d6ad4bcb3ca306b794edaa7eb0b3228a99ffb25",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/diesel_table_macro_syntax/0.2.0/download"],
        strip_prefix = "diesel_table_macro_syntax-0.2.0",
        build_file = Label("//vendor/cargo:BUILD.diesel_table_macro_syntax-0.2.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__digest-0.10.7",
        sha256 = "9ed9a281f7bc9b7576e61468ba615a66a5c8cfdff42420a70aa82701a3b1e292",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/digest/0.10.7/download"],
        strip_prefix = "digest-0.10.7",
        build_file = Label("//vendor/cargo:BUILD.digest-0.10.7.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__displaydoc-0.2.5",
        sha256 = "97369cbbc041bc366949bc74d34658d6cda5621039731c6310521892a3a20ae0",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/displaydoc/0.2.5/download"],
        strip_prefix = "displaydoc-0.2.5",
        build_file = Label("//vendor/cargo:BUILD.displaydoc-0.2.5.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__dlv-list-0.5.2",
        sha256 = "442039f5147480ba31067cb00ada1adae6892028e40e45fc5de7b7df6dcc1b5f",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/dlv-list/0.5.2/download"],
        strip_prefix = "dlv-list-0.5.2",
        build_file = Label("//vendor/cargo:BUILD.dlv-list-0.5.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__docker_credential-1.3.2",
        sha256 = "1d89dfcba45b4afad7450a99b39e751590463e45c04728cf555d36bb66940de8",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/docker_credential/1.3.2/download"],
        strip_prefix = "docker_credential-1.3.2",
        build_file = Label("//vendor/cargo:BUILD.docker_credential-1.3.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__document-features-0.2.11",
        sha256 = "95249b50c6c185bee49034bcb378a49dc2b5dff0be90ff6616d31d64febab05d",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/document-features/0.2.11/download"],
        strip_prefix = "document-features-0.2.11",
        build_file = Label("//vendor/cargo:BUILD.document-features-0.2.11.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__dsl_auto_type-0.1.3",
        sha256 = "139ae9aca7527f85f26dd76483eb38533fd84bd571065da1739656ef71c5ff5b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/dsl_auto_type/0.1.3/download"],
        strip_prefix = "dsl_auto_type-0.1.3",
        build_file = Label("//vendor/cargo:BUILD.dsl_auto_type-0.1.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__dtoa-1.0.10",
        sha256 = "d6add3b8cff394282be81f3fc1a0605db594ed69890078ca6e2cab1c408bcf04",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/dtoa/1.0.10/download"],
        strip_prefix = "dtoa-1.0.10",
        build_file = Label("//vendor/cargo:BUILD.dtoa-1.0.10.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__dtoa-short-0.3.5",
        sha256 = "cd1511a7b6a56299bd043a9c167a6d2bfb37bf84a6dfceaba651168adfb43c87",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/dtoa-short/0.3.5/download"],
        strip_prefix = "dtoa-short-0.3.5",
        build_file = Label("//vendor/cargo:BUILD.dtoa-short-0.3.5.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__duct-1.1.0",
        sha256 = "d7478638a31d1f1f3d6c9f5e57c76b906a04ac4879d6fd0fb6245bc88f73fd0b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/duct/1.1.0/download"],
        strip_prefix = "duct-1.1.0",
        build_file = Label("//vendor/cargo:BUILD.duct-1.1.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__dunce-1.0.5",
        sha256 = "92773504d58c093f6de2459af4af33faa518c13451eb8f2b5698ed3d36e7c813",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/dunce/1.0.5/download"],
        strip_prefix = "dunce-1.0.5",
        build_file = Label("//vendor/cargo:BUILD.dunce-1.0.5.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__educe-0.6.0",
        sha256 = "1d7bc049e1bd8cdeb31b68bbd586a9464ecf9f3944af3958a7a9d0f8b9799417",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/educe/0.6.0/download"],
        strip_prefix = "educe-0.6.0",
        build_file = Label("//vendor/cargo:BUILD.educe-0.6.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__either-1.15.0",
        sha256 = "48c757948c5ede0e46177b7add2e67155f70e33c07fea8284df6576da70b3719",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/either/1.15.0/download"],
        strip_prefix = "either-1.15.0",
        build_file = Label("//vendor/cargo:BUILD.either-1.15.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__email_address-0.2.9",
        sha256 = "e079f19b08ca6239f47f8ba8509c11cf3ea30095831f7fed61441475edd8c449",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/email_address/0.2.9/download"],
        strip_prefix = "email_address-0.2.9",
        build_file = Label("//vendor/cargo:BUILD.email_address-0.2.9.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__ena-0.14.3",
        sha256 = "3d248bdd43ce613d87415282f69b9bb99d947d290b10962dd6c56233312c2ad5",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/ena/0.14.3/download"],
        strip_prefix = "ena-0.14.3",
        build_file = Label("//vendor/cargo:BUILD.ena-0.14.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__encode_unicode-1.0.0",
        sha256 = "34aa73646ffb006b8f5147f3dc182bd4bcb190227ce861fc4a4844bf8e3cb2c0",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/encode_unicode/1.0.0/download"],
        strip_prefix = "encode_unicode-1.0.0",
        build_file = Label("//vendor/cargo:BUILD.encode_unicode-1.0.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__encoding_rs-0.8.35",
        sha256 = "75030f3c4f45dafd7586dd6780965a8c7e8e285a5ecb86713e63a79c5b2766f3",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/encoding_rs/0.8.35/download"],
        strip_prefix = "encoding_rs-0.8.35",
        build_file = Label("//vendor/cargo:BUILD.encoding_rs-0.8.35.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__enum-ordinalize-4.3.0",
        sha256 = "fea0dcfa4e54eeb516fe454635a95753ddd39acda650ce703031c6973e315dd5",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/enum-ordinalize/4.3.0/download"],
        strip_prefix = "enum-ordinalize-4.3.0",
        build_file = Label("//vendor/cargo:BUILD.enum-ordinalize-4.3.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__enum-ordinalize-derive-4.3.1",
        sha256 = "0d28318a75d4aead5c4db25382e8ef717932d0346600cacae6357eb5941bc5ff",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/enum-ordinalize-derive/4.3.1/download"],
        strip_prefix = "enum-ordinalize-derive-4.3.1",
        build_file = Label("//vendor/cargo:BUILD.enum-ordinalize-derive-4.3.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__env_filter-0.1.3",
        sha256 = "186e05a59d4c50738528153b83b0b0194d3a29507dfec16eccd4b342903397d0",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/env_filter/0.1.3/download"],
        strip_prefix = "env_filter-0.1.3",
        build_file = Label("//vendor/cargo:BUILD.env_filter-0.1.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__env_logger-0.10.2",
        sha256 = "4cd405aab171cb85d6735e5c8d9db038c17d3ca007a4d2c25f337935c3d90580",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/env_logger/0.10.2/download"],
        strip_prefix = "env_logger-0.10.2",
        build_file = Label("//vendor/cargo:BUILD.env_logger-0.10.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__env_logger-0.11.8",
        sha256 = "13c863f0904021b108aa8b2f55046443e6b1ebde8fd4a15c399893aae4fa069f",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/env_logger/0.11.8/download"],
        strip_prefix = "env_logger-0.11.8",
        build_file = Label("//vendor/cargo:BUILD.env_logger-0.11.8.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__equator-0.4.2",
        sha256 = "4711b213838dfee0117e3be6ac926007d7f433d7bbe33595975d4190cb07e6fc",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/equator/0.4.2/download"],
        strip_prefix = "equator-0.4.2",
        build_file = Label("//vendor/cargo:BUILD.equator-0.4.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__equator-macro-0.4.2",
        sha256 = "44f23cf4b44bfce11a86ace86f8a73ffdec849c9fd00a386a53d278bd9e81fb3",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/equator-macro/0.4.2/download"],
        strip_prefix = "equator-macro-0.4.2",
        build_file = Label("//vendor/cargo:BUILD.equator-macro-0.4.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__equivalent-1.0.2",
        sha256 = "877a4ace8713b0bcf2a4e7eec82529c029f1d0619886d18145fea96c3ffe5c0f",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/equivalent/1.0.2/download"],
        strip_prefix = "equivalent-1.0.2",
        build_file = Label("//vendor/cargo:BUILD.equivalent-1.0.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__erased-serde-0.4.6",
        sha256 = "e004d887f51fcb9fef17317a2f3525c887d8aa3f4f50fed920816a688284a5b7",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/erased-serde/0.4.6/download"],
        strip_prefix = "erased-serde-0.4.6",
        build_file = Label("//vendor/cargo:BUILD.erased-serde-0.4.6.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__errno-0.3.14",
        sha256 = "39cab71617ae0d63f51a36d69f866391735b51691dbda63cf6f96d042b63efeb",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/errno/0.3.14/download"],
        strip_prefix = "errno-0.3.14",
        build_file = Label("//vendor/cargo:BUILD.errno-0.3.14.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__etcetera-0.10.0",
        sha256 = "26c7b13d0780cb82722fd59f6f57f925e143427e4a75313a6c77243bf5326ae6",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/etcetera/0.10.0/download"],
        strip_prefix = "etcetera-0.10.0",
        build_file = Label("//vendor/cargo:BUILD.etcetera-0.10.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__fallible-iterator-0.2.0",
        sha256 = "4443176a9f2c162692bd3d352d745ef9413eec5782a80d8fd6f8a1ac692a07f7",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/fallible-iterator/0.2.0/download"],
        strip_prefix = "fallible-iterator-0.2.0",
        build_file = Label("//vendor/cargo:BUILD.fallible-iterator-0.2.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__fastrand-2.3.0",
        sha256 = "37909eebbb50d72f9059c3b6d82c0463f2ff062c9e95845c43a6c9c0355411be",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/fastrand/2.3.0/download"],
        strip_prefix = "fastrand-2.3.0",
        build_file = Label("//vendor/cargo:BUILD.fastrand-2.3.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__fdeflate-0.3.7",
        sha256 = "1e6853b52649d4ac5c0bd02320cddc5ba956bdb407c4b75a2c6b75bf51500f8c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/fdeflate/0.3.7/download"],
        strip_prefix = "fdeflate-0.3.7",
        build_file = Label("//vendor/cargo:BUILD.fdeflate-0.3.7.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__filetime-0.2.26",
        sha256 = "bc0505cd1b6fa6580283f6bdf70a73fcf4aba1184038c90902b92b3dd0df63ed",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/filetime/0.2.26/download"],
        strip_prefix = "filetime-0.2.26",
        build_file = Label("//vendor/cargo:BUILD.filetime-0.2.26.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__find-msvc-tools-0.1.1",
        sha256 = "7fd99930f64d146689264c637b5af2f0233a933bef0d8570e2526bf9e083192d",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/find-msvc-tools/0.1.1/download"],
        strip_prefix = "find-msvc-tools-0.1.1",
        build_file = Label("//vendor/cargo:BUILD.find-msvc-tools-0.1.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__findshlibs-0.10.2",
        sha256 = "40b9e59cd0f7e0806cca4be089683ecb6434e602038df21fe6bf6711b2f07f64",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/findshlibs/0.10.2/download"],
        strip_prefix = "findshlibs-0.10.2",
        build_file = Label("//vendor/cargo:BUILD.findshlibs-0.10.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__fixed-1.29.0",
        sha256 = "707070ccf8c4173548210893a0186e29c266901b71ed20cd9e2ca0193dfe95c3",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/fixed/1.29.0/download"],
        strip_prefix = "fixed-1.29.0",
        build_file = Label("//vendor/cargo:BUILD.fixed-1.29.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__fixedbitset-0.4.2",
        sha256 = "0ce7134b9999ecaf8bcd65542e436736ef32ddca1b3e06094cb6ec5755203b80",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/fixedbitset/0.4.2/download"],
        strip_prefix = "fixedbitset-0.4.2",
        build_file = Label("//vendor/cargo:BUILD.fixedbitset-0.4.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__fixedbitset-0.5.7",
        sha256 = "1d674e81391d1e1ab681a28d99df07927c6d4aa5b027d7da16ba32d1d21ecd99",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/fixedbitset/0.5.7/download"],
        strip_prefix = "fixedbitset-0.5.7",
        build_file = Label("//vendor/cargo:BUILD.fixedbitset-0.5.7.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__flate2-1.1.2",
        sha256 = "4a3d7db9596fecd151c5f638c0ee5d5bd487b6e0ea232e5dc96d5250f6f94b1d",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/flate2/1.1.2/download"],
        strip_prefix = "flate2-1.1.2",
        build_file = Label("//vendor/cargo:BUILD.flate2-1.1.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__float-cmp-0.10.0",
        sha256 = "b09cf3155332e944990140d967ff5eceb70df778b34f77d8075db46e4704e6d8",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/float-cmp/0.10.0/download"],
        strip_prefix = "float-cmp-0.10.0",
        build_file = Label("//vendor/cargo:BUILD.float-cmp-0.10.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__fmtools-0.1.2",
        sha256 = "f983ed6d4eec47f6b970d69908ceff3ce37a3a9699194ee130fc3e223a351d1a",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/fmtools/0.1.2/download"],
        strip_prefix = "fmtools-0.1.2",
        build_file = Label("//vendor/cargo:BUILD.fmtools-0.1.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__fnv-1.0.7",
        sha256 = "3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/fnv/1.0.7/download"],
        strip_prefix = "fnv-1.0.7",
        build_file = Label("//vendor/cargo:BUILD.fnv-1.0.7.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__foldhash-0.1.5",
        sha256 = "d9c4f5dac5e15c24eb999c26181a6ca40b39fe946cbe4c263c7209467bc83af2",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/foldhash/0.1.5/download"],
        strip_prefix = "foldhash-0.1.5",
        build_file = Label("//vendor/cargo:BUILD.foldhash-0.1.5.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__foreign-types-0.3.2",
        sha256 = "f6f339eb8adc052cd2ca78910fda869aefa38d22d5cb648e6485e4d3fc06f3b1",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/foreign-types/0.3.2/download"],
        strip_prefix = "foreign-types-0.3.2",
        build_file = Label("//vendor/cargo:BUILD.foreign-types-0.3.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__foreign-types-shared-0.1.1",
        sha256 = "00b0228411908ca8685dba7fc2cdd70ec9990a6e753e89b6ac91a84c40fbaf4b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/foreign-types-shared/0.1.1/download"],
        strip_prefix = "foreign-types-shared-0.1.1",
        build_file = Label("//vendor/cargo:BUILD.foreign-types-shared-0.1.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__form_urlencoded-1.2.2",
        sha256 = "cb4cb245038516f5f85277875cdaa4f7d2c9a0fa0468de06ed190163b1581fcf",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/form_urlencoded/1.2.2/download"],
        strip_prefix = "form_urlencoded-1.2.2",
        build_file = Label("//vendor/cargo:BUILD.form_urlencoded-1.2.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__fred-10.1.0",
        sha256 = "3a7b2fd0f08b23315c13b6156f971aeedb6f75fb16a29ac1872d2eabccc1490e",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/fred/10.1.0/download"],
        strip_prefix = "fred-10.1.0",
        build_file = Label("//vendor/cargo:BUILD.fred-10.1.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__fred-macros-0.1.0",
        sha256 = "1458c6e22d36d61507034d5afecc64f105c1d39712b7ac6ec3b352c423f715cc",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/fred-macros/0.1.0/download"],
        strip_prefix = "fred-macros-0.1.0",
        build_file = Label("//vendor/cargo:BUILD.fred-macros-0.1.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__fs_extra-1.3.0",
        sha256 = "42703706b716c37f96a77aea830392ad231f44c9e9a67872fa5548707e11b11c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/fs_extra/1.3.0/download"],
        strip_prefix = "fs_extra-1.3.0",
        build_file = Label("//vendor/cargo:BUILD.fs_extra-1.3.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__future-queue-0.4.0",
        sha256 = "47cdf4a7eef4808ffa1e5c47dbf37124dfe33a7acc34e8568c5d5359b365a8cb",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/future-queue/0.4.0/download"],
        strip_prefix = "future-queue-0.4.0",
        build_file = Label("//vendor/cargo:BUILD.future-queue-0.4.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__futures-0.3.31",
        sha256 = "65bc07b1a8bc7c85c5f2e110c476c7389b4554ba72af57d8445ea63a576b0876",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/futures/0.3.31/download"],
        strip_prefix = "futures-0.3.31",
        build_file = Label("//vendor/cargo:BUILD.futures-0.3.31.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__futures-channel-0.3.31",
        sha256 = "2dff15bf788c671c1934e366d07e30c1814a8ef514e1af724a602e8a2fbe1b10",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/futures-channel/0.3.31/download"],
        strip_prefix = "futures-channel-0.3.31",
        build_file = Label("//vendor/cargo:BUILD.futures-channel-0.3.31.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__futures-core-0.3.31",
        sha256 = "05f29059c0c2090612e8d742178b0580d2dc940c837851ad723096f87af6663e",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/futures-core/0.3.31/download"],
        strip_prefix = "futures-core-0.3.31",
        build_file = Label("//vendor/cargo:BUILD.futures-core-0.3.31.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__futures-executor-0.3.31",
        sha256 = "1e28d1d997f585e54aebc3f97d39e72338912123a67330d723fdbb564d646c9f",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/futures-executor/0.3.31/download"],
        strip_prefix = "futures-executor-0.3.31",
        build_file = Label("//vendor/cargo:BUILD.futures-executor-0.3.31.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__futures-io-0.3.31",
        sha256 = "9e5c1b78ca4aae1ac06c48a526a655760685149f0d465d21f37abfe57ce075c6",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/futures-io/0.3.31/download"],
        strip_prefix = "futures-io-0.3.31",
        build_file = Label("//vendor/cargo:BUILD.futures-io-0.3.31.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__futures-lite-2.6.1",
        sha256 = "f78e10609fe0e0b3f4157ffab1876319b5b0db102a2c60dc4626306dc46b44ad",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/futures-lite/2.6.1/download"],
        strip_prefix = "futures-lite-2.6.1",
        build_file = Label("//vendor/cargo:BUILD.futures-lite-2.6.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__futures-macro-0.3.31",
        sha256 = "162ee34ebcb7c64a8abebc059ce0fee27c2262618d7b60ed8faf72fef13c3650",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/futures-macro/0.3.31/download"],
        strip_prefix = "futures-macro-0.3.31",
        build_file = Label("//vendor/cargo:BUILD.futures-macro-0.3.31.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__futures-sink-0.3.31",
        sha256 = "e575fab7d1e0dcb8d0c7bcf9a63ee213816ab51902e6d244a95819acacf1d4f7",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/futures-sink/0.3.31/download"],
        strip_prefix = "futures-sink-0.3.31",
        build_file = Label("//vendor/cargo:BUILD.futures-sink-0.3.31.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__futures-task-0.3.31",
        sha256 = "f90f7dce0722e95104fcb095585910c0977252f286e354b5e3bd38902cd99988",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/futures-task/0.3.31/download"],
        strip_prefix = "futures-task-0.3.31",
        build_file = Label("//vendor/cargo:BUILD.futures-task-0.3.31.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__futures-util-0.3.31",
        sha256 = "9fa08315bb612088cc391249efdc3bc77536f16c91f6cf495e6fbe85b20a4a81",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/futures-util/0.3.31/download"],
        strip_prefix = "futures-util-0.3.31",
        build_file = Label("//vendor/cargo:BUILD.futures-util-0.3.31.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__fxhash-0.2.1",
        sha256 = "c31b6d751ae2c7f11320402d34e41349dd1016f8d5d45e48c4312bc8625af50c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/fxhash/0.2.1/download"],
        strip_prefix = "fxhash-0.2.1",
        build_file = Label("//vendor/cargo:BUILD.fxhash-0.2.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__generic-array-0.14.7",
        sha256 = "85649ca51fd72272d7821adaf274ad91c288277713d9c18820d8499a7ff69e9a",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/generic-array/0.14.7/download"],
        strip_prefix = "generic-array-0.14.7",
        build_file = Label("//vendor/cargo:BUILD.generic-array-0.14.7.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__gethostname-1.0.2",
        sha256 = "fc257fdb4038301ce4b9cd1b3b51704509692bb3ff716a410cbd07925d9dae55",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/gethostname/1.0.2/download"],
        strip_prefix = "gethostname-1.0.2",
        build_file = Label("//vendor/cargo:BUILD.gethostname-1.0.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__getopts-0.2.24",
        sha256 = "cfe4fbac503b8d1f88e6676011885f34b7174f46e59956bba534ba83abded4df",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/getopts/0.2.24/download"],
        strip_prefix = "getopts-0.2.24",
        build_file = Label("//vendor/cargo:BUILD.getopts-0.2.24.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__getrandom-0.2.16",
        sha256 = "335ff9f135e4384c8150d6f27c6daed433577f86b4750418338c01a1a2528592",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/getrandom/0.2.16/download"],
        strip_prefix = "getrandom-0.2.16",
        build_file = Label("//vendor/cargo:BUILD.getrandom-0.2.16.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__getrandom-0.3.3",
        sha256 = "26145e563e54f2cadc477553f1ec5ee650b00862f0a58bcd12cbdc5f0ea2d2f4",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/getrandom/0.3.3/download"],
        strip_prefix = "getrandom-0.3.3",
        build_file = Label("//vendor/cargo:BUILD.getrandom-0.3.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__gimli-0.31.1",
        sha256 = "07e28edb80900c19c28f1072f2e8aeca7fa06b23cd4169cefe1af5aa3260783f",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/gimli/0.31.1/download"],
        strip_prefix = "gimli-0.31.1",
        build_file = Label("//vendor/cargo:BUILD.gimli-0.31.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__glob-0.3.3",
        sha256 = "0cc23270f6e1808e30a928bdc84dea0b9b4136a8bc82338574f23baf47bbd280",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/glob/0.3.3/download"],
        strip_prefix = "glob-0.3.3",
        build_file = Label("//vendor/cargo:BUILD.glob-0.3.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__globset-0.4.16",
        sha256 = "54a1028dfc5f5df5da8a56a73e6c153c9a9708ec57232470703592a3f18e49f5",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/globset/0.4.16/download"],
        strip_prefix = "globset-0.4.16",
        build_file = Label("//vendor/cargo:BUILD.globset-0.4.16.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__guppy-0.17.20",
        sha256 = "7eadc0c380d2c5f421758a5838ce593687da4a47d1dcf1169bf3bad629b764e7",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/guppy/0.17.20/download"],
        strip_prefix = "guppy-0.17.20",
        build_file = Label("//vendor/cargo:BUILD.guppy-0.17.20.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__guppy-workspace-hack-0.1.0",
        sha256 = "92620684d99f750bae383ecb3be3748142d6095760afd5cbcf2261e9a279d780",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/guppy-workspace-hack/0.1.0/download"],
        strip_prefix = "guppy-workspace-hack-0.1.0",
        build_file = Label("//vendor/cargo:BUILD.guppy-workspace-hack-0.1.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__h2-0.4.12",
        sha256 = "f3c0b69cfcb4e1b9f1bf2f53f95f766e4661169728ec61cd3fe5a0166f2d1386",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/h2/0.4.12/download"],
        strip_prefix = "h2-0.4.12",
        build_file = Label("//vendor/cargo:BUILD.h2-0.4.12.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__h3-0.0.8",
        sha256 = "10872b55cfb02a821b69dc7cf8dc6a71d6af25eb9a79662bec4a9d016056b3be",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/h3/0.0.8/download"],
        strip_prefix = "h3-0.0.8",
        build_file = Label("//vendor/cargo:BUILD.h3-0.0.8.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__h3-quinn-0.0.10",
        sha256 = "8b2e732c8d91a74731663ac8479ab505042fbf547b9a207213ab7fbcbfc4f8b4",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/h3-quinn/0.0.10/download"],
        strip_prefix = "h3-quinn-0.0.10",
        build_file = Label("//vendor/cargo:BUILD.h3-quinn-0.0.10.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__half-1.8.3",
        sha256 = "1b43ede17f21864e81be2fa654110bf1e793774238d86ef8555c37e6519c0403",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/half/1.8.3/download"],
        strip_prefix = "half-1.8.3",
        build_file = Label("//vendor/cargo:BUILD.half-1.8.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__half-2.6.0",
        sha256 = "459196ed295495a68f7d7fe1d84f6c4b7ff0e21fe3017b2f283c6fac3ad803c9",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/half/2.6.0/download"],
        strip_prefix = "half-2.6.0",
        build_file = Label("//vendor/cargo:BUILD.half-2.6.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__hashbrown-0.14.5",
        sha256 = "e5274423e17b7c9fc20b6e7e208532f9b19825d82dfd615708b70edd83df41f1",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/hashbrown/0.14.5/download"],
        strip_prefix = "hashbrown-0.14.5",
        build_file = Label("//vendor/cargo:BUILD.hashbrown-0.14.5.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__hashbrown-0.15.5",
        sha256 = "9229cfe53dfd69f0609a49f65461bd93001ea1ef889cd5529dd176593f5338a1",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/hashbrown/0.15.5/download"],
        strip_prefix = "hashbrown-0.15.5",
        build_file = Label("//vendor/cargo:BUILD.hashbrown-0.15.5.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__hashlink-0.10.0",
        sha256 = "7382cf6263419f2d8df38c55d7da83da5c18aef87fc7a7fc1fb1e344edfe14c1",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/hashlink/0.10.0/download"],
        strip_prefix = "hashlink-0.10.0",
        build_file = Label("//vendor/cargo:BUILD.hashlink-0.10.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__heck-0.5.0",
        sha256 = "2304e00983f87ffb38b55b444b5e3b60a884b5d30c0fca7d82fe33449bbe55ea",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/heck/0.5.0/download"],
        strip_prefix = "heck-0.5.0",
        build_file = Label("//vendor/cargo:BUILD.heck-0.5.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__hex-0.4.3",
        sha256 = "7f24254aa9a54b5c858eaee2f5bccdb46aaf0e486a595ed5fd8f86ba55232a70",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/hex/0.4.3/download"],
        strip_prefix = "hex-0.4.3",
        build_file = Label("//vendor/cargo:BUILD.hex-0.4.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__hmac-0.12.1",
        sha256 = "6c49c37c09c17a53d937dfbb742eb3a961d65a994e6bcdcf37e7399d0cc8ab5e",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/hmac/0.12.1/download"],
        strip_prefix = "hmac-0.12.1",
        build_file = Label("//vendor/cargo:BUILD.hmac-0.12.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__home-0.5.11",
        sha256 = "589533453244b0995c858700322199b2becb13b627df2851f64a2775d024abcf",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/home/0.5.11/download"],
        strip_prefix = "home-0.5.11",
        build_file = Label("//vendor/cargo:BUILD.home-0.5.11.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__http-1.3.1",
        sha256 = "f4a85d31aea989eead29a3aaf9e1115a180df8282431156e533de47660892565",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/http/1.3.1/download"],
        strip_prefix = "http-1.3.1",
        build_file = Label("//vendor/cargo:BUILD.http-1.3.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__http-body-1.0.1",
        sha256 = "1efedce1fb8e6913f23e0c92de8e62cd5b772a67e7b3946df930a62566c93184",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/http-body/1.0.1/download"],
        strip_prefix = "http-body-1.0.1",
        build_file = Label("//vendor/cargo:BUILD.http-body-1.0.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__http-body-util-0.1.3",
        sha256 = "b021d93e26becf5dc7e1b75b1bed1fd93124b374ceb73f43d4d4eafec896a64a",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/http-body-util/0.1.3/download"],
        strip_prefix = "http-body-util-0.1.3",
        build_file = Label("//vendor/cargo:BUILD.http-body-util-0.1.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__httparse-1.10.1",
        sha256 = "6dbf3de79e51f3d586ab4cb9d5c3e2c14aa28ed23d180cf89b4df0454a69cc87",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/httparse/1.10.1/download"],
        strip_prefix = "httparse-1.10.1",
        build_file = Label("//vendor/cargo:BUILD.httparse-1.10.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__httpdate-1.0.3",
        sha256 = "df3b46402a9d5adb4c86a0cf463f42e19994e3ee891101b1841f30a545cb49a9",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/httpdate/1.0.3/download"],
        strip_prefix = "httpdate-1.0.3",
        build_file = Label("//vendor/cargo:BUILD.httpdate-1.0.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__humantime-2.3.0",
        sha256 = "135b12329e5e3ce057a9f972339ea52bc954fe1e9358ef27f95e89716fbc5424",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/humantime/2.3.0/download"],
        strip_prefix = "humantime-2.3.0",
        build_file = Label("//vendor/cargo:BUILD.humantime-2.3.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__humantime-serde-1.1.1",
        sha256 = "57a3db5ea5923d99402c94e9feb261dc5ee9b4efa158b0315f788cf549cc200c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/humantime-serde/1.1.1/download"],
        strip_prefix = "humantime-serde-1.1.1",
        build_file = Label("//vendor/cargo:BUILD.humantime-serde-1.1.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__hyper-1.7.0",
        sha256 = "eb3aa54a13a0dfe7fbe3a59e0c76093041720fdc77b110cc0fc260fafb4dc51e",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/hyper/1.7.0/download"],
        strip_prefix = "hyper-1.7.0",
        build_file = Label("//vendor/cargo:BUILD.hyper-1.7.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__hyper-named-pipe-0.1.0",
        sha256 = "73b7d8abf35697b81a825e386fc151e0d503e8cb5fcb93cc8669c376dfd6f278",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/hyper-named-pipe/0.1.0/download"],
        strip_prefix = "hyper-named-pipe-0.1.0",
        build_file = Label("//vendor/cargo:BUILD.hyper-named-pipe-0.1.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__hyper-rustls-0.27.7",
        sha256 = "e3c93eb611681b207e1fe55d5a71ecf91572ec8a6705cdb6857f7d8d5242cf58",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/hyper-rustls/0.27.7/download"],
        strip_prefix = "hyper-rustls-0.27.7",
        build_file = Label("//vendor/cargo:BUILD.hyper-rustls-0.27.7.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__hyper-timeout-0.5.2",
        sha256 = "2b90d566bffbce6a75bd8b09a05aa8c2cb1fabb6cb348f8840c9e4c90a0d83b0",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/hyper-timeout/0.5.2/download"],
        strip_prefix = "hyper-timeout-0.5.2",
        build_file = Label("//vendor/cargo:BUILD.hyper-timeout-0.5.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__hyper-util-0.1.16",
        sha256 = "8d9b05277c7e8da2c93a568989bb6207bef0112e8d17df7a6eda4a3cf143bc5e",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/hyper-util/0.1.16/download"],
        strip_prefix = "hyper-util-0.1.16",
        build_file = Label("//vendor/cargo:BUILD.hyper-util-0.1.16.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__hyperlocal-0.9.1",
        sha256 = "986c5ce3b994526b3cd75578e62554abd09f0899d6206de48b3e96ab34ccc8c7",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/hyperlocal/0.9.1/download"],
        strip_prefix = "hyperlocal-0.9.1",
        build_file = Label("//vendor/cargo:BUILD.hyperlocal-0.9.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__iana-time-zone-0.1.64",
        sha256 = "33e57f83510bb73707521ebaffa789ec8caf86f9657cad665b092b581d40e9fb",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/iana-time-zone/0.1.64/download"],
        strip_prefix = "iana-time-zone-0.1.64",
        build_file = Label("//vendor/cargo:BUILD.iana-time-zone-0.1.64.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__icu_collections-2.0.0",
        sha256 = "200072f5d0e3614556f94a9930d5dc3e0662a652823904c3a75dc3b0af7fee47",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/icu_collections/2.0.0/download"],
        strip_prefix = "icu_collections-2.0.0",
        build_file = Label("//vendor/cargo:BUILD.icu_collections-2.0.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__icu_locale_core-2.0.0",
        sha256 = "0cde2700ccaed3872079a65fb1a78f6c0a36c91570f28755dda67bc8f7d9f00a",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/icu_locale_core/2.0.0/download"],
        strip_prefix = "icu_locale_core-2.0.0",
        build_file = Label("//vendor/cargo:BUILD.icu_locale_core-2.0.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__icu_normalizer-2.0.0",
        sha256 = "436880e8e18df4d7bbc06d58432329d6458cc84531f7ac5f024e93deadb37979",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/icu_normalizer/2.0.0/download"],
        strip_prefix = "icu_normalizer-2.0.0",
        build_file = Label("//vendor/cargo:BUILD.icu_normalizer-2.0.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__icu_normalizer_data-2.0.0",
        sha256 = "00210d6893afc98edb752b664b8890f0ef174c8adbb8d0be9710fa66fbbf72d3",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/icu_normalizer_data/2.0.0/download"],
        strip_prefix = "icu_normalizer_data-2.0.0",
        build_file = Label("//vendor/cargo:BUILD.icu_normalizer_data-2.0.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__icu_properties-2.0.1",
        sha256 = "016c619c1eeb94efb86809b015c58f479963de65bdb6253345c1a1276f22e32b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/icu_properties/2.0.1/download"],
        strip_prefix = "icu_properties-2.0.1",
        build_file = Label("//vendor/cargo:BUILD.icu_properties-2.0.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__icu_properties_data-2.0.1",
        sha256 = "298459143998310acd25ffe6810ed544932242d3f07083eee1084d83a71bd632",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/icu_properties_data/2.0.1/download"],
        strip_prefix = "icu_properties_data-2.0.1",
        build_file = Label("//vendor/cargo:BUILD.icu_properties_data-2.0.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__icu_provider-2.0.0",
        sha256 = "03c80da27b5f4187909049ee2d72f276f0d9f99a42c306bd0131ecfe04d8e5af",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/icu_provider/2.0.0/download"],
        strip_prefix = "icu_provider-2.0.0",
        build_file = Label("//vendor/cargo:BUILD.icu_provider-2.0.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__iddqd-0.3.12",
        sha256 = "8cced377b2b081501b1a33157064dba846c68b045c10dbd31f8f730463ec8a64",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/iddqd/0.3.12/download"],
        strip_prefix = "iddqd-0.3.12",
        build_file = Label("//vendor/cargo:BUILD.iddqd-0.3.12.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__ident_case-1.0.1",
        sha256 = "b9e0384b61958566e926dc50660321d12159025e767c18e043daf26b70104c39",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/ident_case/1.0.1/download"],
        strip_prefix = "ident_case-1.0.1",
        build_file = Label("//vendor/cargo:BUILD.ident_case-1.0.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__idna-1.1.0",
        sha256 = "3b0875f23caa03898994f6ddc501886a45c7d3d62d04d2d90788d47be1b1e4de",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/idna/1.1.0/download"],
        strip_prefix = "idna-1.1.0",
        build_file = Label("//vendor/cargo:BUILD.idna-1.1.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__idna_adapter-1.2.1",
        sha256 = "3acae9609540aa318d1bc588455225fb2085b9ed0c4f6bd0d9d5bcd86f1a0344",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/idna_adapter/1.2.1/download"],
        strip_prefix = "idna_adapter-1.2.1",
        build_file = Label("//vendor/cargo:BUILD.idna_adapter-1.2.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__image-0.25.8",
        sha256 = "529feb3e6769d234375c4cf1ee2ce713682b8e76538cb13f9fc23e1400a591e7",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/image/0.25.8/download"],
        strip_prefix = "image-0.25.8",
        build_file = Label("//vendor/cargo:BUILD.image-0.25.8.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__indent_write-2.2.0",
        sha256 = "0cfe9645a18782869361d9c8732246be7b410ad4e919d3609ebabdac00ba12c3",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/indent_write/2.2.0/download"],
        strip_prefix = "indent_write-2.2.0",
        build_file = Label("//vendor/cargo:BUILD.indent_write-2.2.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__indexmap-2.11.1",
        sha256 = "206a8042aec68fa4a62e8d3f7aa4ceb508177d9324faf261e1959e495b7a1921",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/indexmap/2.11.1/download"],
        strip_prefix = "indexmap-2.11.1",
        build_file = Label("//vendor/cargo:BUILD.indexmap-2.11.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__indicatif-0.18.0",
        sha256 = "70a646d946d06bedbbc4cac4c218acf4bbf2d87757a784857025f4d447e4e1cd",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/indicatif/0.18.0/download"],
        strip_prefix = "indicatif-0.18.0",
        build_file = Label("//vendor/cargo:BUILD.indicatif-0.18.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__insta-1.43.2",
        sha256 = "46fdb647ebde000f43b5b53f773c30cf9b0cb4300453208713fa38b2c70935a0",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/insta/1.43.2/download"],
        strip_prefix = "insta-1.43.2",
        build_file = Label("//vendor/cargo:BUILD.insta-1.43.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__ipnet-2.11.0",
        sha256 = "469fb0b9cefa57e3ef31275ee7cacb78f2fdca44e4765491884a2b119d4eb130",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/ipnet/2.11.0/download"],
        strip_prefix = "ipnet-2.11.0",
        build_file = Label("//vendor/cargo:BUILD.ipnet-2.11.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__ipnetwork-0.21.1",
        sha256 = "cf370abdafd54d13e54a620e8c3e1145f28e46cc9d704bc6d94414559df41763",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/ipnetwork/0.21.1/download"],
        strip_prefix = "ipnetwork-0.21.1",
        build_file = Label("//vendor/cargo:BUILD.ipnetwork-0.21.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__iri-string-0.7.8",
        sha256 = "dbc5ebe9c3a1a7a5127f920a418f7585e9e758e911d0466ed004f393b0e380b2",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/iri-string/0.7.8/download"],
        strip_prefix = "iri-string-0.7.8",
        build_file = Label("//vendor/cargo:BUILD.iri-string-0.7.8.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__is-terminal-0.4.16",
        sha256 = "e04d7f318608d35d4b61ddd75cbdaee86b023ebe2bd5a66ee0915f0bf93095a9",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/is-terminal/0.4.16/download"],
        strip_prefix = "is-terminal-0.4.16",
        build_file = Label("//vendor/cargo:BUILD.is-terminal-0.4.16.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__is_ci-1.2.0",
        sha256 = "7655c9839580ee829dfacba1d1278c2b7883e50a277ff7541299489d6bdfdc45",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/is_ci/1.2.0/download"],
        strip_prefix = "is_ci-1.2.0",
        build_file = Label("//vendor/cargo:BUILD.is_ci-1.2.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__is_empty-0.3.0",
        sha256 = "10889632e98e3d8c1209617cf0bc8c9f40f036ee5808cd2699d2b8b77e92849e",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/is_empty/0.3.0/download"],
        strip_prefix = "is_empty-0.3.0",
        build_file = Label("//vendor/cargo:BUILD.is_empty-0.3.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__is_empty_derive-0.1.0",
        sha256 = "d8903009eceffe882e7cb6adadd29001f4f0e46f67616247f40841a5604f1610",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/is_empty_derive/0.1.0/download"],
        strip_prefix = "is_empty_derive-0.1.0",
        build_file = Label("//vendor/cargo:BUILD.is_empty_derive-0.1.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__is_terminal_polyfill-1.70.1",
        sha256 = "7943c866cc5cd64cbc25b2e01621d07fa8eb2a1a23160ee81ce38704e97b8ecf",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/is_terminal_polyfill/1.70.1/download"],
        strip_prefix = "is_terminal_polyfill-1.70.1",
        build_file = Label("//vendor/cargo:BUILD.is_terminal_polyfill-1.70.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__itertools-0.12.1",
        sha256 = "ba291022dbbd398a455acf126c1e341954079855bc60dfdda641363bd6922569",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/itertools/0.12.1/download"],
        strip_prefix = "itertools-0.12.1",
        build_file = Label("//vendor/cargo:BUILD.itertools-0.12.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__itertools-0.13.0",
        sha256 = "413ee7dfc52ee1a4949ceeb7dbc8a33f2d6c088194d9f922fb8318faf1f01186",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/itertools/0.13.0/download"],
        strip_prefix = "itertools-0.13.0",
        build_file = Label("//vendor/cargo:BUILD.itertools-0.13.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__itertools-0.14.0",
        sha256 = "2b192c782037fadd9cfa75548310488aabdbf3d2da73885b31bd0abd03351285",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/itertools/0.14.0/download"],
        strip_prefix = "itertools-0.14.0",
        build_file = Label("//vendor/cargo:BUILD.itertools-0.14.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__itoa-1.0.15",
        sha256 = "4a5f13b858c8d314ee3e8f639011f7ccefe71f97f96e50151fb991f267928e2c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/itoa/1.0.15/download"],
        strip_prefix = "itoa-1.0.15",
        build_file = Label("//vendor/cargo:BUILD.itoa-1.0.15.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__itoap-1.0.1",
        sha256 = "9028f49264629065d057f340a86acb84867925865f73bbf8d47b4d149a7e88b8",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/itoap/1.0.1/download"],
        strip_prefix = "itoap-1.0.1",
        build_file = Label("//vendor/cargo:BUILD.itoap-1.0.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__jiff-0.2.15",
        sha256 = "be1f93b8b1eb69c77f24bbb0afdf66f54b632ee39af40ca21c4365a1d7347e49",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/jiff/0.2.15/download"],
        strip_prefix = "jiff-0.2.15",
        build_file = Label("//vendor/cargo:BUILD.jiff-0.2.15.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__jobserver-0.1.34",
        sha256 = "9afb3de4395d6b3e67a780b6de64b51c978ecf11cb9a462c66be7d4ca9039d33",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/jobserver/0.1.34/download"],
        strip_prefix = "jobserver-0.1.34",
        build_file = Label("//vendor/cargo:BUILD.jobserver-0.1.34.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__js-sys-0.3.78",
        sha256 = "0c0b063578492ceec17683ef2f8c5e89121fbd0b172cbc280635ab7567db2738",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/js-sys/0.3.78/download"],
        strip_prefix = "js-sys-0.3.78",
        build_file = Label("//vendor/cargo:BUILD.js-sys-0.3.78.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__json5-0.4.1",
        sha256 = "96b0db21af676c1ce64250b5f40f3ce2cf27e4e47cb91ed91eb6fe9350b430c1",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/json5/0.4.1/download"],
        strip_prefix = "json5-0.4.1",
        build_file = Label("//vendor/cargo:BUILD.json5-0.4.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__keccak-0.1.5",
        sha256 = "ecc2af9a1119c51f12a14607e783cb977bde58bc069ff0c3da1095e635d70654",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/keccak/0.1.5/download"],
        strip_prefix = "keccak-0.1.5",
        build_file = Label("//vendor/cargo:BUILD.keccak-0.1.5.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__konst-0.4.2",
        sha256 = "64896bdfd7906cfb0b57bc04f08bde408bcd6aaf71ff438ee471061cd16f2e86",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/konst/0.4.2/download"],
        strip_prefix = "konst-0.4.2",
        build_file = Label("//vendor/cargo:BUILD.konst-0.4.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__konst_proc_macros-0.4.0",
        sha256 = "1bf92d396aa2df203577ebef8deaf1efc24d446366ca86be83ec8ac794b157d6",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/konst_proc_macros/0.4.0/download"],
        strip_prefix = "konst_proc_macros-0.4.0",
        build_file = Label("//vendor/cargo:BUILD.konst_proc_macros-0.4.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__lalrpop-0.22.2",
        sha256 = "ba4ebbd48ce411c1d10fb35185f5a51a7bfa3d8b24b4e330d30c9e3a34129501",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/lalrpop/0.22.2/download"],
        strip_prefix = "lalrpop-0.22.2",
        build_file = Label("//vendor/cargo:BUILD.lalrpop-0.22.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__lalrpop-util-0.22.2",
        sha256 = "b5baa5e9ff84f1aefd264e6869907646538a52147a755d494517a8007fb48733",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/lalrpop-util/0.22.2/download"],
        strip_prefix = "lalrpop-util-0.22.2",
        build_file = Label("//vendor/cargo:BUILD.lalrpop-util-0.22.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__lazy_static-1.5.0",
        sha256 = "bbd2bcb4c963f2ddae06a2efc7e9f3591312473c50c6685e1f298068316e66fe",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/lazy_static/1.5.0/download"],
        strip_prefix = "lazy_static-1.5.0",
        build_file = Label("//vendor/cargo:BUILD.lazy_static-1.5.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__libc-0.2.175",
        sha256 = "6a82ae493e598baaea5209805c49bbf2ea7de956d50d7da0da1164f9c6d28543",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/libc/0.2.175/download"],
        strip_prefix = "libc-0.2.175",
        build_file = Label("//vendor/cargo:BUILD.libc-0.2.175.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__libloading-0.8.8",
        sha256 = "07033963ba89ebaf1584d767badaa2e8fcec21aedea6b8c0346d487d49c28667",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/libloading/0.8.8/download"],
        strip_prefix = "libloading-0.8.8",
        build_file = Label("//vendor/cargo:BUILD.libloading-0.8.8.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__libm-0.2.15",
        sha256 = "f9fbbcab51052fe104eb5e5d351cf728d30a5be1fe14d9be8a3b097481fb97de",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/libm/0.2.15/download"],
        strip_prefix = "libm-0.2.15",
        build_file = Label("//vendor/cargo:BUILD.libm-0.2.15.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__linear-map-1.2.0",
        sha256 = "bfae20f6b19ad527b550c223fddc3077a547fc70cda94b9b566575423fd303ee",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/linear-map/1.2.0/download"],
        strip_prefix = "linear-map-1.2.0",
        build_file = Label("//vendor/cargo:BUILD.linear-map-1.2.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__linkme-0.3.33",
        sha256 = "a1b1703c00b2a6a70738920544aa51652532cacddfec2e162d2e29eae01e665c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/linkme/0.3.33/download"],
        strip_prefix = "linkme-0.3.33",
        build_file = Label("//vendor/cargo:BUILD.linkme-0.3.33.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__linkme-impl-0.3.33",
        sha256 = "04d55ca5d5a14363da83bf3c33874b8feaa34653e760d5216d7ef9829c88001a",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/linkme-impl/0.3.33/download"],
        strip_prefix = "linkme-impl-0.3.33",
        build_file = Label("//vendor/cargo:BUILD.linkme-impl-0.3.33.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__linux-raw-sys-0.11.0",
        sha256 = "df1d3c3b53da64cf5760482273a98e575c651a67eec7f77df96b5b642de8f039",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/linux-raw-sys/0.11.0/download"],
        strip_prefix = "linux-raw-sys-0.11.0",
        build_file = Label("//vendor/cargo:BUILD.linux-raw-sys-0.11.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__linux-raw-sys-0.4.15",
        sha256 = "d26c52dbd32dccf2d10cac7725f8eae5296885fb5703b261f7d0a0739ec807ab",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/linux-raw-sys/0.4.15/download"],
        strip_prefix = "linux-raw-sys-0.4.15",
        build_file = Label("//vendor/cargo:BUILD.linux-raw-sys-0.4.15.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__litemap-0.8.0",
        sha256 = "241eaef5fd12c88705a01fc1066c48c4b36e0dd4377dcdc7ec3942cea7a69956",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/litemap/0.8.0/download"],
        strip_prefix = "litemap-0.8.0",
        build_file = Label("//vendor/cargo:BUILD.litemap-0.8.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__litrs-0.4.2",
        sha256 = "f5e54036fe321fd421e10d732f155734c4e4afd610dd556d9a82833ab3ee0bed",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/litrs/0.4.2/download"],
        strip_prefix = "litrs-0.4.2",
        build_file = Label("//vendor/cargo:BUILD.litrs-0.4.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__lock_api-0.4.13",
        sha256 = "96936507f153605bddfcda068dd804796c84324ed2510809e5b2a624c81da765",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/lock_api/0.4.13/download"],
        strip_prefix = "lock_api-0.4.13",
        build_file = Label("//vendor/cargo:BUILD.lock_api-0.4.13.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__log-0.4.28",
        sha256 = "34080505efa8e45a4b816c349525ebe327ceaa8559756f0356cba97ef3bf7432",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/log/0.4.28/download"],
        strip_prefix = "log-0.4.28",
        build_file = Label("//vendor/cargo:BUILD.log-0.4.28.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__logos-0.15.1",
        sha256 = "ff472f899b4ec2d99161c51f60ff7075eeb3097069a36050d8037a6325eb8154",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/logos/0.15.1/download"],
        strip_prefix = "logos-0.15.1",
        build_file = Label("//vendor/cargo:BUILD.logos-0.15.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__logos-codegen-0.15.1",
        sha256 = "192a3a2b90b0c05b27a0b2c43eecdb7c415e29243acc3f89cc8247a5b693045c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/logos-codegen/0.15.1/download"],
        strip_prefix = "logos-codegen-0.15.1",
        build_file = Label("//vendor/cargo:BUILD.logos-codegen-0.15.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__logos-derive-0.15.1",
        sha256 = "605d9697bcd5ef3a42d38efc51541aa3d6a4a25f7ab6d1ed0da5ac632a26b470",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/logos-derive/0.15.1/download"],
        strip_prefix = "logos-derive-0.15.1",
        build_file = Label("//vendor/cargo:BUILD.logos-derive-0.15.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__lol_html-2.6.0",
        sha256 = "b63d49c99bfbf3400dd6450e516515b7014fcb49b5cb533f4b725a00c1462a36",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/lol_html/2.6.0/download"],
        strip_prefix = "lol_html-2.6.0",
        build_file = Label("//vendor/cargo:BUILD.lol_html-2.6.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__lru-slab-0.1.2",
        sha256 = "112b39cec0b298b6c1999fee3e31427f74f676e4cb9879ed1a121b43661a4154",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/lru-slab/0.1.2/download"],
        strip_prefix = "lru-slab-0.1.2",
        build_file = Label("//vendor/cargo:BUILD.lru-slab-0.1.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__mail-builder-0.4.4",
        sha256 = "900998f307338c4013a28ab14d760b784067324b164448c6d98a89e44810473b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/mail-builder/0.4.4/download"],
        strip_prefix = "mail-builder-0.4.4",
        build_file = Label("//vendor/cargo:BUILD.mail-builder-0.4.4.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__matchers-0.2.0",
        sha256 = "d1525a2a28c7f4fa0fc98bb91ae755d1e2d1505079e05539e35bc876b5d65ae9",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/matchers/0.2.0/download"],
        strip_prefix = "matchers-0.2.0",
        build_file = Label("//vendor/cargo:BUILD.matchers-0.2.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__matchit-0.8.4",
        sha256 = "47e1ffaa40ddd1f3ed91f717a33c8c0ee23fff369e3aa8772b9605cc1d22f4c3",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/matchit/0.8.4/download"],
        strip_prefix = "matchit-0.8.4",
        build_file = Label("//vendor/cargo:BUILD.matchit-0.8.4.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__maxminddb-0.26.0",
        sha256 = "2a197e44322788858682406c74b0b59bf8d9b4954fe1f224d9a25147f1880bba",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/maxminddb/0.26.0/download"],
        strip_prefix = "maxminddb-0.26.0",
        build_file = Label("//vendor/cargo:BUILD.maxminddb-0.26.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__md-5-0.10.6",
        sha256 = "d89e7ee0cfbedfc4da3340218492196241d89eefb6dab27de5df917a6d2e78cf",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/md-5/0.10.6/download"],
        strip_prefix = "md-5-0.10.6",
        build_file = Label("//vendor/cargo:BUILD.md-5-0.10.6.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__mediatype-0.20.0",
        sha256 = "f490ea2ae935dd8ac89c472d4df28c7f6b87cc20767e1b21fd5ed6a16e7f61e4",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/mediatype/0.20.0/download"],
        strip_prefix = "mediatype-0.20.0",
        build_file = Label("//vendor/cargo:BUILD.mediatype-0.20.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__memchr-2.7.5",
        sha256 = "32a282da65faaf38286cf3be983213fcf1d2e2a58700e808f83f4ea9a4804bc0",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/memchr/2.7.5/download"],
        strip_prefix = "memchr-2.7.5",
        build_file = Label("//vendor/cargo:BUILD.memchr-2.7.5.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__memmap2-0.9.8",
        sha256 = "843a98750cd611cc2965a8213b53b43e715f13c37a9e096c6408e69990961db7",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/memmap2/0.9.8/download"],
        strip_prefix = "memmap2-0.9.8",
        build_file = Label("//vendor/cargo:BUILD.memmap2-0.9.8.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__miette-7.6.0",
        sha256 = "5f98efec8807c63c752b5bd61f862c165c115b0a35685bdcfd9238c7aeb592b7",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/miette/7.6.0/download"],
        strip_prefix = "miette-7.6.0",
        build_file = Label("//vendor/cargo:BUILD.miette-7.6.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__miette-derive-7.6.0",
        sha256 = "db5b29714e950dbb20d5e6f74f9dcec4edbcc1067bb7f8ed198c097b8c1a818b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/miette-derive/7.6.0/download"],
        strip_prefix = "miette-derive-7.6.0",
        build_file = Label("//vendor/cargo:BUILD.miette-derive-7.6.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__mime-0.3.17",
        sha256 = "6877bb514081ee2a7ff5ef9de3281f14a4dd4bceac4c09388074a6b5df8a139a",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/mime/0.3.17/download"],
        strip_prefix = "mime-0.3.17",
        build_file = Label("//vendor/cargo:BUILD.mime-0.3.17.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__minijinja-2.12.0",
        sha256 = "a9f264d75233323f4b7d2f03aefe8a990690cdebfbfe26ea86bcbaec5e9ac990",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/minijinja/2.12.0/download"],
        strip_prefix = "minijinja-2.12.0",
        build_file = Label("//vendor/cargo:BUILD.minijinja-2.12.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__minimal-lexical-0.2.1",
        sha256 = "68354c5c6bd36d73ff3feceb05efa59b6acb7626617f4962be322a825e61f79a",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/minimal-lexical/0.2.1/download"],
        strip_prefix = "minimal-lexical-0.2.1",
        build_file = Label("//vendor/cargo:BUILD.minimal-lexical-0.2.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__miniz_oxide-0.8.9",
        sha256 = "1fa76a2c86f704bdb222d66965fb3d63269ce38518b83cb0575fca855ebb6316",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/miniz_oxide/0.8.9/download"],
        strip_prefix = "miniz_oxide-0.8.9",
        build_file = Label("//vendor/cargo:BUILD.miniz_oxide-0.8.9.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__mio-1.0.4",
        sha256 = "78bed444cc8a2160f01cbcf811ef18cac863ad68ae8ca62092e8db51d51c761c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/mio/1.0.4/download"],
        strip_prefix = "mio-1.0.4",
        build_file = Label("//vendor/cargo:BUILD.mio-1.0.4.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__moxcms-0.7.5",
        sha256 = "ddd32fa8935aeadb8a8a6b6b351e40225570a37c43de67690383d87ef170cd08",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/moxcms/0.7.5/download"],
        strip_prefix = "moxcms-0.7.5",
        build_file = Label("//vendor/cargo:BUILD.moxcms-0.7.5.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__multimap-0.10.1",
        sha256 = "1d87ecb2933e8aeadb3e3a02b828fed80a7528047e68b4f424523a0981a3a084",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/multimap/0.10.1/download"],
        strip_prefix = "multimap-0.10.1",
        build_file = Label("//vendor/cargo:BUILD.multimap-0.10.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__nested-0.1.1",
        sha256 = "ca2b420f638f07fe83056b55ea190bb815f609ec5a35e7017884a10f78839c9e",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/nested/0.1.1/download"],
        strip_prefix = "nested-0.1.1",
        build_file = Label("//vendor/cargo:BUILD.nested-0.1.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__new_debug_unreachable-1.0.6",
        sha256 = "650eef8c711430f1a879fdd01d4745a7deea475becfb90269c06775983bbf086",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/new_debug_unreachable/1.0.6/download"],
        strip_prefix = "new_debug_unreachable-1.0.6",
        build_file = Label("//vendor/cargo:BUILD.new_debug_unreachable-1.0.6.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__newtype-uuid-1.2.4",
        sha256 = "a17d82edb1c8a6c20c238747ae7aae9181133e766bc92cd2556fdd764407d0d1",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/newtype-uuid/1.2.4/download"],
        strip_prefix = "newtype-uuid-1.2.4",
        build_file = Label("//vendor/cargo:BUILD.newtype-uuid-1.2.4.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__nextest-filtering-0.16.0",
        sha256 = "af6239dc67632f6cbc09e5cd8bed87ead3859f2e99a21e726a1ff0bbe21e2c5f",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/nextest-filtering/0.16.0/download"],
        strip_prefix = "nextest-filtering-0.16.0",
        build_file = Label("//vendor/cargo:BUILD.nextest-filtering-0.16.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__nextest-metadata-0.12.2",
        sha256 = "d9a6698b97a0917b86d8ddeed0edb0fa638b594798510422448330def46b50d3",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/nextest-metadata/0.12.2/download"],
        strip_prefix = "nextest-metadata-0.12.2",
        build_file = Label("//vendor/cargo:BUILD.nextest-metadata-0.12.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__nextest-runner-0.85.0",
        sha256 = "8e2f3283b46e15d80958a9aa22877bcfc14855e20cfdae060c6bfda170131f4b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/nextest-runner/0.85.0/download"],
        strip_prefix = "nextest-runner-0.85.0",
        build_file = Label("//vendor/cargo:BUILD.nextest-runner-0.85.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__nextest-workspace-hack-0.1.0",
        sha256 = "d906846a98739ed9d73d66e62c2641eef8321f1734b7a1156ab045a0248fb2b3",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/nextest-workspace-hack/0.1.0/download"],
        strip_prefix = "nextest-workspace-hack-0.1.0",
        build_file = Label("//vendor/cargo:BUILD.nextest-workspace-hack-0.1.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__nix-0.26.4",
        sha256 = "598beaf3cc6fdd9a5dfb1630c2800c7acd31df7aaf0f565796fba2b53ca1af1b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/nix/0.26.4/download"],
        strip_prefix = "nix-0.26.4",
        build_file = Label("//vendor/cargo:BUILD.nix-0.26.4.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__nix-0.30.1",
        sha256 = "74523f3a35e05aba87a1d978330aef40f67b0304ac79c1c00b294c9830543db6",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/nix/0.30.1/download"],
        strip_prefix = "nix-0.30.1",
        build_file = Label("//vendor/cargo:BUILD.nix-0.30.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__nom-7.1.3",
        sha256 = "d273983c5a657a70a3e8f2a01329822f3b8c8172b73826411a55751e404a0a4a",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/nom/7.1.3/download"],
        strip_prefix = "nom-7.1.3",
        build_file = Label("//vendor/cargo:BUILD.nom-7.1.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__nonempty-0.10.0",
        sha256 = "303e8749c804ccd6ca3b428de7fe0d86cb86bc7606bc15291f100fd487960bb8",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/nonempty/0.10.0/download"],
        strip_prefix = "nonempty-0.10.0",
        build_file = Label("//vendor/cargo:BUILD.nonempty-0.10.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__nu-ansi-term-0.50.1",
        sha256 = "d4a28e057d01f97e61255210fcff094d74ed0466038633e95017f5beb68e4399",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/nu-ansi-term/0.50.1/download"],
        strip_prefix = "nu-ansi-term-0.50.1",
        build_file = Label("//vendor/cargo:BUILD.nu-ansi-term-0.50.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__num-0.4.3",
        sha256 = "35bd024e8b2ff75562e5f34e7f4905839deb4b22955ef5e73d2fea1b9813cb23",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/num/0.4.3/download"],
        strip_prefix = "num-0.4.3",
        build_file = Label("//vendor/cargo:BUILD.num-0.4.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__num-bigint-0.4.6",
        sha256 = "a5e44f723f1133c9deac646763579fdb3ac745e418f2a7af9cd0c431da1f20b9",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/num-bigint/0.4.6/download"],
        strip_prefix = "num-bigint-0.4.6",
        build_file = Label("//vendor/cargo:BUILD.num-bigint-0.4.6.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__num-bigint-dig-0.8.4",
        sha256 = "dc84195820f291c7697304f3cbdadd1cb7199c0efc917ff5eafd71225c136151",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/num-bigint-dig/0.8.4/download"],
        strip_prefix = "num-bigint-dig-0.8.4",
        build_file = Label("//vendor/cargo:BUILD.num-bigint-dig-0.8.4.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__num-complex-0.4.6",
        sha256 = "73f88a1307638156682bada9d7604135552957b7818057dcef22705b4d509495",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/num-complex/0.4.6/download"],
        strip_prefix = "num-complex-0.4.6",
        build_file = Label("//vendor/cargo:BUILD.num-complex-0.4.6.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__num-conv-0.1.0",
        sha256 = "51d515d32fb182ee37cda2ccdcb92950d6a3c2893aa280e540671c2cd0f3b1d9",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/num-conv/0.1.0/download"],
        strip_prefix = "num-conv-0.1.0",
        build_file = Label("//vendor/cargo:BUILD.num-conv-0.1.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__num-derive-0.4.2",
        sha256 = "ed3955f1a9c7c0c15e092f9c887db08b1fc683305fdf6eb6684f22555355e202",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/num-derive/0.4.2/download"],
        strip_prefix = "num-derive-0.4.2",
        build_file = Label("//vendor/cargo:BUILD.num-derive-0.4.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__num-integer-0.1.46",
        sha256 = "7969661fd2958a5cb096e56c8e1ad0444ac2bbcd0061bd28660485a44879858f",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/num-integer/0.1.46/download"],
        strip_prefix = "num-integer-0.1.46",
        build_file = Label("//vendor/cargo:BUILD.num-integer-0.1.46.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__num-iter-0.1.45",
        sha256 = "1429034a0490724d0075ebb2bc9e875d6503c3cf69e235a8941aa757d83ef5bf",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/num-iter/0.1.45/download"],
        strip_prefix = "num-iter-0.1.45",
        build_file = Label("//vendor/cargo:BUILD.num-iter-0.1.45.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__num-rational-0.4.2",
        sha256 = "f83d14da390562dca69fc84082e73e548e1ad308d24accdedd2720017cb37824",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/num-rational/0.4.2/download"],
        strip_prefix = "num-rational-0.4.2",
        build_file = Label("//vendor/cargo:BUILD.num-rational-0.4.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__num-traits-0.2.19",
        sha256 = "071dfc062690e90b734c0b2273ce72ad0ffa95f0c74596bc250dcfd960262841",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/num-traits/0.2.19/download"],
        strip_prefix = "num-traits-0.2.19",
        build_file = Label("//vendor/cargo:BUILD.num-traits-0.2.19.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__num_cpus-1.17.0",
        sha256 = "91df4bbde75afed763b708b7eee1e8e7651e02d97f6d5dd763e89367e957b23b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/num_cpus/1.17.0/download"],
        strip_prefix = "num_cpus-1.17.0",
        build_file = Label("//vendor/cargo:BUILD.num_cpus-1.17.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__object-0.36.7",
        sha256 = "62948e14d923ea95ea2c7c86c71013138b66525b86bdc08d2dcc262bdb497b87",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/object/0.36.7/download"],
        strip_prefix = "object-0.36.7",
        build_file = Label("//vendor/cargo:BUILD.object-0.36.7.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__oid-registry-0.7.1",
        sha256 = "a8d8034d9489cdaf79228eb9f6a3b8d7bb32ba00d6645ebd48eef4077ceb5bd9",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/oid-registry/0.7.1/download"],
        strip_prefix = "oid-registry-0.7.1",
        build_file = Label("//vendor/cargo:BUILD.oid-registry-0.7.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__once_cell-1.21.3",
        sha256 = "42f5e15c9953c5e4ccceeb2e7382a716482c34515315f7b03532b8b4e8393d2d",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/once_cell/1.21.3/download"],
        strip_prefix = "once_cell-1.21.3",
        build_file = Label("//vendor/cargo:BUILD.once_cell-1.21.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__once_cell_polyfill-1.70.1",
        sha256 = "a4895175b425cb1f87721b59f0f286c2092bd4af812243672510e1ac53e2e0ad",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/once_cell_polyfill/1.70.1/download"],
        strip_prefix = "once_cell_polyfill-1.70.1",
        build_file = Label("//vendor/cargo:BUILD.once_cell_polyfill-1.70.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__oorandom-11.1.5",
        sha256 = "d6790f58c7ff633d8771f42965289203411a5e5c68388703c06e14f24770b41e",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/oorandom/11.1.5/download"],
        strip_prefix = "oorandom-11.1.5",
        build_file = Label("//vendor/cargo:BUILD.oorandom-11.1.5.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__openssl-0.10.73",
        sha256 = "8505734d46c8ab1e19a1dce3aef597ad87dcb4c37e7188231769bd6bd51cebf8",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/openssl/0.10.73/download"],
        strip_prefix = "openssl-0.10.73",
        build_file = Label("//vendor/cargo:BUILD.openssl-0.10.73.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__openssl-macros-0.1.1",
        sha256 = "a948666b637a0f465e8564c73e89d4dde00d72d4d473cc972f390fc3dcee7d9c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/openssl-macros/0.1.1/download"],
        strip_prefix = "openssl-macros-0.1.1",
        build_file = Label("//vendor/cargo:BUILD.openssl-macros-0.1.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__openssl-probe-0.1.6",
        sha256 = "d05e27ee213611ffe7d6348b942e8f942b37114c00cc03cec254295a4a17852e",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/openssl-probe/0.1.6/download"],
        strip_prefix = "openssl-probe-0.1.6",
        build_file = Label("//vendor/cargo:BUILD.openssl-probe-0.1.6.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__openssl-sys-0.9.109",
        sha256 = "90096e2e47630d78b7d1c20952dc621f957103f8bc2c8359ec81290d75238571",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/openssl-sys/0.9.109/download"],
        strip_prefix = "openssl-sys-0.9.109",
        build_file = Label("//vendor/cargo:BUILD.openssl-sys-0.9.109.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__opentelemetry-0.30.0",
        sha256 = "aaf416e4cb72756655126f7dd7bb0af49c674f4c1b9903e80c009e0c37e552e6",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/opentelemetry/0.30.0/download"],
        strip_prefix = "opentelemetry-0.30.0",
        build_file = Label("//vendor/cargo:BUILD.opentelemetry-0.30.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__opentelemetry-appender-tracing-0.30.1",
        sha256 = "e68f63eca5fad47e570e00e893094fc17be959c80c79a7d6ec1abdd5ae6ffc16",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/opentelemetry-appender-tracing/0.30.1/download"],
        strip_prefix = "opentelemetry-appender-tracing-0.30.1",
        build_file = Label("//vendor/cargo:BUILD.opentelemetry-appender-tracing-0.30.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__opentelemetry-stdout-0.30.0",
        sha256 = "447191061af41c3943e082ea359ab8b64ff27d6d34d30d327df309ddef1eef6f",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/opentelemetry-stdout/0.30.0/download"],
        strip_prefix = "opentelemetry-stdout-0.30.0",
        build_file = Label("//vendor/cargo:BUILD.opentelemetry-stdout-0.30.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__opentelemetry_sdk-0.30.0",
        sha256 = "11f644aa9e5e31d11896e024305d7e3c98a88884d9f8919dbf37a9991bc47a4b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/opentelemetry_sdk/0.30.0/download"],
        strip_prefix = "opentelemetry_sdk-0.30.0",
        build_file = Label("//vendor/cargo:BUILD.opentelemetry_sdk-0.30.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__ordered-float-2.10.1",
        sha256 = "68f19d67e5a2795c94e73e0bb1cc1a7edeb2e28efd39e2e1c9b7a40c1108b11c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/ordered-float/2.10.1/download"],
        strip_prefix = "ordered-float-2.10.1",
        build_file = Label("//vendor/cargo:BUILD.ordered-float-2.10.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__ordered-float-5.0.0",
        sha256 = "e2c1f9f56e534ac6a9b8a4600bdf0f530fb393b5f393e7b4d03489c3cf0c3f01",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/ordered-float/5.0.0/download"],
        strip_prefix = "ordered-float-5.0.0",
        build_file = Label("//vendor/cargo:BUILD.ordered-float-5.0.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__ordered-multimap-0.7.3",
        sha256 = "49203cdcae0030493bad186b28da2fa25645fa276a51b6fec8010d281e02ef79",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/ordered-multimap/0.7.3/download"],
        strip_prefix = "ordered-multimap-0.7.3",
        build_file = Label("//vendor/cargo:BUILD.ordered-multimap-0.7.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__os_pipe-1.2.2",
        sha256 = "db335f4760b14ead6290116f2427bf33a14d4f0617d49f78a246de10c1831224",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/os_pipe/1.2.2/download"],
        strip_prefix = "os_pipe-1.2.2",
        build_file = Label("//vendor/cargo:BUILD.os_pipe-1.2.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__owo-colors-4.2.2",
        sha256 = "48dd4f4a2c8405440fd0462561f0e5806bd0f77e86f51c761481bdd4018b545e",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/owo-colors/4.2.2/download"],
        strip_prefix = "owo-colors-4.2.2",
        build_file = Label("//vendor/cargo:BUILD.owo-colors-4.2.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__parking-2.2.1",
        sha256 = "f38d5652c16fde515bb1ecef450ab0f6a219d619a7274976324d5e377f7dceba",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/parking/2.2.1/download"],
        strip_prefix = "parking-2.2.1",
        build_file = Label("//vendor/cargo:BUILD.parking-2.2.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__parking_lot-0.12.4",
        sha256 = "70d58bf43669b5795d1576d0641cfb6fbb2057bf629506267a92807158584a13",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/parking_lot/0.12.4/download"],
        strip_prefix = "parking_lot-0.12.4",
        build_file = Label("//vendor/cargo:BUILD.parking_lot-0.12.4.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__parking_lot_core-0.9.11",
        sha256 = "bc838d2a56b5b1a6c25f55575dfc605fabb63bb2365f6c2353ef9159aa69e4a5",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/parking_lot_core/0.9.11/download"],
        strip_prefix = "parking_lot_core-0.9.11",
        build_file = Label("//vendor/cargo:BUILD.parking_lot_core-0.9.11.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__parse-display-0.9.1",
        sha256 = "914a1c2265c98e2446911282c6ac86d8524f495792c38c5bd884f80499c7538a",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/parse-display/0.9.1/download"],
        strip_prefix = "parse-display-0.9.1",
        build_file = Label("//vendor/cargo:BUILD.parse-display-0.9.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__parse-display-derive-0.9.1",
        sha256 = "2ae7800a4c974efd12df917266338e79a7a74415173caf7e70aa0a0707345281",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/parse-display-derive/0.9.1/download"],
        strip_prefix = "parse-display-derive-0.9.1",
        build_file = Label("//vendor/cargo:BUILD.parse-display-derive-0.9.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__password-hash-0.5.0",
        sha256 = "346f04948ba92c43e8469c1ee6736c7563d71012b17d40745260fe106aac2166",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/password-hash/0.5.0/download"],
        strip_prefix = "password-hash-0.5.0",
        build_file = Label("//vendor/cargo:BUILD.password-hash-0.5.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__paste-1.0.15",
        sha256 = "57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/paste/1.0.15/download"],
        strip_prefix = "paste-1.0.15",
        build_file = Label("//vendor/cargo:BUILD.paste-1.0.15.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__pastey-0.1.1",
        sha256 = "35fb2e5f958ec131621fdd531e9fc186ed768cbe395337403ae56c17a74c68ec",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/pastey/0.1.1/download"],
        strip_prefix = "pastey-0.1.1",
        build_file = Label("//vendor/cargo:BUILD.pastey-0.1.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__pathdiff-0.2.3",
        sha256 = "df94ce210e5bc13cb6651479fa48d14f601d9858cfe0467f43ae157023b938d3",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/pathdiff/0.2.3/download"],
        strip_prefix = "pathdiff-0.2.3",
        build_file = Label("//vendor/cargo:BUILD.pathdiff-0.2.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__pem-rfc7468-0.7.0",
        sha256 = "88b39c9bfcfc231068454382784bb460aae594343fb030d46e9f50a645418412",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/pem-rfc7468/0.7.0/download"],
        strip_prefix = "pem-rfc7468-0.7.0",
        build_file = Label("//vendor/cargo:BUILD.pem-rfc7468-0.7.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__percent-encoding-2.3.2",
        sha256 = "9b4f627cb1b25917193a259e49bdad08f671f8d9708acfd5fe0a8c1455d87220",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/percent-encoding/2.3.2/download"],
        strip_prefix = "percent-encoding-2.3.2",
        build_file = Label("//vendor/cargo:BUILD.percent-encoding-2.3.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__pest-2.8.2",
        sha256 = "21e0a3a33733faeaf8651dfee72dd0f388f0c8e5ad496a3478fa5a922f49cfa8",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/pest/2.8.2/download"],
        strip_prefix = "pest-2.8.2",
        build_file = Label("//vendor/cargo:BUILD.pest-2.8.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__pest_derive-2.8.2",
        sha256 = "bc58706f770acb1dbd0973e6530a3cff4746fb721207feb3a8a6064cd0b6c663",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/pest_derive/2.8.2/download"],
        strip_prefix = "pest_derive-2.8.2",
        build_file = Label("//vendor/cargo:BUILD.pest_derive-2.8.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__pest_generator-2.8.2",
        sha256 = "6d4f36811dfe07f7b8573462465d5cb8965fffc2e71ae377a33aecf14c2c9a2f",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/pest_generator/2.8.2/download"],
        strip_prefix = "pest_generator-2.8.2",
        build_file = Label("//vendor/cargo:BUILD.pest_generator-2.8.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__pest_meta-2.8.2",
        sha256 = "42919b05089acbd0a5dcd5405fb304d17d1053847b81163d09c4ad18ce8e8420",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/pest_meta/2.8.2/download"],
        strip_prefix = "pest_meta-2.8.2",
        build_file = Label("//vendor/cargo:BUILD.pest_meta-2.8.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__petgraph-0.6.5",
        sha256 = "b4c5cc86750666a3ed20bdaf5ca2a0344f9c67674cae0515bec2da16fbaa47db",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/petgraph/0.6.5/download"],
        strip_prefix = "petgraph-0.6.5",
        build_file = Label("//vendor/cargo:BUILD.petgraph-0.6.5.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__petgraph-0.7.1",
        sha256 = "3672b37090dbd86368a4145bc067582552b29c27377cad4e0a306c97f9bd7772",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/petgraph/0.7.1/download"],
        strip_prefix = "petgraph-0.7.1",
        build_file = Label("//vendor/cargo:BUILD.petgraph-0.7.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__petgraph-0.8.2",
        sha256 = "54acf3a685220b533e437e264e4d932cfbdc4cc7ec0cd232ed73c08d03b8a7ca",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/petgraph/0.8.2/download"],
        strip_prefix = "petgraph-0.8.2",
        build_file = Label("//vendor/cargo:BUILD.petgraph-0.8.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__phf-0.11.3",
        sha256 = "1fd6780a80ae0c52cc120a26a1a42c1ae51b247a253e4e06113d23d2c2edd078",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/phf/0.11.3/download"],
        strip_prefix = "phf-0.11.3",
        build_file = Label("//vendor/cargo:BUILD.phf-0.11.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__phf_codegen-0.11.3",
        sha256 = "aef8048c789fa5e851558d709946d6d79a8ff88c0440c587967f8e94bfb1216a",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/phf_codegen/0.11.3/download"],
        strip_prefix = "phf_codegen-0.11.3",
        build_file = Label("//vendor/cargo:BUILD.phf_codegen-0.11.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__phf_generator-0.11.3",
        sha256 = "3c80231409c20246a13fddb31776fb942c38553c51e871f8cbd687a4cfb5843d",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/phf_generator/0.11.3/download"],
        strip_prefix = "phf_generator-0.11.3",
        build_file = Label("//vendor/cargo:BUILD.phf_generator-0.11.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__phf_macros-0.11.3",
        sha256 = "f84ac04429c13a7ff43785d75ad27569f2951ce0ffd30a3321230db2fc727216",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/phf_macros/0.11.3/download"],
        strip_prefix = "phf_macros-0.11.3",
        build_file = Label("//vendor/cargo:BUILD.phf_macros-0.11.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__phf_shared-0.11.3",
        sha256 = "67eabc2ef2a60eb7faa00097bd1ffdb5bd28e62bf39990626a582201b7a754e5",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/phf_shared/0.11.3/download"],
        strip_prefix = "phf_shared-0.11.3",
        build_file = Label("//vendor/cargo:BUILD.phf_shared-0.11.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__pico-args-0.5.0",
        sha256 = "5be167a7af36ee22fe3115051bc51f6e6c7054c9348e28deb4f49bd6f705a315",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/pico-args/0.5.0/download"],
        strip_prefix = "pico-args-0.5.0",
        build_file = Label("//vendor/cargo:BUILD.pico-args-0.5.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__pin-project-1.1.10",
        sha256 = "677f1add503faace112b9f1373e43e9e054bfdd22ff1a63c1bc485eaec6a6a8a",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/pin-project/1.1.10/download"],
        strip_prefix = "pin-project-1.1.10",
        build_file = Label("//vendor/cargo:BUILD.pin-project-1.1.10.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__pin-project-internal-1.1.10",
        sha256 = "6e918e4ff8c4549eb882f14b3a4bc8c8bc93de829416eacf579f1207a8fbf861",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/pin-project-internal/1.1.10/download"],
        strip_prefix = "pin-project-internal-1.1.10",
        build_file = Label("//vendor/cargo:BUILD.pin-project-internal-1.1.10.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__pin-project-lite-0.2.16",
        sha256 = "3b3cff922bd51709b605d9ead9aa71031d81447142d828eb4a6eba76fe619f9b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/pin-project-lite/0.2.16/download"],
        strip_prefix = "pin-project-lite-0.2.16",
        build_file = Label("//vendor/cargo:BUILD.pin-project-lite-0.2.16.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__pin-utils-0.1.0",
        sha256 = "8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/pin-utils/0.1.0/download"],
        strip_prefix = "pin-utils-0.1.0",
        build_file = Label("//vendor/cargo:BUILD.pin-utils-0.1.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__pkcs1-0.7.5",
        sha256 = "c8ffb9f10fa047879315e6625af03c164b16962a5368d724ed16323b68ace47f",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/pkcs1/0.7.5/download"],
        strip_prefix = "pkcs1-0.7.5",
        build_file = Label("//vendor/cargo:BUILD.pkcs1-0.7.5.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__pkcs8-0.10.2",
        sha256 = "f950b2377845cebe5cf8b5165cb3cc1a5e0fa5cfa3e1f7f55707d8fd82e0a7b7",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/pkcs8/0.10.2/download"],
        strip_prefix = "pkcs8-0.10.2",
        build_file = Label("//vendor/cargo:BUILD.pkcs8-0.10.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__pkg-config-0.3.32",
        sha256 = "7edddbd0b52d732b21ad9a5fab5c704c14cd949e5e9a1ec5929a24fded1b904c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/pkg-config/0.3.32/download"],
        strip_prefix = "pkg-config-0.3.32",
        build_file = Label("//vendor/cargo:BUILD.pkg-config-0.3.32.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__plotters-0.3.7",
        sha256 = "5aeb6f403d7a4911efb1e33402027fc44f29b5bf6def3effcc22d7bb75f2b747",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/plotters/0.3.7/download"],
        strip_prefix = "plotters-0.3.7",
        build_file = Label("//vendor/cargo:BUILD.plotters-0.3.7.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__plotters-backend-0.3.7",
        sha256 = "df42e13c12958a16b3f7f4386b9ab1f3e7933914ecea48da7139435263a4172a",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/plotters-backend/0.3.7/download"],
        strip_prefix = "plotters-backend-0.3.7",
        build_file = Label("//vendor/cargo:BUILD.plotters-backend-0.3.7.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__plotters-svg-0.3.7",
        sha256 = "51bae2ac328883f7acdfea3d66a7c35751187f870bc81f94563733a154d7a670",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/plotters-svg/0.3.7/download"],
        strip_prefix = "plotters-svg-0.3.7",
        build_file = Label("//vendor/cargo:BUILD.plotters-svg-0.3.7.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__png-0.18.0",
        sha256 = "97baced388464909d42d89643fe4361939af9b7ce7a31ee32a168f832a70f2a0",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/png/0.18.0/download"],
        strip_prefix = "png-0.18.0",
        build_file = Label("//vendor/cargo:BUILD.png-0.18.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__portable-atomic-1.11.1",
        sha256 = "f84267b20a16ea918e43c6a88433c2d54fa145c92a811b5b047ccbe153674483",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/portable-atomic/1.11.1/download"],
        strip_prefix = "portable-atomic-1.11.1",
        build_file = Label("//vendor/cargo:BUILD.portable-atomic-1.11.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__postgres-protocol-0.6.8",
        sha256 = "76ff0abab4a9b844b93ef7b81f1efc0a366062aaef2cd702c76256b5dc075c54",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/postgres-protocol/0.6.8/download"],
        strip_prefix = "postgres-protocol-0.6.8",
        build_file = Label("//vendor/cargo:BUILD.postgres-protocol-0.6.8.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__postgres-types-0.2.9",
        sha256 = "613283563cd90e1dfc3518d548caee47e0e725455ed619881f5cf21f36de4b48",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/postgres-types/0.2.9/download"],
        strip_prefix = "postgres-types-0.2.9",
        build_file = Label("//vendor/cargo:BUILD.postgres-types-0.2.9.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__potential_utf-0.1.3",
        sha256 = "84df19adbe5b5a0782edcab45899906947ab039ccf4573713735ee7de1e6b08a",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/potential_utf/0.1.3/download"],
        strip_prefix = "potential_utf-0.1.3",
        build_file = Label("//vendor/cargo:BUILD.potential_utf-0.1.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__powerfmt-0.2.0",
        sha256 = "439ee305def115ba05938db6eb1644ff94165c5ab5e9420d1c1bcedbba909391",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/powerfmt/0.2.0/download"],
        strip_prefix = "powerfmt-0.2.0",
        build_file = Label("//vendor/cargo:BUILD.powerfmt-0.2.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__pprof-0.15.0",
        sha256 = "38a01da47675efa7673b032bf8efd8214f1917d89685e07e395ab125ea42b187",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/pprof/0.15.0/download"],
        strip_prefix = "pprof-0.15.0",
        build_file = Label("//vendor/cargo:BUILD.pprof-0.15.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__ppv-lite86-0.2.21",
        sha256 = "85eae3c4ed2f50dcfe72643da4befc30deadb458a9b590d720cde2f2b1e97da9",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/ppv-lite86/0.2.21/download"],
        strip_prefix = "ppv-lite86-0.2.21",
        build_file = Label("//vendor/cargo:BUILD.ppv-lite86-0.2.21.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__precomputed-hash-0.1.1",
        sha256 = "925383efa346730478fb4838dbe9137d2a47675ad789c546d150a6e1dd4ab31c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/precomputed-hash/0.1.1/download"],
        strip_prefix = "precomputed-hash-0.1.1",
        build_file = Label("//vendor/cargo:BUILD.precomputed-hash-0.1.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__pretty-0.12.4",
        sha256 = "ac98773b7109bc75f475ab5a134c9b64b87e59d776d31098d8f346922396a477",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/pretty/0.12.4/download"],
        strip_prefix = "pretty-0.12.4",
        build_file = Label("//vendor/cargo:BUILD.pretty-0.12.4.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__prettyplease-0.2.37",
        sha256 = "479ca8adacdd7ce8f1fb39ce9ecccbfe93a3f1344b3d0d97f20bc0196208f62b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/prettyplease/0.2.37/download"],
        strip_prefix = "prettyplease-0.2.37",
        build_file = Label("//vendor/cargo:BUILD.prettyplease-0.2.37.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__proc-macro2-1.0.101",
        sha256 = "89ae43fd86e4158d6db51ad8e2b80f313af9cc74f5c0e03ccb87de09998732de",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/proc-macro2/1.0.101/download"],
        strip_prefix = "proc-macro2-1.0.101",
        build_file = Label("//vendor/cargo:BUILD.proc-macro2-1.0.101.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__prometheus-client-0.23.1",
        sha256 = "cf41c1a7c32ed72abe5082fb19505b969095c12da9f5732a4bc9878757fd087c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/prometheus-client/0.23.1/download"],
        strip_prefix = "prometheus-client-0.23.1",
        build_file = Label("//vendor/cargo:BUILD.prometheus-client-0.23.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__prometheus-client-derive-encode-0.4.2",
        sha256 = "440f724eba9f6996b75d63681b0a92b06947f1457076d503a4d2e2c8f56442b8",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/prometheus-client-derive-encode/0.4.2/download"],
        strip_prefix = "prometheus-client-derive-encode-0.4.2",
        build_file = Label("//vendor/cargo:BUILD.prometheus-client-derive-encode-0.4.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__prost-0.12.6",
        sha256 = "deb1435c188b76130da55f17a466d252ff7b1418b2ad3e037d127b94e3411f29",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/prost/0.12.6/download"],
        strip_prefix = "prost-0.12.6",
        build_file = Label("//vendor/cargo:BUILD.prost-0.12.6.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__prost-0.14.1",
        sha256 = "7231bd9b3d3d33c86b58adbac74b5ec0ad9f496b19d22801d773636feaa95f3d",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/prost/0.14.1/download"],
        strip_prefix = "prost-0.14.1",
        build_file = Label("//vendor/cargo:BUILD.prost-0.14.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__prost-build-0.12.6",
        sha256 = "22505a5c94da8e3b7c2996394d1c933236c4d743e81a410bcca4e6989fc066a4",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/prost-build/0.12.6/download"],
        strip_prefix = "prost-build-0.12.6",
        build_file = Label("//vendor/cargo:BUILD.prost-build-0.12.6.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__prost-build-0.14.1",
        sha256 = "ac6c3320f9abac597dcbc668774ef006702672474aad53c6d596b62e487b40b1",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/prost-build/0.14.1/download"],
        strip_prefix = "prost-build-0.14.1",
        build_file = Label("//vendor/cargo:BUILD.prost-build-0.14.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__prost-derive-0.12.6",
        sha256 = "81bddcdb20abf9501610992b6759a4c888aef7d1a7247ef75e2404275ac24af1",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/prost-derive/0.12.6/download"],
        strip_prefix = "prost-derive-0.12.6",
        build_file = Label("//vendor/cargo:BUILD.prost-derive-0.12.6.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__prost-derive-0.14.1",
        sha256 = "9120690fafc389a67ba3803df527d0ec9cbbc9cc45e4cc20b332996dfb672425",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/prost-derive/0.14.1/download"],
        strip_prefix = "prost-derive-0.14.1",
        build_file = Label("//vendor/cargo:BUILD.prost-derive-0.14.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__prost-reflect-0.16.1",
        sha256 = "3c9ae1e4084d9737646934f5ac36a8d77f9a82f962f43e267a382fde4f2a903d",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/prost-reflect/0.16.1/download"],
        strip_prefix = "prost-reflect-0.16.1",
        build_file = Label("//vendor/cargo:BUILD.prost-reflect-0.16.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__prost-types-0.12.6",
        sha256 = "9091c90b0a32608e984ff2fa4091273cbdd755d54935c51d520887f4a1dbd5b0",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/prost-types/0.12.6/download"],
        strip_prefix = "prost-types-0.12.6",
        build_file = Label("//vendor/cargo:BUILD.prost-types-0.12.6.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__prost-types-0.14.1",
        sha256 = "b9b4db3d6da204ed77bb26ba83b6122a73aeb2e87e25fbf7ad2e84c4ccbf8f72",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/prost-types/0.14.1/download"],
        strip_prefix = "prost-types-0.14.1",
        build_file = Label("//vendor/cargo:BUILD.prost-types-0.14.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__psm-0.1.26",
        sha256 = "6e944464ec8536cd1beb0bbfd96987eb5e3b72f2ecdafdc5c769a37f1fa2ae1f",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/psm/0.1.26/download"],
        strip_prefix = "psm-0.1.26",
        build_file = Label("//vendor/cargo:BUILD.psm-0.1.26.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__pulldown-cmark-0.13.0",
        sha256 = "1e8bbe1a966bd2f362681a44f6edce3c2310ac21e4d5067a6e7ec396297a6ea0",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/pulldown-cmark/0.13.0/download"],
        strip_prefix = "pulldown-cmark-0.13.0",
        build_file = Label("//vendor/cargo:BUILD.pulldown-cmark-0.13.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__pulldown-cmark-escape-0.11.0",
        sha256 = "007d8adb5ddab6f8e3f491ac63566a7d5002cc7ed73901f72057943fa71ae1ae",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/pulldown-cmark-escape/0.11.0/download"],
        strip_prefix = "pulldown-cmark-escape-0.11.0",
        build_file = Label("//vendor/cargo:BUILD.pulldown-cmark-escape-0.11.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__pulldown-cmark-to-cmark-21.0.0",
        sha256 = "e5b6a0769a491a08b31ea5c62494a8f144ee0987d86d670a8af4df1e1b7cde75",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/pulldown-cmark-to-cmark/21.0.0/download"],
        strip_prefix = "pulldown-cmark-to-cmark-21.0.0",
        build_file = Label("//vendor/cargo:BUILD.pulldown-cmark-to-cmark-21.0.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__pxfm-0.1.23",
        sha256 = "f55f4fedc84ed39cb7a489322318976425e42a147e2be79d8f878e2884f94e84",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/pxfm/0.1.23/download"],
        strip_prefix = "pxfm-0.1.23",
        build_file = Label("//vendor/cargo:BUILD.pxfm-0.1.23.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__qrcodegen-1.8.0",
        sha256 = "4339fc7a1021c9c1621d87f5e3505f2805c8c105420ba2f2a4df86814590c142",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/qrcodegen/1.8.0/download"],
        strip_prefix = "qrcodegen-1.8.0",
        build_file = Label("//vendor/cargo:BUILD.qrcodegen-1.8.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__qrcodegen-image-1.5.0",
        sha256 = "221b7eace1aef8c95d65dbe09fb7a1a43d006045394a89afba6997721fcb7708",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/qrcodegen-image/1.5.0/download"],
        strip_prefix = "qrcodegen-image-1.5.0",
        build_file = Label("//vendor/cargo:BUILD.qrcodegen-image-1.5.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__querystring-1.1.0",
        sha256 = "9318ead08c799aad12a55a3e78b82e0b6167271ffd1f627b758891282f739187",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/querystring/1.1.0/download"],
        strip_prefix = "querystring-1.1.0",
        build_file = Label("//vendor/cargo:BUILD.querystring-1.1.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__quick-junit-0.5.1",
        sha256 = "3ed1a693391a16317257103ad06a88c6529ac640846021da7c435a06fffdacd7",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/quick-junit/0.5.1/download"],
        strip_prefix = "quick-junit-0.5.1",
        build_file = Label("//vendor/cargo:BUILD.quick-junit-0.5.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__quick-xml-0.37.5",
        sha256 = "331e97a1af0bf59823e6eadffe373d7b27f485be8748f71471c662c1f269b7fb",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/quick-xml/0.37.5/download"],
        strip_prefix = "quick-xml-0.37.5",
        build_file = Label("//vendor/cargo:BUILD.quick-xml-0.37.5.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__quick-xml-0.38.3",
        sha256 = "42a232e7487fc2ef313d96dde7948e7a3c05101870d8985e4fd8d26aedd27b89",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/quick-xml/0.38.3/download"],
        strip_prefix = "quick-xml-0.38.3",
        build_file = Label("//vendor/cargo:BUILD.quick-xml-0.38.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__quinn-0.11.9",
        sha256 = "b9e20a958963c291dc322d98411f541009df2ced7b5a4f2bd52337638cfccf20",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/quinn/0.11.9/download"],
        strip_prefix = "quinn-0.11.9",
        build_file = Label("//vendor/cargo:BUILD.quinn-0.11.9.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__quinn-proto-0.11.13",
        sha256 = "f1906b49b0c3bc04b5fe5d86a77925ae6524a19b816ae38ce1e426255f1d8a31",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/quinn-proto/0.11.13/download"],
        strip_prefix = "quinn-proto-0.11.13",
        build_file = Label("//vendor/cargo:BUILD.quinn-proto-0.11.13.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__quinn-udp-0.5.14",
        sha256 = "addec6a0dcad8a8d96a771f815f0eaf55f9d1805756410b39f5fa81332574cbd",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/quinn-udp/0.5.14/download"],
        strip_prefix = "quinn-udp-0.5.14",
        build_file = Label("//vendor/cargo:BUILD.quinn-udp-0.5.14.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__quote-1.0.40",
        sha256 = "1885c039570dc00dcb4ff087a89e185fd56bae234ddc7f056a945bf36467248d",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/quote/1.0.40/download"],
        strip_prefix = "quote-1.0.40",
        build_file = Label("//vendor/cargo:BUILD.quote-1.0.40.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__rand-0.8.5",
        sha256 = "34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rand/0.8.5/download"],
        strip_prefix = "rand-0.8.5",
        build_file = Label("//vendor/cargo:BUILD.rand-0.8.5.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__rand-0.9.2",
        sha256 = "6db2770f06117d490610c7488547d543617b21bfa07796d7a12f6f1bd53850d1",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rand/0.9.2/download"],
        strip_prefix = "rand-0.9.2",
        build_file = Label("//vendor/cargo:BUILD.rand-0.9.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__rand_chacha-0.3.1",
        sha256 = "e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rand_chacha/0.3.1/download"],
        strip_prefix = "rand_chacha-0.3.1",
        build_file = Label("//vendor/cargo:BUILD.rand_chacha-0.3.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__rand_chacha-0.9.0",
        sha256 = "d3022b5f1df60f26e1ffddd6c66e8aa15de382ae63b3a0c1bfc0e4d3e3f325cb",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rand_chacha/0.9.0/download"],
        strip_prefix = "rand_chacha-0.9.0",
        build_file = Label("//vendor/cargo:BUILD.rand_chacha-0.9.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__rand_core-0.6.4",
        sha256 = "ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rand_core/0.6.4/download"],
        strip_prefix = "rand_core-0.6.4",
        build_file = Label("//vendor/cargo:BUILD.rand_core-0.6.4.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__rand_core-0.9.3",
        sha256 = "99d9a13982dcf210057a8a78572b2217b667c3beacbf3a0d8b454f6f82837d38",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rand_core/0.9.3/download"],
        strip_prefix = "rand_core-0.9.3",
        build_file = Label("//vendor/cargo:BUILD.rand_core-0.9.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__rayon-1.11.0",
        sha256 = "368f01d005bf8fd9b1206fb6fa653e6c4a81ceb1466406b81792d87c5677a58f",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rayon/1.11.0/download"],
        strip_prefix = "rayon-1.11.0",
        build_file = Label("//vendor/cargo:BUILD.rayon-1.11.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__rayon-core-1.13.0",
        sha256 = "22e18b0f0062d30d4230b2e85ff77fdfe4326feb054b9783a3460d8435c8ab91",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rayon-core/1.13.0/download"],
        strip_prefix = "rayon-core-1.13.0",
        build_file = Label("//vendor/cargo:BUILD.rayon-core-1.13.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__recursion-0.5.4",
        sha256 = "9dba2197bf7b1d87b4dd460c195f4edeb45a94e82e8054f8d5f317c1f0e93ca1",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/recursion/0.5.4/download"],
        strip_prefix = "recursion-0.5.4",
        build_file = Label("//vendor/cargo:BUILD.recursion-0.5.4.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__redis-protocol-6.0.0",
        sha256 = "9cdba59219406899220fc4cdfd17a95191ba9c9afb719b5fa5a083d63109a9f1",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/redis-protocol/6.0.0/download"],
        strip_prefix = "redis-protocol-6.0.0",
        build_file = Label("//vendor/cargo:BUILD.redis-protocol-6.0.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__ref-cast-1.0.24",
        sha256 = "4a0ae411dbe946a674d89546582cea4ba2bb8defac896622d6496f14c23ba5cf",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/ref-cast/1.0.24/download"],
        strip_prefix = "ref-cast-1.0.24",
        build_file = Label("//vendor/cargo:BUILD.ref-cast-1.0.24.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__ref-cast-impl-1.0.24",
        sha256 = "1165225c21bff1f3bbce98f5a1f889949bc902d3575308cc7b0de30b4f6d27c7",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/ref-cast-impl/1.0.24/download"],
        strip_prefix = "ref-cast-impl-1.0.24",
        build_file = Label("//vendor/cargo:BUILD.ref-cast-impl-1.0.24.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__regex-1.11.2",
        sha256 = "23d7fd106d8c02486a8d64e778353d1cffe08ce79ac2e82f540c86d0facf6912",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/regex/1.11.2/download"],
        strip_prefix = "regex-1.11.2",
        build_file = Label("//vendor/cargo:BUILD.regex-1.11.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__regex-automata-0.4.10",
        sha256 = "6b9458fa0bfeeac22b5ca447c63aaf45f28439a709ccd244698632f9aa6394d6",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/regex-automata/0.4.10/download"],
        strip_prefix = "regex-automata-0.4.10",
        build_file = Label("//vendor/cargo:BUILD.regex-automata-0.4.10.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__regex-syntax-0.8.6",
        sha256 = "caf4aa5b0f434c91fe5c7f1ecb6a5ece2130b02ad2a590589dda5146df959001",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/regex-syntax/0.8.6/download"],
        strip_prefix = "regex-syntax-0.8.6",
        build_file = Label("//vendor/cargo:BUILD.regex-syntax-0.8.6.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__reqsign-0.17.0",
        sha256 = "be18806fe2251c9924d875549573c9bf0e43b51d7efcf32a19ec31bb32196987",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/reqsign/0.17.0/download"],
        strip_prefix = "reqsign-0.17.0",
        build_file = Label("//vendor/cargo:BUILD.reqsign-0.17.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__reqsign-aws-v4-1.0.0",
        sha256 = "9b0fb0ac0a8222efdb0746d83c5ec36c6bdb0f5310b4b92147e3de7c45ef6657",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/reqsign-aws-v4/1.0.0/download"],
        strip_prefix = "reqsign-aws-v4-1.0.0",
        build_file = Label("//vendor/cargo:BUILD.reqsign-aws-v4-1.0.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__reqsign-core-1.0.0",
        sha256 = "35fd7359352a79b293168785b9cbb239e7017b4fa0c934351518feee394f92bc",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/reqsign-core/1.0.0/download"],
        strip_prefix = "reqsign-core-1.0.0",
        build_file = Label("//vendor/cargo:BUILD.reqsign-core-1.0.0.bazel"),
    )

    maybe(
        new_git_repository,
        name = "cargo_vendor__reqwest-0.12.23",
        commit = "9cce4657b902263c762d34a3c6a5addb44988359",
        init_submodules = True,
        remote = "https://github.com/TroyKomodo/reqwest.git",
        build_file = Label("//vendor/cargo:BUILD.reqwest-0.12.23.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__ring-0.17.14",
        sha256 = "a4689e6c2294d81e88dc6261c768b63bc4fcdb852be6d1352498b114f61383b7",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/ring/0.17.14/download"],
        strip_prefix = "ring-0.17.14",
        build_file = Label("//vendor/cargo:BUILD.ring-0.17.14.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__ron-0.8.1",
        sha256 = "b91f7eff05f748767f183df4320a63d6936e9c6107d97c9e6bdd9784f4289c94",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/ron/0.8.1/download"],
        strip_prefix = "ron-0.8.1",
        build_file = Label("//vendor/cargo:BUILD.ron-0.8.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__rsa-0.9.8",
        sha256 = "78928ac1ed176a5ca1d17e578a1825f3d81ca54cf41053a592584b020cfd691b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rsa/0.9.8/download"],
        strip_prefix = "rsa-0.9.8",
        build_file = Label("//vendor/cargo:BUILD.rsa-0.9.8.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__runtime-format-0.1.3",
        sha256 = "09958d5b38bca768ede7928c767c89a08ba568144a7b61992aecae79b03c8c94",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/runtime-format/0.1.3/download"],
        strip_prefix = "runtime-format-0.1.3",
        build_file = Label("//vendor/cargo:BUILD.runtime-format-0.1.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__rust-ini-0.21.3",
        sha256 = "796e8d2b6696392a43bea58116b667fb4c29727dc5abd27d6acf338bb4f688c7",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rust-ini/0.21.3/download"],
        strip_prefix = "rust-ini-0.21.3",
        build_file = Label("//vendor/cargo:BUILD.rust-ini-0.21.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__rustc-demangle-0.1.26",
        sha256 = "56f7d92ca342cea22a06f2121d944b4fd82af56988c270852495420f961d4ace",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rustc-demangle/0.1.26/download"],
        strip_prefix = "rustc-demangle-0.1.26",
        build_file = Label("//vendor/cargo:BUILD.rustc-demangle-0.1.26.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__rustc-hash-2.1.1",
        sha256 = "357703d41365b4b27c590e3ed91eabb1b663f07c4c084095e60cbed4362dff0d",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rustc-hash/2.1.1/download"],
        strip_prefix = "rustc-hash-2.1.1",
        build_file = Label("//vendor/cargo:BUILD.rustc-hash-2.1.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__rustc_lexer-0.1.0",
        sha256 = "c86aae0c77166108c01305ee1a36a1e77289d7dc6ca0a3cd91ff4992de2d16a5",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rustc_lexer/0.1.0/download"],
        strip_prefix = "rustc_lexer-0.1.0",
        build_file = Label("//vendor/cargo:BUILD.rustc_lexer-0.1.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__rustc_version-0.4.1",
        sha256 = "cfcb3a22ef46e85b45de6ee7e79d063319ebb6594faafcf1c225ea92ab6e9b92",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rustc_version/0.4.1/download"],
        strip_prefix = "rustc_version-0.4.1",
        build_file = Label("//vendor/cargo:BUILD.rustc_version-0.4.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__rustdoc-types-0.55.0",
        sha256 = "61f25a84ea78419de928cd82c3b2f76709a696a64a880486c567b4c4da8f2dda",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rustdoc-types/0.55.0/download"],
        strip_prefix = "rustdoc-types-0.55.0",
        build_file = Label("//vendor/cargo:BUILD.rustdoc-types-0.55.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__rustfix-0.9.1",
        sha256 = "8abe01883100061761642e19324f87514bcaed7ddaab2dfd68041c992987b289",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rustfix/0.9.1/download"],
        strip_prefix = "rustfix-0.9.1",
        build_file = Label("//vendor/cargo:BUILD.rustfix-0.9.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__rusticata-macros-4.1.0",
        sha256 = "faf0c4a6ece9950b9abdb62b1cfcf2a68b3b67a10ba445b3bb85be2a293d0632",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rusticata-macros/4.1.0/download"],
        strip_prefix = "rusticata-macros-4.1.0",
        build_file = Label("//vendor/cargo:BUILD.rusticata-macros-4.1.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__rustix-0.38.44",
        sha256 = "fdb5bc1ae2baa591800df16c9ca78619bf65c0488b41b96ccec5d11220d8c154",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rustix/0.38.44/download"],
        strip_prefix = "rustix-0.38.44",
        build_file = Label("//vendor/cargo:BUILD.rustix-0.38.44.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__rustix-1.1.2",
        sha256 = "cd15f8a2c5551a84d56efdc1cd049089e409ac19a3072d5037a17fd70719ff3e",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rustix/1.1.2/download"],
        strip_prefix = "rustix-1.1.2",
        build_file = Label("//vendor/cargo:BUILD.rustix-1.1.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__rustls-0.23.32",
        sha256 = "cd3c25631629d034ce7cd9940adc9d45762d46de2b0f57193c4443b92c6d4d40",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rustls/0.23.32/download"],
        strip_prefix = "rustls-0.23.32",
        build_file = Label("//vendor/cargo:BUILD.rustls-0.23.32.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__rustls-native-certs-0.8.1",
        sha256 = "7fcff2dd52b58a8d98a70243663a0d234c4e2b79235637849d15913394a247d3",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rustls-native-certs/0.8.1/download"],
        strip_prefix = "rustls-native-certs-0.8.1",
        build_file = Label("//vendor/cargo:BUILD.rustls-native-certs-0.8.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__rustls-pemfile-2.2.0",
        sha256 = "dce314e5fee3f39953d46bb63bb8a46d40c2f8fb7cc5a3b6cab2bde9721d6e50",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rustls-pemfile/2.2.0/download"],
        strip_prefix = "rustls-pemfile-2.2.0",
        build_file = Label("//vendor/cargo:BUILD.rustls-pemfile-2.2.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__rustls-pki-types-1.12.0",
        sha256 = "229a4a4c221013e7e1f1a043678c5cc39fe5171437c88fb47151a21e6f5b5c79",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rustls-pki-types/1.12.0/download"],
        strip_prefix = "rustls-pki-types-1.12.0",
        build_file = Label("//vendor/cargo:BUILD.rustls-pki-types-1.12.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__rustls-platform-verifier-0.6.1",
        sha256 = "be59af91596cac372a6942530653ad0c3a246cdd491aaa9dcaee47f88d67d5a0",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rustls-platform-verifier/0.6.1/download"],
        strip_prefix = "rustls-platform-verifier-0.6.1",
        build_file = Label("//vendor/cargo:BUILD.rustls-platform-verifier-0.6.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__rustls-webpki-0.103.5",
        sha256 = "b5a37813727b78798e53c2bec3f5e8fe12a6d6f8389bf9ca7802add4c9905ad8",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rustls-webpki/0.103.5/download"],
        strip_prefix = "rustls-webpki-0.103.5",
        build_file = Label("//vendor/cargo:BUILD.rustls-webpki-0.103.5.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__rustversion-1.0.22",
        sha256 = "b39cdef0fa800fc44525c84ccb54a029961a8215f9619753635a9c0d2538d46d",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rustversion/1.0.22/download"],
        strip_prefix = "rustversion-1.0.22",
        build_file = Label("//vendor/cargo:BUILD.rustversion-1.0.22.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__rusty_ffmpeg-0.16.7-ffmpeg.8",
        sha256 = "f25d40a46450059278c9f9f2616018910b647877a66a2093a83f115f59763967",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rusty_ffmpeg/0.16.7+ffmpeg.8/download"],
        strip_prefix = "rusty_ffmpeg-0.16.7+ffmpeg.8",
        build_file = Label("//vendor/cargo:BUILD.rusty_ffmpeg-0.16.7+ffmpeg.8.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__ryu-1.0.20",
        sha256 = "28d3b2b1366ec20994f1fd18c3c594f05c5dd4bc44d8bb0c1c632c8d6829481f",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/ryu/1.0.20/download"],
        strip_prefix = "ryu-1.0.20",
        build_file = Label("//vendor/cargo:BUILD.ryu-1.0.20.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__sailfish-0.10.0",
        sha256 = "40efbac4e16ca6b1a5706348ada4d8b67d7b417ac2001aa6c4ae092511bb1763",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/sailfish/0.10.0/download"],
        strip_prefix = "sailfish-0.10.0",
        build_file = Label("//vendor/cargo:BUILD.sailfish-0.10.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__sailfish-compiler-0.10.0",
        sha256 = "003c945c249a98ec4488826a3ffe72aa66b0dcf8b0218a6bd87c682cf8c3bba6",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/sailfish-compiler/0.10.0/download"],
        strip_prefix = "sailfish-compiler-0.10.0",
        build_file = Label("//vendor/cargo:BUILD.sailfish-compiler-0.10.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__sailfish-macros-0.10.0",
        sha256 = "2d5c507d85499f2e67cb3c9da7d50741039559afee4ccd137985a188af4d62e6",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/sailfish-macros/0.10.0/download"],
        strip_prefix = "sailfish-macros-0.10.0",
        build_file = Label("//vendor/cargo:BUILD.sailfish-macros-0.10.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__same-file-1.0.6",
        sha256 = "93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/same-file/1.0.6/download"],
        strip_prefix = "same-file-1.0.6",
        build_file = Label("//vendor/cargo:BUILD.same-file-1.0.6.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__schannel-0.1.28",
        sha256 = "891d81b926048e76efe18581bf793546b4c0eaf8448d72be8de2bbee5fd166e1",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/schannel/0.1.28/download"],
        strip_prefix = "schannel-0.1.28",
        build_file = Label("//vendor/cargo:BUILD.schannel-0.1.28.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__scoped-futures-0.1.4",
        sha256 = "1b24aae2d0636530f359e9d5ef0c04669d11c5e756699b27a6a6d845d8329091",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/scoped-futures/0.1.4/download"],
        strip_prefix = "scoped-futures-0.1.4",
        build_file = Label("//vendor/cargo:BUILD.scoped-futures-0.1.4.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__scopeguard-1.2.0",
        sha256 = "94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/scopeguard/1.2.0/download"],
        strip_prefix = "scopeguard-1.2.0",
        build_file = Label("//vendor/cargo:BUILD.scopeguard-1.2.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__security-framework-3.4.0",
        sha256 = "60b369d18893388b345804dc0007963c99b7d665ae71d275812d828c6f089640",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/security-framework/3.4.0/download"],
        strip_prefix = "security-framework-3.4.0",
        build_file = Label("//vendor/cargo:BUILD.security-framework-3.4.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__security-framework-sys-2.15.0",
        sha256 = "cc1f0cbffaac4852523ce30d8bd3c5cdc873501d96ff467ca09b6767bb8cd5c0",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/security-framework-sys/2.15.0/download"],
        strip_prefix = "security-framework-sys-2.15.0",
        build_file = Label("//vendor/cargo:BUILD.security-framework-sys-2.15.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__selectors-0.30.0",
        sha256 = "3df44ba8a7ca7a4d28c589e04f526266ed76b6cc556e33fe69fa25de31939a65",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/selectors/0.30.0/download"],
        strip_prefix = "selectors-0.30.0",
        build_file = Label("//vendor/cargo:BUILD.selectors-0.30.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__semver-1.0.26",
        sha256 = "56e6fa9c48d24d85fb3de5ad847117517440f6beceb7798af16b4a87d616b8d0",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/semver/1.0.26/download"],
        strip_prefix = "semver-1.0.26",
        build_file = Label("//vendor/cargo:BUILD.semver-1.0.26.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__serde-1.0.220",
        sha256 = "ceecad4c782e936ac90ecfd6b56532322e3262b14320abf30ce89a92ffdbfe22",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/serde/1.0.220/download"],
        strip_prefix = "serde-1.0.220",
        build_file = Label("//vendor/cargo:BUILD.serde-1.0.220.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__serde-untagged-0.1.8",
        sha256 = "34836a629bcbc6f1afdf0907a744870039b1e14c0561cb26094fa683b158eff3",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/serde-untagged/0.1.8/download"],
        strip_prefix = "serde-untagged-0.1.8",
        build_file = Label("//vendor/cargo:BUILD.serde-untagged-0.1.8.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__serde-value-0.7.0",
        sha256 = "f3a1a3341211875ef120e117ea7fd5228530ae7e7036a779fdc9117be6b3282c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/serde-value/0.7.0/download"],
        strip_prefix = "serde-value-0.7.0",
        build_file = Label("//vendor/cargo:BUILD.serde-value-0.7.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__serde_cbor_2-0.12.0-dev",
        sha256 = "b46d75f449e01f1eddbe9b00f432d616fbbd899b809c837d0fbc380496a0dd55",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/serde_cbor_2/0.12.0-dev/download"],
        strip_prefix = "serde_cbor_2-0.12.0-dev",
        build_file = Label("//vendor/cargo:BUILD.serde_cbor_2-0.12.0-dev.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__serde_core-1.0.220",
        sha256 = "ddba47394f3b862d6ff6efdbd26ca4673e3566a307880a0ffb98f274bbe0ec32",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/serde_core/1.0.220/download"],
        strip_prefix = "serde_core-1.0.220",
        build_file = Label("//vendor/cargo:BUILD.serde_core-1.0.220.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__serde_derive-1.0.220",
        sha256 = "60e1f3b1761e96def5ec6d04a6e7421c0404fa3cf5c0155f1e2848fae3d8cc08",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/serde_derive/1.0.220/download"],
        strip_prefix = "serde_derive-1.0.220",
        build_file = Label("//vendor/cargo:BUILD.serde_derive-1.0.220.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__serde_ignored-0.1.12",
        sha256 = "b516445dac1e3535b6d658a7b528d771153dfb272ed4180ca4617a20550365ff",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/serde_ignored/0.1.12/download"],
        strip_prefix = "serde_ignored-0.1.12",
        build_file = Label("//vendor/cargo:BUILD.serde_ignored-0.1.12.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__serde_json-1.0.145",
        sha256 = "402a6f66d8c709116cf22f558eab210f5a50187f702eb4d7e5ef38d9a7f1c79c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/serde_json/1.0.145/download"],
        strip_prefix = "serde_json-1.0.145",
        build_file = Label("//vendor/cargo:BUILD.serde_json-1.0.145.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__serde_norway-0.9.42",
        sha256 = "e408f29489b5fd500fab51ff1484fc859bb655f32c671f307dcd733b72e8168c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/serde_norway/0.9.42/download"],
        strip_prefix = "serde_norway-0.9.42",
        build_file = Label("//vendor/cargo:BUILD.serde_norway-0.9.42.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__serde_path_to_error-0.1.17",
        sha256 = "59fab13f937fa393d08645bf3a84bdfe86e296747b506ada67bb15f10f218b2a",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/serde_path_to_error/0.1.17/download"],
        strip_prefix = "serde_path_to_error-0.1.17",
        build_file = Label("//vendor/cargo:BUILD.serde_path_to_error-0.1.17.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__serde_qs-0.15.0",
        sha256 = "f3faaf9e727533a19351a43cc5a8de957372163c7d35cc48c90b75cdda13c352",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/serde_qs/0.15.0/download"],
        strip_prefix = "serde_qs-0.15.0",
        build_file = Label("//vendor/cargo:BUILD.serde_qs-0.15.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__serde_repr-0.1.20",
        sha256 = "175ee3e80ae9982737ca543e96133087cbd9a485eecc3bc4de9c1a37b47ea59c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/serde_repr/0.1.20/download"],
        strip_prefix = "serde_repr-0.1.20",
        build_file = Label("//vendor/cargo:BUILD.serde_repr-0.1.20.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__serde_spanned-0.6.9",
        sha256 = "bf41e0cfaf7226dca15e8197172c295a782857fcb97fad1808a166870dee75a3",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/serde_spanned/0.6.9/download"],
        strip_prefix = "serde_spanned-0.6.9",
        build_file = Label("//vendor/cargo:BUILD.serde_spanned-0.6.9.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__serde_spanned-1.0.0",
        sha256 = "40734c41988f7306bb04f0ecf60ec0f3f1caa34290e4e8ea471dcd3346483b83",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/serde_spanned/1.0.0/download"],
        strip_prefix = "serde_spanned-1.0.0",
        build_file = Label("//vendor/cargo:BUILD.serde_spanned-1.0.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__serde_urlencoded-0.7.1",
        sha256 = "d3491c14715ca2294c4d6a88f15e84739788c1d030eed8c110436aafdaa2f3fd",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/serde_urlencoded/0.7.1/download"],
        strip_prefix = "serde_urlencoded-0.7.1",
        build_file = Label("//vendor/cargo:BUILD.serde_urlencoded-0.7.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__serde_with-3.14.0",
        sha256 = "f2c45cd61fefa9db6f254525d46e392b852e0e61d9a1fd36e5bd183450a556d5",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/serde_with/3.14.0/download"],
        strip_prefix = "serde_with-3.14.0",
        build_file = Label("//vendor/cargo:BUILD.serde_with-3.14.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__serde_with_macros-3.14.0",
        sha256 = "de90945e6565ce0d9a25098082ed4ee4002e047cb59892c318d66821e14bb30f",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/serde_with_macros/3.14.0/download"],
        strip_prefix = "serde_with_macros-3.14.0",
        build_file = Label("//vendor/cargo:BUILD.serde_with_macros-3.14.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__servo_arc-0.4.1",
        sha256 = "204ea332803bd95a0b60388590d59cf6468ec9becf626e2451f1d26a1d972de4",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/servo_arc/0.4.1/download"],
        strip_prefix = "servo_arc-0.4.1",
        build_file = Label("//vendor/cargo:BUILD.servo_arc-0.4.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__sha1-0.10.6",
        sha256 = "e3bf829a2d51ab4a5ddf1352d8470c140cadc8301b2ae1789db023f01cedd6ba",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/sha1/0.10.6/download"],
        strip_prefix = "sha1-0.10.6",
        build_file = Label("//vendor/cargo:BUILD.sha1-0.10.6.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__sha2-0.10.9",
        sha256 = "a7507d819769d01a365ab707794a4084392c824f54a7a6a7862f8c3d0892b283",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/sha2/0.10.9/download"],
        strip_prefix = "sha2-0.10.9",
        build_file = Label("//vendor/cargo:BUILD.sha2-0.10.9.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__sha3-0.10.8",
        sha256 = "75872d278a8f37ef87fa0ddbda7802605cb18344497949862c0d4dcb291eba60",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/sha3/0.10.8/download"],
        strip_prefix = "sha3-0.10.8",
        build_file = Label("//vendor/cargo:BUILD.sha3-0.10.8.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__sharded-slab-0.1.7",
        sha256 = "f40ca3c46823713e0d4209592e8d6e826aa57e928f09752619fc696c499637f6",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/sharded-slab/0.1.7/download"],
        strip_prefix = "sharded-slab-0.1.7",
        build_file = Label("//vendor/cargo:BUILD.sharded-slab-0.1.7.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__shared_child-1.1.1",
        sha256 = "1e362d9935bc50f019969e2f9ecd66786612daae13e8f277be7bfb66e8bed3f7",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/shared_child/1.1.1/download"],
        strip_prefix = "shared_child-1.1.1",
        build_file = Label("//vendor/cargo:BUILD.shared_child-1.1.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__shared_thread-0.2.0",
        sha256 = "52b86057fcb5423f5018e331ac04623e32d6b5ce85e33300f92c79a1973928b0",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/shared_thread/0.2.0/download"],
        strip_prefix = "shared_thread-0.2.0",
        build_file = Label("//vendor/cargo:BUILD.shared_thread-0.2.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__shell-words-1.1.0",
        sha256 = "24188a676b6ae68c3b2cb3a01be17fbf7240ce009799bb56d5b1409051e78fde",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/shell-words/1.1.0/download"],
        strip_prefix = "shell-words-1.1.0",
        build_file = Label("//vendor/cargo:BUILD.shell-words-1.1.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__shlex-1.3.0",
        sha256 = "0fda2ff0d084019ba4d7c6f371c95d8fd75ce3524c3cb8fb653a3023f6323e64",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/shlex/1.3.0/download"],
        strip_prefix = "shlex-1.3.0",
        build_file = Label("//vendor/cargo:BUILD.shlex-1.3.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__sigchld-0.2.4",
        sha256 = "47106eded3c154e70176fc83df9737335c94ce22f821c32d17ed1db1f83badb1",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/sigchld/0.2.4/download"],
        strip_prefix = "sigchld-0.2.4",
        build_file = Label("//vendor/cargo:BUILD.sigchld-0.2.4.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__signal-hook-0.3.18",
        sha256 = "d881a16cf4426aa584979d30bd82cb33429027e42122b169753d6ef1085ed6e2",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/signal-hook/0.3.18/download"],
        strip_prefix = "signal-hook-0.3.18",
        build_file = Label("//vendor/cargo:BUILD.signal-hook-0.3.18.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__signal-hook-mio-0.2.4",
        sha256 = "34db1a06d485c9142248b7a054f034b349b212551f3dfd19c94d45a754a217cd",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/signal-hook-mio/0.2.4/download"],
        strip_prefix = "signal-hook-mio-0.2.4",
        build_file = Label("//vendor/cargo:BUILD.signal-hook-mio-0.2.4.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__signal-hook-registry-1.4.6",
        sha256 = "b2a4719bff48cee6b39d12c020eeb490953ad2443b7055bd0b21fca26bd8c28b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/signal-hook-registry/1.4.6/download"],
        strip_prefix = "signal-hook-registry-1.4.6",
        build_file = Label("//vendor/cargo:BUILD.signal-hook-registry-1.4.6.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__signature-2.2.0",
        sha256 = "77549399552de45a898a580c1b41d445bf730df867cc44e6c0233bbc4b8329de",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/signature/2.2.0/download"],
        strip_prefix = "signature-2.2.0",
        build_file = Label("//vendor/cargo:BUILD.signature-2.2.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__simd-adler32-0.3.7",
        sha256 = "d66dc143e6b11c1eddc06d5c423cfc97062865baf299914ab64caa38182078fe",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/simd-adler32/0.3.7/download"],
        strip_prefix = "simd-adler32-0.3.7",
        build_file = Label("//vendor/cargo:BUILD.simd-adler32-0.3.7.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__similar-2.7.0",
        sha256 = "bbbb5d9659141646ae647b42fe094daf6c6192d1620870b449d9557f748b2daa",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/similar/2.7.0/download"],
        strip_prefix = "similar-2.7.0",
        build_file = Label("//vendor/cargo:BUILD.similar-2.7.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__siphasher-1.0.1",
        sha256 = "56199f7ddabf13fe5074ce809e7d3f42b42ae711800501b5b16ea82ad029c39d",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/siphasher/1.0.1/download"],
        strip_prefix = "siphasher-1.0.1",
        build_file = Label("//vendor/cargo:BUILD.siphasher-1.0.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__slab-0.4.11",
        sha256 = "7a2ae44ef20feb57a68b23d846850f861394c2e02dc425a50098ae8c90267589",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/slab/0.4.11/download"],
        strip_prefix = "slab-0.4.11",
        build_file = Label("//vendor/cargo:BUILD.slab-0.4.11.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__smallvec-1.15.1",
        sha256 = "67b1b7a3b5fe4f1376887184045fcf45c69e92af734b7aaddc05fb777b6fbd03",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/smallvec/1.15.1/download"],
        strip_prefix = "smallvec-1.15.1",
        build_file = Label("//vendor/cargo:BUILD.smallvec-1.15.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__smart-default-0.7.1",
        sha256 = "0eb01866308440fc64d6c44d9e86c5cc17adfe33c4d6eed55da9145044d0ffc1",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/smart-default/0.7.1/download"],
        strip_prefix = "smart-default-0.7.1",
        build_file = Label("//vendor/cargo:BUILD.smart-default-0.7.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__smol_str-0.3.2",
        sha256 = "9676b89cd56310a87b93dec47b11af744f34d5fc9f367b829474eec0a891350d",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/smol_str/0.3.2/download"],
        strip_prefix = "smol_str-0.3.2",
        build_file = Label("//vendor/cargo:BUILD.smol_str-0.3.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__socket2-0.5.10",
        sha256 = "e22376abed350d73dd1cd119b57ffccad95b4e585a7cda43e286245ce23c0678",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/socket2/0.5.10/download"],
        strip_prefix = "socket2-0.5.10",
        build_file = Label("//vendor/cargo:BUILD.socket2-0.5.10.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__socket2-0.6.0",
        sha256 = "233504af464074f9d066d7b5416c5f9b894a5862a6506e306f7b816cdd6f1807",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/socket2/0.6.0/download"],
        strip_prefix = "socket2-0.6.0",
        build_file = Label("//vendor/cargo:BUILD.socket2-0.6.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__spin-0.10.0",
        sha256 = "d5fe4ccb98d9c292d56fec89a5e07da7fc4cf0dc11e156b41793132775d3e591",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/spin/0.10.0/download"],
        strip_prefix = "spin-0.10.0",
        build_file = Label("//vendor/cargo:BUILD.spin-0.10.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__spin-0.9.8",
        sha256 = "6980e8d7511241f8acf4aebddbb1ff938df5eebe98691418c4468d0b72a96a67",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/spin/0.9.8/download"],
        strip_prefix = "spin-0.9.8",
        build_file = Label("//vendor/cargo:BUILD.spin-0.9.8.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__spki-0.7.3",
        sha256 = "d91ed6c858b01f942cd56b37a94b3e0a1798290327d1236e4d9cf4eaca44d29d",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/spki/0.7.3/download"],
        strip_prefix = "spki-0.7.3",
        build_file = Label("//vendor/cargo:BUILD.spki-0.7.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__stable_deref_trait-1.2.0",
        sha256 = "a8f112729512f8e442d81f95a8a7ddf2b7c6b8a1a6f509a95864142b30cab2d3",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/stable_deref_trait/1.2.0/download"],
        strip_prefix = "stable_deref_trait-1.2.0",
        build_file = Label("//vendor/cargo:BUILD.stable_deref_trait-1.2.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__stacker-0.1.21",
        sha256 = "cddb07e32ddb770749da91081d8d0ac3a16f1a569a18b20348cd371f5dead06b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/stacker/0.1.21/download"],
        strip_prefix = "stacker-0.1.21",
        build_file = Label("//vendor/cargo:BUILD.stacker-0.1.21.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__static_assertions-1.1.0",
        sha256 = "a2eb9349b6444b326872e140eb1cf5e7c522154d69e7a0ffb0fb81c06b37543f",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/static_assertions/1.1.0/download"],
        strip_prefix = "static_assertions-1.1.0",
        build_file = Label("//vendor/cargo:BUILD.static_assertions-1.1.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__string_cache-0.8.9",
        sha256 = "bf776ba3fa74f83bf4b63c3dcbbf82173db2632ed8452cb2d891d33f459de70f",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/string_cache/0.8.9/download"],
        strip_prefix = "string_cache-0.8.9",
        build_file = Label("//vendor/cargo:BUILD.string_cache-0.8.9.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__stringprep-0.1.5",
        sha256 = "7b4df3d392d81bd458a8a621b8bffbd2302a12ffe288a9d931670948749463b1",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/stringprep/0.1.5/download"],
        strip_prefix = "stringprep-0.1.5",
        build_file = Label("//vendor/cargo:BUILD.stringprep-0.1.5.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__strip-ansi-escapes-0.2.1",
        sha256 = "2a8f8038e7e7969abb3f1b7c2a811225e9296da208539e0f79c5251d6cac0025",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/strip-ansi-escapes/0.2.1/download"],
        strip_prefix = "strip-ansi-escapes-0.2.1",
        build_file = Label("//vendor/cargo:BUILD.strip-ansi-escapes-0.2.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__strsim-0.11.1",
        sha256 = "7da8b5736845d9f2fcb837ea5d9e2628564b3b043a70948a3f0b778838c5fb4f",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/strsim/0.11.1/download"],
        strip_prefix = "strsim-0.11.1",
        build_file = Label("//vendor/cargo:BUILD.strsim-0.11.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__structmeta-0.3.0",
        sha256 = "2e1575d8d40908d70f6fd05537266b90ae71b15dbbe7a8b7dffa2b759306d329",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/structmeta/0.3.0/download"],
        strip_prefix = "structmeta-0.3.0",
        build_file = Label("//vendor/cargo:BUILD.structmeta-0.3.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__structmeta-derive-0.3.0",
        sha256 = "152a0b65a590ff6c3da95cabe2353ee04e6167c896b28e3b14478c2636c922fc",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/structmeta-derive/0.3.0/download"],
        strip_prefix = "structmeta-derive-0.3.0",
        build_file = Label("//vendor/cargo:BUILD.structmeta-derive-0.3.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__subtle-2.6.1",
        sha256 = "13c2bddecc57b384dee18652358fb23172facb8a2c51ccc10d74c157bdea3292",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/subtle/2.6.1/download"],
        strip_prefix = "subtle-2.6.1",
        build_file = Label("//vendor/cargo:BUILD.subtle-2.6.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__supports-unicode-3.0.0",
        sha256 = "b7401a30af6cb5818bb64852270bb722533397edcfc7344954a38f420819ece2",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/supports-unicode/3.0.0/download"],
        strip_prefix = "supports-unicode-3.0.0",
        build_file = Label("//vendor/cargo:BUILD.supports-unicode-3.0.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__swagger-ui-dist-5.29.0",
        sha256 = "4a1d35fef6e0315a7861af9c0ded8c09ffd08515fce14d953ac5f560fd3a6b7e",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/swagger-ui-dist/5.29.0/download"],
        strip_prefix = "swagger-ui-dist-5.29.0",
        build_file = Label("//vendor/cargo:BUILD.swagger-ui-dist-5.29.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__swrite-0.1.0",
        sha256 = "7f3fece30b2dc06d65ecbca97b602db15bf75f932711d60cc604534f1f8b7a03",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/swrite/0.1.0/download"],
        strip_prefix = "swrite-0.1.0",
        build_file = Label("//vendor/cargo:BUILD.swrite-0.1.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__symbolic-common-12.16.2",
        sha256 = "9da12f8fecbbeaa1ee62c1d50dc656407e007c3ee7b2a41afce4b5089eaef15e",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/symbolic-common/12.16.2/download"],
        strip_prefix = "symbolic-common-12.16.2",
        build_file = Label("//vendor/cargo:BUILD.symbolic-common-12.16.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__symbolic-demangle-12.16.2",
        sha256 = "6fd35afe0ef9d35d3dcd41c67ddf882fc832a387221338153b7cd685a105495c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/symbolic-demangle/12.16.2/download"],
        strip_prefix = "symbolic-demangle-12.16.2",
        build_file = Label("//vendor/cargo:BUILD.symbolic-demangle-12.16.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__syn-1.0.109",
        sha256 = "72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/syn/1.0.109/download"],
        strip_prefix = "syn-1.0.109",
        build_file = Label("//vendor/cargo:BUILD.syn-1.0.109.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__syn-2.0.106",
        sha256 = "ede7c438028d4436d71104916910f5bb611972c5cfd7f89b8300a8186e6fada6",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/syn/2.0.106/download"],
        strip_prefix = "syn-2.0.106",
        build_file = Label("//vendor/cargo:BUILD.syn-2.0.106.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__sync_wrapper-1.0.2",
        sha256 = "0bf256ce5efdfa370213c1dabab5935a12e49f2c58d15e9eac2870d3b4f27263",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/sync_wrapper/1.0.2/download"],
        strip_prefix = "sync_wrapper-1.0.2",
        build_file = Label("//vendor/cargo:BUILD.sync_wrapper-1.0.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__synstructure-0.13.2",
        sha256 = "728a70f3dbaf5bab7f0c4b1ac8d7ae5ea60a4b5549c8a5914361c99147a709d2",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/synstructure/0.13.2/download"],
        strip_prefix = "synstructure-0.13.2",
        build_file = Label("//vendor/cargo:BUILD.synstructure-0.13.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__tar-0.4.44",
        sha256 = "1d863878d212c87a19c1a610eb53bb01fe12951c0501cf5a0d65f724914a667a",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tar/0.4.44/download"],
        strip_prefix = "tar-0.4.44",
        build_file = Label("//vendor/cargo:BUILD.tar-0.4.44.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__target-lexicon-0.13.2",
        sha256 = "e502f78cdbb8ba4718f566c418c52bc729126ffd16baee5baa718cf25dd5a69a",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/target-lexicon/0.13.2/download"],
        strip_prefix = "target-lexicon-0.13.2",
        build_file = Label("//vendor/cargo:BUILD.target-lexicon-0.13.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__target-spec-3.5.0",
        sha256 = "53928b291de23967df6740f2e584bb68101890f63d730292c0a5205092c8e0fa",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/target-spec/3.5.0/download"],
        strip_prefix = "target-spec-3.5.0",
        build_file = Label("//vendor/cargo:BUILD.target-spec-3.5.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__target-spec-miette-0.4.4",
        sha256 = "41754f40e3eeb0f884fd2f6bd32835e611e5d1be8568af1c6313fde1dcb96c2e",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/target-spec-miette/0.4.4/download"],
        strip_prefix = "target-spec-miette-0.4.4",
        build_file = Label("//vendor/cargo:BUILD.target-spec-miette-0.4.4.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__target-triple-0.1.4",
        sha256 = "1ac9aa371f599d22256307c24a9d748c041e548cbf599f35d890f9d365361790",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/target-triple/0.1.4/download"],
        strip_prefix = "target-triple-0.1.4",
        build_file = Label("//vendor/cargo:BUILD.target-triple-0.1.4.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__tempfile-3.22.0",
        sha256 = "84fa4d11fadde498443cca10fd3ac23c951f0dc59e080e9f4b93d4df4e4eea53",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tempfile/3.22.0/download"],
        strip_prefix = "tempfile-3.22.0",
        build_file = Label("//vendor/cargo:BUILD.tempfile-3.22.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__term-1.2.0",
        sha256 = "2111ef44dae28680ae9752bb89409e7310ca33a8c621ebe7b106cf5c928b3ac0",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/term/1.2.0/download"],
        strip_prefix = "term-1.2.0",
        build_file = Label("//vendor/cargo:BUILD.term-1.2.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__termcolor-1.4.1",
        sha256 = "06794f8f6c5c898b3275aebefa6b8a1cb24cd2c6c79397ab15774837a0bc5755",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/termcolor/1.4.1/download"],
        strip_prefix = "termcolor-1.4.1",
        build_file = Label("//vendor/cargo:BUILD.termcolor-1.4.1.bazel"),
    )

    maybe(
        new_git_repository,
        name = "cargo_vendor__testcontainers-0.25.0",
        commit = "6d8e248a5637a3bb8ac0bb390717f6c327ffbad1",
        init_submodules = True,
        remote = "https://github.com/testcontainers/testcontainers-rs.git",
        build_file = Label("//vendor/cargo:BUILD.testcontainers-0.25.0.bazel"),
        strip_prefix = "testcontainers",
    )

    maybe(
        http_archive,
        name = "cargo_vendor__thiserror-1.0.69",
        sha256 = "b6aaf5339b578ea85b50e080feb250a3e8ae8cfcdff9a461c9ec2904bc923f52",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/thiserror/1.0.69/download"],
        strip_prefix = "thiserror-1.0.69",
        build_file = Label("//vendor/cargo:BUILD.thiserror-1.0.69.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__thiserror-2.0.16",
        sha256 = "3467d614147380f2e4e374161426ff399c91084acd2363eaf549172b3d5e60c0",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/thiserror/2.0.16/download"],
        strip_prefix = "thiserror-2.0.16",
        build_file = Label("//vendor/cargo:BUILD.thiserror-2.0.16.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__thiserror-impl-1.0.69",
        sha256 = "4fee6c4efc90059e10f81e6d42c60a18f76588c3d74cb83a0b242a2b6c7504c1",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/thiserror-impl/1.0.69/download"],
        strip_prefix = "thiserror-impl-1.0.69",
        build_file = Label("//vendor/cargo:BUILD.thiserror-impl-1.0.69.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__thiserror-impl-2.0.16",
        sha256 = "6c5e1be1c48b9172ee610da68fd9cd2770e7a4056cb3fc98710ee6906f0c7960",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/thiserror-impl/2.0.16/download"],
        strip_prefix = "thiserror-impl-2.0.16",
        build_file = Label("//vendor/cargo:BUILD.thiserror-impl-2.0.16.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__thread_local-1.1.9",
        sha256 = "f60246a4944f24f6e018aa17cdeffb7818b76356965d03b07d6a9886e8962185",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/thread_local/1.1.9/download"],
        strip_prefix = "thread_local-1.1.9",
        build_file = Label("//vendor/cargo:BUILD.thread_local-1.1.9.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__time-0.3.43",
        sha256 = "83bde6f1ec10e72d583d91623c939f623002284ef622b87de38cfd546cbf2031",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/time/0.3.43/download"],
        strip_prefix = "time-0.3.43",
        build_file = Label("//vendor/cargo:BUILD.time-0.3.43.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__time-core-0.1.6",
        sha256 = "40868e7c1d2f0b8d73e4a8c7f0ff63af4f6d19be117e90bd73eb1d62cf831c6b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/time-core/0.1.6/download"],
        strip_prefix = "time-core-0.1.6",
        build_file = Label("//vendor/cargo:BUILD.time-core-0.1.6.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__time-macros-0.2.24",
        sha256 = "30cfb0125f12d9c277f35663a0a33f8c30190f4e4574868a330595412d34ebf3",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/time-macros/0.2.24/download"],
        strip_prefix = "time-macros-0.2.24",
        build_file = Label("//vendor/cargo:BUILD.time-macros-0.2.24.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__tiny-keccak-2.0.2",
        sha256 = "2c9d3793400a45f954c52e73d068316d76b6f4e36977e3fcebb13a2721e80237",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tiny-keccak/2.0.2/download"],
        strip_prefix = "tiny-keccak-2.0.2",
        build_file = Label("//vendor/cargo:BUILD.tiny-keccak-2.0.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__tinystr-0.8.1",
        sha256 = "5d4f6d1145dcb577acf783d4e601bc1d76a13337bb54e6233add580b07344c8b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tinystr/0.8.1/download"],
        strip_prefix = "tinystr-0.8.1",
        build_file = Label("//vendor/cargo:BUILD.tinystr-0.8.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__tinytemplate-1.2.1",
        sha256 = "be4d6b5f19ff7664e8c98d03e2139cb510db9b0a60b55f8e8709b689d939b6bc",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tinytemplate/1.2.1/download"],
        strip_prefix = "tinytemplate-1.2.1",
        build_file = Label("//vendor/cargo:BUILD.tinytemplate-1.2.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__tinyvec-1.10.0",
        sha256 = "bfa5fdc3bce6191a1dbc8c02d5c8bffcf557bafa17c124c5264a458f1b0613fa",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tinyvec/1.10.0/download"],
        strip_prefix = "tinyvec-1.10.0",
        build_file = Label("//vendor/cargo:BUILD.tinyvec-1.10.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__tinyvec_macros-0.1.1",
        sha256 = "1f3ccbac311fea05f86f61904b462b55fb3df8837a366dfc601a0161d0532f20",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tinyvec_macros/0.1.1/download"],
        strip_prefix = "tinyvec_macros-0.1.1",
        build_file = Label("//vendor/cargo:BUILD.tinyvec_macros-0.1.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__tokio-1.47.1",
        sha256 = "89e49afdadebb872d3145a5638b59eb0691ea23e46ca484037cfab3b76b95038",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tokio/1.47.1/download"],
        strip_prefix = "tokio-1.47.1",
        build_file = Label("//vendor/cargo:BUILD.tokio-1.47.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__tokio-macros-2.5.0",
        sha256 = "6e06d43f1345a3bcd39f6a56dbb7dcab2ba47e68e8ac134855e7e2bdbaf8cab8",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tokio-macros/2.5.0/download"],
        strip_prefix = "tokio-macros-2.5.0",
        build_file = Label("//vendor/cargo:BUILD.tokio-macros-2.5.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__tokio-postgres-0.7.13",
        sha256 = "6c95d533c83082bb6490e0189acaa0bbeef9084e60471b696ca6988cd0541fb0",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tokio-postgres/0.7.13/download"],
        strip_prefix = "tokio-postgres-0.7.13",
        build_file = Label("//vendor/cargo:BUILD.tokio-postgres-0.7.13.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__tokio-rustls-0.26.2",
        sha256 = "8e727b36a1a0e8b74c376ac2211e40c2c8af09fb4013c60d910495810f008e9b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tokio-rustls/0.26.2/download"],
        strip_prefix = "tokio-rustls-0.26.2",
        build_file = Label("//vendor/cargo:BUILD.tokio-rustls-0.26.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__tokio-stream-0.1.17",
        sha256 = "eca58d7bba4a75707817a2c44174253f9236b2d5fbd055602e9d5c07c139a047",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tokio-stream/0.1.17/download"],
        strip_prefix = "tokio-stream-0.1.17",
        build_file = Label("//vendor/cargo:BUILD.tokio-stream-0.1.17.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__tokio-tar-0.3.1",
        sha256 = "9d5714c010ca3e5c27114c1cdeb9d14641ace49874aa5626d7149e47aedace75",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tokio-tar/0.3.1/download"],
        strip_prefix = "tokio-tar-0.3.1",
        build_file = Label("//vendor/cargo:BUILD.tokio-tar-0.3.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__tokio-test-0.4.4",
        sha256 = "2468baabc3311435b55dd935f702f42cd1b8abb7e754fb7dfb16bd36aa88f9f7",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tokio-test/0.4.4/download"],
        strip_prefix = "tokio-test-0.4.4",
        build_file = Label("//vendor/cargo:BUILD.tokio-test-0.4.4.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__tokio-tungstenite-0.26.2",
        sha256 = "7a9daff607c6d2bf6c16fd681ccb7eecc83e4e2cdc1ca067ffaadfca5de7f084",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tokio-tungstenite/0.26.2/download"],
        strip_prefix = "tokio-tungstenite-0.26.2",
        build_file = Label("//vendor/cargo:BUILD.tokio-tungstenite-0.26.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__tokio-util-0.7.16",
        sha256 = "14307c986784f72ef81c89db7d9e28d6ac26d16213b109ea501696195e6e3ce5",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tokio-util/0.7.16/download"],
        strip_prefix = "tokio-util-0.7.16",
        build_file = Label("//vendor/cargo:BUILD.tokio-util-0.7.16.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__toml-0.8.23",
        sha256 = "dc1beb996b9d83529a9e75c17a1686767d148d70663143c7854d8b4a09ced362",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/toml/0.8.23/download"],
        strip_prefix = "toml-0.8.23",
        build_file = Label("//vendor/cargo:BUILD.toml-0.8.23.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__toml-0.9.5",
        sha256 = "75129e1dc5000bfbaa9fee9d1b21f974f9fbad9daec557a521ee6e080825f6e8",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/toml/0.9.5/download"],
        strip_prefix = "toml-0.9.5",
        build_file = Label("//vendor/cargo:BUILD.toml-0.9.5.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__toml_datetime-0.6.11",
        sha256 = "22cddaf88f4fbc13c51aebbf5f8eceb5c7c5a9da2ac40a13519eb5b0a0e8f11c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/toml_datetime/0.6.11/download"],
        strip_prefix = "toml_datetime-0.6.11",
        build_file = Label("//vendor/cargo:BUILD.toml_datetime-0.6.11.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__toml_datetime-0.7.0",
        sha256 = "bade1c3e902f58d73d3f294cd7f20391c1cb2fbcb643b73566bc773971df91e3",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/toml_datetime/0.7.0/download"],
        strip_prefix = "toml_datetime-0.7.0",
        build_file = Label("//vendor/cargo:BUILD.toml_datetime-0.7.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__toml_edit-0.22.27",
        sha256 = "41fe8c660ae4257887cf66394862d21dbca4a6ddd26f04a3560410406a2f819a",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/toml_edit/0.22.27/download"],
        strip_prefix = "toml_edit-0.22.27",
        build_file = Label("//vendor/cargo:BUILD.toml_edit-0.22.27.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__toml_edit-0.23.4",
        sha256 = "7211ff1b8f0d3adae1663b7da9ffe396eabe1ca25f0b0bee42b0da29a9ddce93",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/toml_edit/0.23.4/download"],
        strip_prefix = "toml_edit-0.23.4",
        build_file = Label("//vendor/cargo:BUILD.toml_edit-0.23.4.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__toml_parser-1.0.2",
        sha256 = "b551886f449aa90d4fe2bdaa9f4a2577ad2dde302c61ecf262d80b116db95c10",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/toml_parser/1.0.2/download"],
        strip_prefix = "toml_parser-1.0.2",
        build_file = Label("//vendor/cargo:BUILD.toml_parser-1.0.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__toml_write-0.1.2",
        sha256 = "5d99f8c9a7727884afe522e9bd5edbfc91a3312b36a77b5fb8926e4c31a41801",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/toml_write/0.1.2/download"],
        strip_prefix = "toml_write-0.1.2",
        build_file = Label("//vendor/cargo:BUILD.toml_write-0.1.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__toml_writer-1.0.2",
        sha256 = "fcc842091f2def52017664b53082ecbbeb5c7731092bad69d2c63050401dfd64",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/toml_writer/1.0.2/download"],
        strip_prefix = "toml_writer-1.0.2",
        build_file = Label("//vendor/cargo:BUILD.toml_writer-1.0.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__tonic-0.14.2",
        sha256 = "eb7613188ce9f7df5bfe185db26c5814347d110db17920415cf2fbcad85e7203",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tonic/0.14.2/download"],
        strip_prefix = "tonic-0.14.2",
        build_file = Label("//vendor/cargo:BUILD.tonic-0.14.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__tonic-build-0.14.2",
        sha256 = "4c40aaccc9f9eccf2cd82ebc111adc13030d23e887244bc9cfa5d1d636049de3",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tonic-build/0.14.2/download"],
        strip_prefix = "tonic-build-0.14.2",
        build_file = Label("//vendor/cargo:BUILD.tonic-build-0.14.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__tonic-prost-0.14.2",
        sha256 = "66bd50ad6ce1252d87ef024b3d64fe4c3cf54a86fb9ef4c631fdd0ded7aeaa67",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tonic-prost/0.14.2/download"],
        strip_prefix = "tonic-prost-0.14.2",
        build_file = Label("//vendor/cargo:BUILD.tonic-prost-0.14.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__tonic-reflection-0.14.2",
        sha256 = "34da53e8387581d66db16ff01f98a70b426b091fdf76856e289d5c1bd386ed7b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tonic-reflection/0.14.2/download"],
        strip_prefix = "tonic-reflection-0.14.2",
        build_file = Label("//vendor/cargo:BUILD.tonic-reflection-0.14.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__tonic-types-0.14.2",
        sha256 = "37c8dfa7c722a8fb39faed16908397743dec84e8d331aa7a91ea9e40aaea457c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tonic-types/0.14.2/download"],
        strip_prefix = "tonic-types-0.14.2",
        build_file = Label("//vendor/cargo:BUILD.tonic-types-0.14.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__tonic-web-0.14.2",
        sha256 = "75214f6b6bd28c19aa752ac09fdf0eea546095670906c21fe3940e180a4c43f2",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tonic-web/0.14.2/download"],
        strip_prefix = "tonic-web-0.14.2",
        build_file = Label("//vendor/cargo:BUILD.tonic-web-0.14.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__totp-rs-5.7.0",
        sha256 = "f124352108f58ef88299e909f6e9470f1cdc8d2a1397963901b4a6366206bf72",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/totp-rs/5.7.0/download"],
        strip_prefix = "totp-rs-5.7.0",
        build_file = Label("//vendor/cargo:BUILD.totp-rs-5.7.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__tower-0.5.2",
        sha256 = "d039ad9159c98b70ecfd540b2573b97f7f52c3e8d9f8ad57a24b916a536975f9",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tower/0.5.2/download"],
        strip_prefix = "tower-0.5.2",
        build_file = Label("//vendor/cargo:BUILD.tower-0.5.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__tower-http-0.6.6",
        sha256 = "adc82fd73de2a9722ac5da747f12383d2bfdb93591ee6c58486e0097890f05f2",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tower-http/0.6.6/download"],
        strip_prefix = "tower-http-0.6.6",
        build_file = Label("//vendor/cargo:BUILD.tower-http-0.6.6.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__tower-layer-0.3.3",
        sha256 = "121c2a6cda46980bb0fcd1647ffaf6cd3fc79a013de288782836f6df9c48780e",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tower-layer/0.3.3/download"],
        strip_prefix = "tower-layer-0.3.3",
        build_file = Label("//vendor/cargo:BUILD.tower-layer-0.3.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__tower-service-0.3.3",
        sha256 = "8df9b6e13f2d32c91b9bd719c00d1958837bc7dec474d94952798cc8e69eeec3",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tower-service/0.3.3/download"],
        strip_prefix = "tower-service-0.3.3",
        build_file = Label("//vendor/cargo:BUILD.tower-service-0.3.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__tracing-0.1.41",
        sha256 = "784e0ac535deb450455cbfa28a6f0df145ea1bb7ae51b821cf5e7927fdcfbdd0",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tracing/0.1.41/download"],
        strip_prefix = "tracing-0.1.41",
        build_file = Label("//vendor/cargo:BUILD.tracing-0.1.41.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__tracing-attributes-0.1.30",
        sha256 = "81383ab64e72a7a8b8e13130c49e3dab29def6d0c7d76a03087b3cf71c5c6903",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tracing-attributes/0.1.30/download"],
        strip_prefix = "tracing-attributes-0.1.30",
        build_file = Label("//vendor/cargo:BUILD.tracing-attributes-0.1.30.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__tracing-core-0.1.34",
        sha256 = "b9d12581f227e93f094d3af2ae690a574abb8a2b9b7a96e7cfe9647b2b617678",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tracing-core/0.1.34/download"],
        strip_prefix = "tracing-core-0.1.34",
        build_file = Label("//vendor/cargo:BUILD.tracing-core-0.1.34.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__tracing-log-0.2.0",
        sha256 = "ee855f1f400bd0e5c02d150ae5de3840039a3f54b025156404e34c23c03f47c3",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tracing-log/0.2.0/download"],
        strip_prefix = "tracing-log-0.2.0",
        build_file = Label("//vendor/cargo:BUILD.tracing-log-0.2.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__tracing-opentelemetry-0.31.0",
        sha256 = "ddcf5959f39507d0d04d6413119c04f33b623f4f951ebcbdddddfad2d0623a9c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tracing-opentelemetry/0.31.0/download"],
        strip_prefix = "tracing-opentelemetry-0.31.0",
        build_file = Label("//vendor/cargo:BUILD.tracing-opentelemetry-0.31.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__tracing-subscriber-0.3.20",
        sha256 = "2054a14f5307d601f88daf0553e1cbf472acc4f2c51afab632431cdcd72124d5",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tracing-subscriber/0.3.20/download"],
        strip_prefix = "tracing-subscriber-0.3.20",
        build_file = Label("//vendor/cargo:BUILD.tracing-subscriber-0.3.20.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__tracing-test-0.2.5",
        sha256 = "557b891436fe0d5e0e363427fc7f217abf9ccd510d5136549847bdcbcd011d68",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tracing-test/0.2.5/download"],
        strip_prefix = "tracing-test-0.2.5",
        build_file = Label("//vendor/cargo:BUILD.tracing-test-0.2.5.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__tracing-test-macro-0.2.5",
        sha256 = "04659ddb06c87d233c566112c1c9c5b9e98256d9af50ec3bc9c8327f873a7568",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tracing-test-macro/0.2.5/download"],
        strip_prefix = "tracing-test-macro-0.2.5",
        build_file = Label("//vendor/cargo:BUILD.tracing-test-macro-0.2.5.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__try-lock-0.2.5",
        sha256 = "e421abadd41a4225275504ea4d6566923418b7f05506fbc9c0fe86ba7396114b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/try-lock/0.2.5/download"],
        strip_prefix = "try-lock-0.2.5",
        build_file = Label("//vendor/cargo:BUILD.try-lock-0.2.5.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__tungstenite-0.26.2",
        sha256 = "4793cb5e56680ecbb1d843515b23b6de9a75eb04b66643e256a396d43be33c13",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tungstenite/0.26.2/download"],
        strip_prefix = "tungstenite-0.26.2",
        build_file = Label("//vendor/cargo:BUILD.tungstenite-0.26.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__typed-arena-2.0.2",
        sha256 = "6af6ae20167a9ece4bcb41af5b80f8a1f1df981f6391189ce00fd257af04126a",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/typed-arena/2.0.2/download"],
        strip_prefix = "typed-arena-2.0.2",
        build_file = Label("//vendor/cargo:BUILD.typed-arena-2.0.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__typeid-1.0.3",
        sha256 = "bc7d623258602320d5c55d1bc22793b57daff0ec7efc270ea7d55ce1d5f5471c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/typeid/1.0.3/download"],
        strip_prefix = "typeid-1.0.3",
        build_file = Label("//vendor/cargo:BUILD.typeid-1.0.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__typenum-1.18.0",
        sha256 = "1dccffe3ce07af9386bfd29e80c0ab1a8205a2fc34e4bcd40364df902cfa8f3f",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/typenum/1.18.0/download"],
        strip_prefix = "typenum-1.18.0",
        build_file = Label("//vendor/cargo:BUILD.typenum-1.18.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__typewit-1.14.2",
        sha256 = "f8c1ae7cc0fdb8b842d65d127cb981574b0d2b249b74d1c7a2986863dc134f71",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/typewit/1.14.2/download"],
        strip_prefix = "typewit-1.14.2",
        build_file = Label("//vendor/cargo:BUILD.typewit-1.14.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__ucd-trie-0.1.7",
        sha256 = "2896d95c02a80c6d6a5d6e953d479f5ddf2dfdb6a244441010e373ac0fb88971",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/ucd-trie/0.1.7/download"],
        strip_prefix = "ucd-trie-0.1.7",
        build_file = Label("//vendor/cargo:BUILD.ucd-trie-0.1.7.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__ulid-1.2.1",
        sha256 = "470dbf6591da1b39d43c14523b2b469c86879a53e8b758c8e090a470fe7b1fbe",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/ulid/1.2.1/download"],
        strip_prefix = "ulid-1.2.1",
        build_file = Label("//vendor/cargo:BUILD.ulid-1.2.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__unicase-2.8.1",
        sha256 = "75b844d17643ee918803943289730bec8aac480150456169e647ed0b576ba539",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/unicase/2.8.1/download"],
        strip_prefix = "unicase-2.8.1",
        build_file = Label("//vendor/cargo:BUILD.unicase-2.8.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__unicode-bidi-0.3.18",
        sha256 = "5c1cb5db39152898a79168971543b1cb5020dff7fe43c8dc468b0885f5e29df5",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/unicode-bidi/0.3.18/download"],
        strip_prefix = "unicode-bidi-0.3.18",
        build_file = Label("//vendor/cargo:BUILD.unicode-bidi-0.3.18.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__unicode-ident-1.0.19",
        sha256 = "f63a545481291138910575129486daeaf8ac54aee4387fe7906919f7830c7d9d",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/unicode-ident/1.0.19/download"],
        strip_prefix = "unicode-ident-1.0.19",
        build_file = Label("//vendor/cargo:BUILD.unicode-ident-1.0.19.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__unicode-normalization-0.1.24",
        sha256 = "5033c97c4262335cded6d6fc3e5c18ab755e1a3dc96376350f3d8e9f009ad956",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/unicode-normalization/0.1.24/download"],
        strip_prefix = "unicode-normalization-0.1.24",
        build_file = Label("//vendor/cargo:BUILD.unicode-normalization-0.1.24.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__unicode-properties-0.1.3",
        sha256 = "e70f2a8b45122e719eb623c01822704c4e0907e7e426a05927e1a1cfff5b75d0",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/unicode-properties/0.1.3/download"],
        strip_prefix = "unicode-properties-0.1.3",
        build_file = Label("//vendor/cargo:BUILD.unicode-properties-0.1.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__unicode-script-0.5.7",
        sha256 = "9fb421b350c9aff471779e262955939f565ec18b86c15364e6bdf0d662ca7c1f",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/unicode-script/0.5.7/download"],
        strip_prefix = "unicode-script-0.5.7",
        build_file = Label("//vendor/cargo:BUILD.unicode-script-0.5.7.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__unicode-security-0.1.2",
        sha256 = "2e4ddba1535dd35ed8b61c52166b7155d7f4e4b8847cec6f48e71dc66d8b5e50",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/unicode-security/0.1.2/download"],
        strip_prefix = "unicode-security-0.1.2",
        build_file = Label("//vendor/cargo:BUILD.unicode-security-0.1.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__unicode-segmentation-1.12.0",
        sha256 = "f6ccf251212114b54433ec949fd6a7841275f9ada20dddd2f29e9ceea4501493",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/unicode-segmentation/1.12.0/download"],
        strip_prefix = "unicode-segmentation-1.12.0",
        build_file = Label("//vendor/cargo:BUILD.unicode-segmentation-1.12.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__unicode-width-0.1.14",
        sha256 = "7dd6e30e90baa6f72411720665d41d89b9a3d039dc45b8faea1ddd07f617f6af",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/unicode-width/0.1.14/download"],
        strip_prefix = "unicode-width-0.1.14",
        build_file = Label("//vendor/cargo:BUILD.unicode-width-0.1.14.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__unicode-width-0.2.1",
        sha256 = "4a1a07cc7db3810833284e8d372ccdc6da29741639ecc70c9ec107df0fa6154c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/unicode-width/0.2.1/download"],
        strip_prefix = "unicode-width-0.2.1",
        build_file = Label("//vendor/cargo:BUILD.unicode-width-0.2.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__unicode-xid-0.2.6",
        sha256 = "ebc1c04c71510c7f702b52b7c350734c9ff1295c464a03335b00bb84fc54f853",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/unicode-xid/0.2.6/download"],
        strip_prefix = "unicode-xid-0.2.6",
        build_file = Label("//vendor/cargo:BUILD.unicode-xid-0.2.6.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__unit-prefix-0.5.1",
        sha256 = "323402cff2dd658f39ca17c789b502021b3f18707c91cdf22e3838e1b4023817",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/unit-prefix/0.5.1/download"],
        strip_prefix = "unit-prefix-0.5.1",
        build_file = Label("//vendor/cargo:BUILD.unit-prefix-0.5.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__unsafe-libyaml-norway-0.2.15",
        sha256 = "b39abd59bf32521c7f2301b52d05a6a2c975b6003521cbd0c6dc1582f0a22104",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/unsafe-libyaml-norway/0.2.15/download"],
        strip_prefix = "unsafe-libyaml-norway-0.2.15",
        build_file = Label("//vendor/cargo:BUILD.unsafe-libyaml-norway-0.2.15.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__untrusted-0.9.0",
        sha256 = "8ecb6da28b8a351d773b68d5825ac39017e680750f980f3a1a85cd8dd28a47c1",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/untrusted/0.9.0/download"],
        strip_prefix = "untrusted-0.9.0",
        build_file = Label("//vendor/cargo:BUILD.untrusted-0.9.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__ureq-3.1.2",
        sha256 = "99ba1025f18a4a3fc3e9b48c868e9beb4f24f4b4b1a325bada26bd4119f46537",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/ureq/3.1.2/download"],
        strip_prefix = "ureq-3.1.2",
        build_file = Label("//vendor/cargo:BUILD.ureq-3.1.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__ureq-proto-0.5.2",
        sha256 = "60b4531c118335662134346048ddb0e54cc86bd7e81866757873055f0e38f5d2",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/ureq-proto/0.5.2/download"],
        strip_prefix = "ureq-proto-0.5.2",
        build_file = Label("//vendor/cargo:BUILD.ureq-proto-0.5.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__url-2.5.7",
        sha256 = "08bc136a29a3d1758e07a9cca267be308aeebf5cfd5a10f3f67ab2097683ef5b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/url/2.5.7/download"],
        strip_prefix = "url-2.5.7",
        build_file = Label("//vendor/cargo:BUILD.url-2.5.7.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__urlencoding-2.1.3",
        sha256 = "daf8dba3b7eb870caf1ddeed7bc9d2a049f3cfdfae7cb521b087cc33ae4c49da",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/urlencoding/2.1.3/download"],
        strip_prefix = "urlencoding-2.1.3",
        build_file = Label("//vendor/cargo:BUILD.urlencoding-2.1.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__utf-8-0.7.6",
        sha256 = "09cc8ee72d2a9becf2f2febe0205bbed8fc6615b7cb429ad062dc7b7ddd036a9",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/utf-8/0.7.6/download"],
        strip_prefix = "utf-8-0.7.6",
        build_file = Label("//vendor/cargo:BUILD.utf-8-0.7.6.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__utf8_iter-1.0.4",
        sha256 = "b6c140620e7ffbb22c2dee59cafe6084a59b5ffc27a8859a5f0d494b5d52b6be",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/utf8_iter/1.0.4/download"],
        strip_prefix = "utf8_iter-1.0.4",
        build_file = Label("//vendor/cargo:BUILD.utf8_iter-1.0.4.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__utf8parse-0.2.2",
        sha256 = "06abde3611657adf66d383f00b093d7faecc7fa57071cce2578660c9f1010821",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/utf8parse/0.2.2/download"],
        strip_prefix = "utf8parse-0.2.2",
        build_file = Label("//vendor/cargo:BUILD.utf8parse-0.2.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__uuid-1.18.1",
        sha256 = "2f87b8aa10b915a06587d0dec516c282ff295b475d94abf425d62b57710070a2",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/uuid/1.18.1/download"],
        strip_prefix = "uuid-1.18.1",
        build_file = Label("//vendor/cargo:BUILD.uuid-1.18.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__va_list-0.2.1",
        sha256 = "13275e7e3c4927837229a3ed716eb9ae0b589fb071499617533509b20d429428",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/va_list/0.2.1/download"],
        strip_prefix = "va_list-0.2.1",
        build_file = Label("//vendor/cargo:BUILD.va_list-0.2.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__vcpkg-0.2.15",
        sha256 = "accd4ea62f7bb7a82fe23066fb0957d48ef677f6eeb8215f372f52e48bb32426",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/vcpkg/0.2.15/download"],
        strip_prefix = "vcpkg-0.2.15",
        build_file = Label("//vendor/cargo:BUILD.vcpkg-0.2.15.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__version_check-0.9.5",
        sha256 = "0b928f33d975fc6ad9f86c8f283853ad26bdd5b10b7f1542aa2fa15e2289105a",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/version_check/0.9.5/download"],
        strip_prefix = "version_check-0.9.5",
        build_file = Label("//vendor/cargo:BUILD.version_check-0.9.5.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__vte-0.14.1",
        sha256 = "231fdcd7ef3037e8330d8e17e61011a2c244126acc0a982f4040ac3f9f0bc077",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/vte/0.14.1/download"],
        strip_prefix = "vte-0.14.1",
        build_file = Label("//vendor/cargo:BUILD.vte-0.14.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__walkdir-2.5.0",
        sha256 = "29790946404f91d9c5d06f9874efddea1dc06c5efe94541a7d6863108e3a5e4b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/walkdir/2.5.0/download"],
        strip_prefix = "walkdir-2.5.0",
        build_file = Label("//vendor/cargo:BUILD.walkdir-2.5.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__want-0.3.1",
        sha256 = "bfa7760aed19e106de2c7c0b581b509f2f25d3dacaf737cb82ac61bc6d760b0e",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/want/0.3.1/download"],
        strip_prefix = "want-0.3.1",
        build_file = Label("//vendor/cargo:BUILD.want-0.3.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__wasm-bindgen-0.2.101",
        sha256 = "7e14915cadd45b529bb8d1f343c4ed0ac1de926144b746e2710f9cd05df6603b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/wasm-bindgen/0.2.101/download"],
        strip_prefix = "wasm-bindgen-0.2.101",
        build_file = Label("//vendor/cargo:BUILD.wasm-bindgen-0.2.101.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__wasm-bindgen-backend-0.2.101",
        sha256 = "e28d1ba982ca7923fd01448d5c30c6864d0a14109560296a162f80f305fb93bb",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/wasm-bindgen-backend/0.2.101/download"],
        strip_prefix = "wasm-bindgen-backend-0.2.101",
        build_file = Label("//vendor/cargo:BUILD.wasm-bindgen-backend-0.2.101.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__wasm-bindgen-futures-0.4.51",
        sha256 = "0ca85039a9b469b38336411d6d6ced91f3fc87109a2a27b0c197663f5144dffe",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/wasm-bindgen-futures/0.4.51/download"],
        strip_prefix = "wasm-bindgen-futures-0.4.51",
        build_file = Label("//vendor/cargo:BUILD.wasm-bindgen-futures-0.4.51.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__wasm-bindgen-macro-0.2.101",
        sha256 = "7c3d463ae3eff775b0c45df9da45d68837702ac35af998361e2c84e7c5ec1b0d",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/wasm-bindgen-macro/0.2.101/download"],
        strip_prefix = "wasm-bindgen-macro-0.2.101",
        build_file = Label("//vendor/cargo:BUILD.wasm-bindgen-macro-0.2.101.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__wasm-bindgen-macro-support-0.2.101",
        sha256 = "7bb4ce89b08211f923caf51d527662b75bdc9c9c7aab40f86dcb9fb85ac552aa",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/wasm-bindgen-macro-support/0.2.101/download"],
        strip_prefix = "wasm-bindgen-macro-support-0.2.101",
        build_file = Label("//vendor/cargo:BUILD.wasm-bindgen-macro-support-0.2.101.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__wasm-bindgen-shared-0.2.101",
        sha256 = "f143854a3b13752c6950862c906306adb27c7e839f7414cec8fea35beab624c1",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/wasm-bindgen-shared/0.2.101/download"],
        strip_prefix = "wasm-bindgen-shared-0.2.101",
        build_file = Label("//vendor/cargo:BUILD.wasm-bindgen-shared-0.2.101.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__web-sys-0.3.78",
        sha256 = "77e4b637749ff0d92b8fad63aa1f7cff3cbe125fd49c175cd6345e7272638b12",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/web-sys/0.3.78/download"],
        strip_prefix = "web-sys-0.3.78",
        build_file = Label("//vendor/cargo:BUILD.web-sys-0.3.78.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__web-time-1.1.0",
        sha256 = "5a6580f308b1fad9207618087a65c04e7a10bc77e02c8e84e9b00dd4b12fa0bb",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/web-time/1.1.0/download"],
        strip_prefix = "web-time-1.1.0",
        build_file = Label("//vendor/cargo:BUILD.web-time-1.1.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__webauthn-attestation-ca-0.5.2",
        sha256 = "384e43534efe4e8f56c4eb1615a27e24d2ff29281385c843cf9f16ac1077dbdc",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/webauthn-attestation-ca/0.5.2/download"],
        strip_prefix = "webauthn-attestation-ca-0.5.2",
        build_file = Label("//vendor/cargo:BUILD.webauthn-attestation-ca-0.5.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__webauthn-rs-0.5.2",
        sha256 = "ed1f861a94557baeb0cf711e3e55d623c46b68f4aab7aa932562f785b8b5f1ab",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/webauthn-rs/0.5.2/download"],
        strip_prefix = "webauthn-rs-0.5.2",
        build_file = Label("//vendor/cargo:BUILD.webauthn-rs-0.5.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__webauthn-rs-core-0.5.2",
        sha256 = "269c210cd5f183aaca860bb5733187d1dd110ebed54640f8fc1aca31a04aa4dc",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/webauthn-rs-core/0.5.2/download"],
        strip_prefix = "webauthn-rs-core-0.5.2",
        build_file = Label("//vendor/cargo:BUILD.webauthn-rs-core-0.5.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__webauthn-rs-proto-0.5.2",
        sha256 = "144dbee9abb4bfad78fd283a2613f0312a0ed5955051b7864cfc98679112ae60",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/webauthn-rs-proto/0.5.2/download"],
        strip_prefix = "webauthn-rs-proto-0.5.2",
        build_file = Label("//vendor/cargo:BUILD.webauthn-rs-proto-0.5.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__webpki-root-certs-1.0.2",
        sha256 = "4e4ffd8df1c57e87c325000a3d6ef93db75279dc3a231125aac571650f22b12a",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/webpki-root-certs/1.0.2/download"],
        strip_prefix = "webpki-root-certs-1.0.2",
        build_file = Label("//vendor/cargo:BUILD.webpki-root-certs-1.0.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__webpki-roots-1.0.2",
        sha256 = "7e8983c3ab33d6fb807cfcdad2491c4ea8cbc8ed839181c7dfd9c67c83e261b2",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/webpki-roots/1.0.2/download"],
        strip_prefix = "webpki-roots-1.0.2",
        build_file = Label("//vendor/cargo:BUILD.webpki-roots-1.0.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__whoami-1.6.1",
        sha256 = "5d4a4db5077702ca3015d3d02d74974948aba2ad9e12ab7df718ee64ccd7e97d",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/whoami/1.6.1/download"],
        strip_prefix = "whoami-1.6.1",
        build_file = Label("//vendor/cargo:BUILD.whoami-1.6.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__win32job-2.0.3",
        sha256 = "8c6a6724ccfbf34154a8691bd868b0fcd2be2ca3f7b47b32614654f1a01b191c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/win32job/2.0.3/download"],
        strip_prefix = "win32job-2.0.3",
        build_file = Label("//vendor/cargo:BUILD.win32job-2.0.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__winapi-0.3.9",
        sha256 = "5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/winapi/0.3.9/download"],
        strip_prefix = "winapi-0.3.9",
        build_file = Label("//vendor/cargo:BUILD.winapi-0.3.9.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__winapi-util-0.1.11",
        sha256 = "c2a7b1c03c876122aa43f3020e6c3c3ee5c05081c9a00739faf7503aeba10d22",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/winapi-util/0.1.11/download"],
        strip_prefix = "winapi-util-0.1.11",
        build_file = Label("//vendor/cargo:BUILD.winapi-util-0.1.11.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__windows-0.61.3",
        sha256 = "9babd3a767a4c1aef6900409f85f5d53ce2544ccdfaa86dad48c91782c6d6893",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows/0.61.3/download"],
        strip_prefix = "windows-0.61.3",
        build_file = Label("//vendor/cargo:BUILD.windows-0.61.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__windows-collections-0.2.0",
        sha256 = "3beeceb5e5cfd9eb1d76b381630e82c4241ccd0d27f1a39ed41b2760b255c5e8",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows-collections/0.2.0/download"],
        strip_prefix = "windows-collections-0.2.0",
        build_file = Label("//vendor/cargo:BUILD.windows-collections-0.2.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__windows-core-0.61.2",
        sha256 = "c0fdd3ddb90610c7638aa2b3a3ab2904fb9e5cdbecc643ddb3647212781c4ae3",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows-core/0.61.2/download"],
        strip_prefix = "windows-core-0.61.2",
        build_file = Label("//vendor/cargo:BUILD.windows-core-0.61.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__windows-future-0.2.1",
        sha256 = "fc6a41e98427b19fe4b73c550f060b59fa592d7d686537eebf9385621bfbad8e",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows-future/0.2.1/download"],
        strip_prefix = "windows-future-0.2.1",
        build_file = Label("//vendor/cargo:BUILD.windows-future-0.2.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__windows-implement-0.60.0",
        sha256 = "a47fddd13af08290e67f4acabf4b459f647552718f683a7b415d290ac744a836",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows-implement/0.60.0/download"],
        strip_prefix = "windows-implement-0.60.0",
        build_file = Label("//vendor/cargo:BUILD.windows-implement-0.60.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__windows-interface-0.59.1",
        sha256 = "bd9211b69f8dcdfa817bfd14bf1c97c9188afa36f4750130fcdf3f400eca9fa8",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows-interface/0.59.1/download"],
        strip_prefix = "windows-interface-0.59.1",
        build_file = Label("//vendor/cargo:BUILD.windows-interface-0.59.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__windows-link-0.1.3",
        sha256 = "5e6ad25900d524eaabdbbb96d20b4311e1e7ae1699af4fb28c17ae66c80d798a",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows-link/0.1.3/download"],
        strip_prefix = "windows-link-0.1.3",
        build_file = Label("//vendor/cargo:BUILD.windows-link-0.1.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__windows-link-0.2.0",
        sha256 = "45e46c0661abb7180e7b9c281db115305d49ca1709ab8242adf09666d2173c65",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows-link/0.2.0/download"],
        strip_prefix = "windows-link-0.2.0",
        build_file = Label("//vendor/cargo:BUILD.windows-link-0.2.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__windows-numerics-0.2.0",
        sha256 = "9150af68066c4c5c07ddc0ce30421554771e528bde427614c61038bc2c92c2b1",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows-numerics/0.2.0/download"],
        strip_prefix = "windows-numerics-0.2.0",
        build_file = Label("//vendor/cargo:BUILD.windows-numerics-0.2.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__windows-result-0.3.4",
        sha256 = "56f42bd332cc6c8eac5af113fc0c1fd6a8fd2aa08a0119358686e5160d0586c6",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows-result/0.3.4/download"],
        strip_prefix = "windows-result-0.3.4",
        build_file = Label("//vendor/cargo:BUILD.windows-result-0.3.4.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__windows-strings-0.4.2",
        sha256 = "56e6c93f3a0c3b36176cb1327a4958a0353d5d166c2a35cb268ace15e91d3b57",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows-strings/0.4.2/download"],
        strip_prefix = "windows-strings-0.4.2",
        build_file = Label("//vendor/cargo:BUILD.windows-strings-0.4.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__windows-sys-0.52.0",
        sha256 = "282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows-sys/0.52.0/download"],
        strip_prefix = "windows-sys-0.52.0",
        build_file = Label("//vendor/cargo:BUILD.windows-sys-0.52.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__windows-sys-0.59.0",
        sha256 = "1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows-sys/0.59.0/download"],
        strip_prefix = "windows-sys-0.59.0",
        build_file = Label("//vendor/cargo:BUILD.windows-sys-0.59.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__windows-sys-0.60.2",
        sha256 = "f2f500e4d28234f72040990ec9d39e3a6b950f9f22d3dba18416c35882612bcb",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows-sys/0.60.2/download"],
        strip_prefix = "windows-sys-0.60.2",
        build_file = Label("//vendor/cargo:BUILD.windows-sys-0.60.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__windows-sys-0.61.0",
        sha256 = "e201184e40b2ede64bc2ea34968b28e33622acdbbf37104f0e4a33f7abe657aa",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows-sys/0.61.0/download"],
        strip_prefix = "windows-sys-0.61.0",
        build_file = Label("//vendor/cargo:BUILD.windows-sys-0.61.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__windows-targets-0.52.6",
        sha256 = "9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows-targets/0.52.6/download"],
        strip_prefix = "windows-targets-0.52.6",
        build_file = Label("//vendor/cargo:BUILD.windows-targets-0.52.6.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__windows-targets-0.53.3",
        sha256 = "d5fe6031c4041849d7c496a8ded650796e7b6ecc19df1a431c1a363342e5dc91",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows-targets/0.53.3/download"],
        strip_prefix = "windows-targets-0.53.3",
        build_file = Label("//vendor/cargo:BUILD.windows-targets-0.53.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__windows-threading-0.1.0",
        sha256 = "b66463ad2e0ea3bbf808b7f1d371311c80e115c0b71d60efc142cafbcfb057a6",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows-threading/0.1.0/download"],
        strip_prefix = "windows-threading-0.1.0",
        build_file = Label("//vendor/cargo:BUILD.windows-threading-0.1.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__windows_aarch64_msvc-0.52.6",
        sha256 = "09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows_aarch64_msvc/0.52.6/download"],
        strip_prefix = "windows_aarch64_msvc-0.52.6",
        build_file = Label("//vendor/cargo:BUILD.windows_aarch64_msvc-0.52.6.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__windows_aarch64_msvc-0.53.0",
        sha256 = "c7651a1f62a11b8cbd5e0d42526e55f2c99886c77e007179efff86c2b137e66c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows_aarch64_msvc/0.53.0/download"],
        strip_prefix = "windows_aarch64_msvc-0.53.0",
        build_file = Label("//vendor/cargo:BUILD.windows_aarch64_msvc-0.53.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__windows_x86_64_msvc-0.52.6",
        sha256 = "589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows_x86_64_msvc/0.52.6/download"],
        strip_prefix = "windows_x86_64_msvc-0.52.6",
        build_file = Label("//vendor/cargo:BUILD.windows_x86_64_msvc-0.52.6.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__windows_x86_64_msvc-0.53.0",
        sha256 = "271414315aff87387382ec3d271b52d7ae78726f5d44ac98b4f4030c91880486",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows_x86_64_msvc/0.53.0/download"],
        strip_prefix = "windows_x86_64_msvc-0.53.0",
        build_file = Label("//vendor/cargo:BUILD.windows_x86_64_msvc-0.53.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__winnow-0.7.13",
        sha256 = "21a0236b59786fed61e2a80582dd500fe61f18b5dca67a4a067d0bc9039339cf",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/winnow/0.7.13/download"],
        strip_prefix = "winnow-0.7.13",
        build_file = Label("//vendor/cargo:BUILD.winnow-0.7.13.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__writeable-0.6.1",
        sha256 = "ea2f10b9bb0928dfb1b42b65e1f9e36f7f54dbdf08457afefb38afcdec4fa2bb",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/writeable/0.6.1/download"],
        strip_prefix = "writeable-0.6.1",
        build_file = Label("//vendor/cargo:BUILD.writeable-0.6.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__x509-parser-0.16.0",
        sha256 = "fcbc162f30700d6f3f82a24bf7cc62ffe7caea42c0b2cba8bf7f3ae50cf51f69",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/x509-parser/0.16.0/download"],
        strip_prefix = "x509-parser-0.16.0",
        build_file = Label("//vendor/cargo:BUILD.x509-parser-0.16.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__xattr-1.5.1",
        sha256 = "af3a19837351dc82ba89f8a125e22a3c475f05aba604acc023d62b2739ae2909",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/xattr/1.5.1/download"],
        strip_prefix = "xattr-1.5.1",
        build_file = Label("//vendor/cargo:BUILD.xattr-1.5.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__xxhash-rust-0.8.15",
        sha256 = "fdd20c5420375476fbd4394763288da7eb0cc0b8c11deed431a91562af7335d3",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/xxhash-rust/0.8.15/download"],
        strip_prefix = "xxhash-rust-0.8.15",
        build_file = Label("//vendor/cargo:BUILD.xxhash-rust-0.8.15.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__yaml-rust2-0.10.3",
        sha256 = "4ce2a4ff45552406d02501cea6c18d8a7e50228e7736a872951fe2fe75c91be7",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/yaml-rust2/0.10.3/download"],
        strip_prefix = "yaml-rust2-0.10.3",
        build_file = Label("//vendor/cargo:BUILD.yaml-rust2-0.10.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__yoke-0.8.0",
        sha256 = "5f41bb01b8226ef4bfd589436a297c53d118f65921786300e427be8d487695cc",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/yoke/0.8.0/download"],
        strip_prefix = "yoke-0.8.0",
        build_file = Label("//vendor/cargo:BUILD.yoke-0.8.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__yoke-derive-0.8.0",
        sha256 = "38da3c9736e16c5d3c8c597a9aaa5d1fa565d0532ae05e27c24aa62fb32c0ab6",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/yoke-derive/0.8.0/download"],
        strip_prefix = "yoke-derive-0.8.0",
        build_file = Label("//vendor/cargo:BUILD.yoke-derive-0.8.0.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__zerocopy-0.8.27",
        sha256 = "0894878a5fa3edfd6da3f88c4805f4c8558e2b996227a3d864f47fe11e38282c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/zerocopy/0.8.27/download"],
        strip_prefix = "zerocopy-0.8.27",
        build_file = Label("//vendor/cargo:BUILD.zerocopy-0.8.27.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__zerofrom-0.1.6",
        sha256 = "50cc42e0333e05660c3587f3bf9d0478688e15d870fab3346451ce7f8c9fbea5",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/zerofrom/0.1.6/download"],
        strip_prefix = "zerofrom-0.1.6",
        build_file = Label("//vendor/cargo:BUILD.zerofrom-0.1.6.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__zerofrom-derive-0.1.6",
        sha256 = "d71e5d6e06ab090c67b5e44993ec16b72dcbaabc526db883a360057678b48502",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/zerofrom-derive/0.1.6/download"],
        strip_prefix = "zerofrom-derive-0.1.6",
        build_file = Label("//vendor/cargo:BUILD.zerofrom-derive-0.1.6.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__zeroize-1.8.1",
        sha256 = "ced3678a2879b30306d323f4542626697a464a97c0a07c9aebf7ebca65cd4dde",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/zeroize/1.8.1/download"],
        strip_prefix = "zeroize-1.8.1",
        build_file = Label("//vendor/cargo:BUILD.zeroize-1.8.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__zerotrie-0.2.2",
        sha256 = "36f0bbd478583f79edad978b407914f61b2972f5af6fa089686016be8f9af595",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/zerotrie/0.2.2/download"],
        strip_prefix = "zerotrie-0.2.2",
        build_file = Label("//vendor/cargo:BUILD.zerotrie-0.2.2.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__zerovec-0.11.4",
        sha256 = "e7aa2bd55086f1ab526693ecbe444205da57e25f4489879da80635a46d90e73b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/zerovec/0.11.4/download"],
        strip_prefix = "zerovec-0.11.4",
        build_file = Label("//vendor/cargo:BUILD.zerovec-0.11.4.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__zerovec-derive-0.11.1",
        sha256 = "5b96237efa0c878c64bd89c436f661be4e46b2f3eff1ebb976f7ef2321d2f58f",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/zerovec-derive/0.11.1/download"],
        strip_prefix = "zerovec-derive-0.11.1",
        build_file = Label("//vendor/cargo:BUILD.zerovec-derive-0.11.1.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__zstd-0.13.3",
        sha256 = "e91ee311a569c327171651566e07972200e76fcfe2242a4fa446149a3881c08a",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/zstd/0.13.3/download"],
        strip_prefix = "zstd-0.13.3",
        build_file = Label("//vendor/cargo:BUILD.zstd-0.13.3.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__zstd-safe-7.2.4",
        sha256 = "8f49c4d5f0abb602a93fb8736af2a4f4dd9512e36f7f570d66e65ff867ed3b9d",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/zstd-safe/7.2.4/download"],
        strip_prefix = "zstd-safe-7.2.4",
        build_file = Label("//vendor/cargo:BUILD.zstd-safe-7.2.4.bazel"),
    )

    maybe(
        http_archive,
        name = "cargo_vendor__zstd-sys-2.0.16-zstd.1.5.7",
        sha256 = "91e19ebc2adc8f83e43039e79776e3fda8ca919132d68a1fed6a5faca2683748",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/zstd-sys/2.0.16+zstd.1.5.7/download"],
        strip_prefix = "zstd-sys-2.0.16+zstd.1.5.7",
        build_file = Label("//vendor/cargo:BUILD.zstd-sys-2.0.16+zstd.1.5.7.bazel"),
    )

    return [
        struct(repo = "cargo_vendor__aliasable-0.1.3", is_dev_dep = False),
        struct(repo = "cargo_vendor__anyhow-1.0.99", is_dev_dep = False),
        struct(repo = "cargo_vendor__arc-swap-1.7.1", is_dev_dep = False),
        struct(repo = "cargo_vendor__argon2-0.5.3", is_dev_dep = False),
        struct(repo = "cargo_vendor__async-trait-0.1.89", is_dev_dep = False),
        struct(repo = "cargo_vendor__axum-0.8.4", is_dev_dep = False),
        struct(repo = "cargo_vendor__base64-0.22.1", is_dev_dep = False),
        struct(repo = "cargo_vendor__bitflags-2.9.4", is_dev_dep = False),
        struct(repo = "cargo_vendor__bitmask-enum-2.2.5", is_dev_dep = False),
        struct(repo = "cargo_vendor__bon-3.7.2", is_dev_dep = False),
        struct(repo = "cargo_vendor__byteorder-1.5.0", is_dev_dep = False),
        struct(repo = "cargo_vendor__bytes-1.10.1", is_dev_dep = False),
        struct(repo = "cargo_vendor__bytestring-1.4.0", is_dev_dep = False),
        struct(repo = "cargo_vendor__camino-1.1.12", is_dev_dep = False),
        struct(repo = "cargo_vendor__camino-tempfile-1.4.1", is_dev_dep = False),
        struct(repo = "cargo_vendor__cargo-manifest-0.19.1", is_dev_dep = False),
        struct(repo = "cargo_vendor__cargo-platform-0.2.0", is_dev_dep = False),
        struct(repo = "cargo_vendor__cargo_metadata-0.21.0", is_dev_dep = False),
        struct(repo = "cargo_vendor__cargo_toml-0.22.3", is_dev_dep = False),
        struct(repo = "cargo_vendor__cedar-policy-4.5.1", is_dev_dep = False),
        struct(repo = "cargo_vendor__cedar-policy-core-4.5.1", is_dev_dep = False),
        struct(repo = "cargo_vendor__cel-parser-0.8.1", is_dev_dep = False),
        struct(repo = "cargo_vendor__chrono-0.4.42", is_dev_dep = False),
        struct(repo = "cargo_vendor__clap-4.5.47", is_dev_dep = False),
        struct(repo = "cargo_vendor__config-0.15.15", is_dev_dep = False),
        struct(repo = "cargo_vendor__console-0.16.1", is_dev_dep = False),
        struct(repo = "cargo_vendor__const_panic-0.2.15", is_dev_dep = False),
        struct(repo = "cargo_vendor__convert_case-0.8.0", is_dev_dep = False),
        struct(repo = "cargo_vendor__copy_dir-0.1.3", is_dev_dep = False),
        struct(repo = "cargo_vendor__crossbeam-channel-0.5.15", is_dev_dep = False),
        struct(repo = "cargo_vendor__darling-0.21.3", is_dev_dep = False),
        struct(repo = "cargo_vendor__derive_more-2.0.1", is_dev_dep = False),
        struct(repo = "cargo_vendor__diesel-2.2.12", is_dev_dep = False),
        struct(repo = "cargo_vendor__diesel-async-0.6.1", is_dev_dep = False),
        struct(repo = "cargo_vendor__document-features-0.2.11", is_dev_dep = False),
        struct(repo = "cargo_vendor__email_address-0.2.9", is_dev_dep = False),
        struct(repo = "cargo_vendor__env_logger-0.10.2", is_dev_dep = False),
        struct(repo = "cargo_vendor__env_logger-0.11.8", is_dev_dep = False),
        struct(repo = "cargo_vendor__fixed-1.29.0", is_dev_dep = False),
        struct(repo = "cargo_vendor__flate2-1.1.2", is_dev_dep = False),
        struct(repo = "cargo_vendor__float-cmp-0.10.0", is_dev_dep = False),
        struct(repo = "cargo_vendor__fmtools-0.1.2", is_dev_dep = False),
        struct(repo = "cargo_vendor__fred-10.1.0", is_dev_dep = False),
        struct(repo = "cargo_vendor__futures-0.3.31", is_dev_dep = False),
        struct(repo = "cargo_vendor__futures-lite-2.6.1", is_dev_dep = False),
        struct(repo = "cargo_vendor__glob-0.3.3", is_dev_dep = False),
        struct(repo = "cargo_vendor__guppy-0.17.20", is_dev_dep = False),
        struct(repo = "cargo_vendor__h3-0.0.8", is_dev_dep = False),
        struct(repo = "cargo_vendor__h3-quinn-0.0.10", is_dev_dep = False),
        struct(repo = "cargo_vendor__heck-0.5.0", is_dev_dep = False),
        struct(repo = "cargo_vendor__hex-0.4.3", is_dev_dep = False),
        struct(repo = "cargo_vendor__hmac-0.12.1", is_dev_dep = False),
        struct(repo = "cargo_vendor__home-0.5.11", is_dev_dep = False),
        struct(repo = "cargo_vendor__http-1.3.1", is_dev_dep = False),
        struct(repo = "cargo_vendor__http-body-1.0.1", is_dev_dep = False),
        struct(repo = "cargo_vendor__http-body-util-0.1.3", is_dev_dep = False),
        struct(repo = "cargo_vendor__hyper-1.7.0", is_dev_dep = False),
        struct(repo = "cargo_vendor__hyper-util-0.1.16", is_dev_dep = False),
        struct(repo = "cargo_vendor__indent_write-2.2.0", is_dev_dep = False),
        struct(repo = "cargo_vendor__indexmap-2.11.1", is_dev_dep = False),
        struct(repo = "cargo_vendor__ipnetwork-0.21.1", is_dev_dep = False),
        struct(repo = "cargo_vendor__is_empty-0.3.0", is_dev_dep = False),
        struct(repo = "cargo_vendor__itertools-0.14.0", is_dev_dep = False),
        struct(repo = "cargo_vendor__konst-0.4.2", is_dev_dep = False),
        struct(repo = "cargo_vendor__libc-0.2.175", is_dev_dep = False),
        struct(repo = "cargo_vendor__linear-map-1.2.0", is_dev_dep = False),
        struct(repo = "cargo_vendor__linkme-0.3.33", is_dev_dep = False),
        struct(repo = "cargo_vendor__log-0.4.28", is_dev_dep = False),
        struct(repo = "cargo_vendor__lol_html-2.6.0", is_dev_dep = False),
        struct(repo = "cargo_vendor__mail-builder-0.4.4", is_dev_dep = False),
        struct(repo = "cargo_vendor__maxminddb-0.26.0", is_dev_dep = False),
        struct(repo = "cargo_vendor__mediatype-0.20.0", is_dev_dep = False),
        struct(repo = "cargo_vendor__minijinja-2.12.0", is_dev_dep = False),
        struct(repo = "cargo_vendor__nextest-filtering-0.16.0", is_dev_dep = False),
        struct(repo = "cargo_vendor__nextest-metadata-0.12.2", is_dev_dep = False),
        struct(repo = "cargo_vendor__nextest-runner-0.85.0", is_dev_dep = False),
        struct(repo = "cargo_vendor__num-derive-0.4.2", is_dev_dep = False),
        struct(repo = "cargo_vendor__num-traits-0.2.19", is_dev_dep = False),
        struct(repo = "cargo_vendor__num_cpus-1.17.0", is_dev_dep = False),
        struct(repo = "cargo_vendor__opentelemetry-0.30.0", is_dev_dep = False),
        struct(repo = "cargo_vendor__opentelemetry-appender-tracing-0.30.1", is_dev_dep = False),
        struct(repo = "cargo_vendor__opentelemetry_sdk-0.30.0", is_dev_dep = False),
        struct(repo = "cargo_vendor__ordered-float-5.0.0", is_dev_dep = False),
        struct(repo = "cargo_vendor__parking_lot-0.12.4", is_dev_dep = False),
        struct(repo = "cargo_vendor__paste-1.0.15", is_dev_dep = False),
        struct(repo = "cargo_vendor__pin-project-lite-0.2.16", is_dev_dep = False),
        struct(repo = "cargo_vendor__pkcs8-0.10.2", is_dev_dep = False),
        struct(repo = "cargo_vendor__pprof-0.15.0", is_dev_dep = False),
        struct(repo = "cargo_vendor__prettyplease-0.2.37", is_dev_dep = False),
        struct(repo = "cargo_vendor__proc-macro2-1.0.101", is_dev_dep = False),
        struct(repo = "cargo_vendor__prometheus-client-0.23.1", is_dev_dep = False),
        struct(repo = "cargo_vendor__prost-0.14.1", is_dev_dep = False),
        struct(repo = "cargo_vendor__prost-build-0.14.1", is_dev_dep = False),
        struct(repo = "cargo_vendor__prost-reflect-0.16.1", is_dev_dep = False),
        struct(repo = "cargo_vendor__prost-types-0.14.1", is_dev_dep = False),
        struct(repo = "cargo_vendor__pulldown-cmark-0.13.0", is_dev_dep = False),
        struct(repo = "cargo_vendor__pulldown-cmark-to-cmark-21.0.0", is_dev_dep = False),
        struct(repo = "cargo_vendor__querystring-1.1.0", is_dev_dep = False),
        struct(repo = "cargo_vendor__quinn-0.11.9", is_dev_dep = False),
        struct(repo = "cargo_vendor__quote-1.0.40", is_dev_dep = False),
        struct(repo = "cargo_vendor__rand-0.8.5", is_dev_dep = False),
        struct(repo = "cargo_vendor__rand-0.9.2", is_dev_dep = False),
        struct(repo = "cargo_vendor__regex-1.11.2", is_dev_dep = False),
        struct(repo = "cargo_vendor__reqsign-0.17.0", is_dev_dep = False),
        struct(repo = "cargo_vendor__reqwest-0.12.23", is_dev_dep = False),
        struct(repo = "cargo_vendor__rsa-0.9.8", is_dev_dep = False),
        struct(repo = "cargo_vendor__runtime-format-0.1.3", is_dev_dep = False),
        struct(repo = "cargo_vendor__rustdoc-types-0.55.0", is_dev_dep = False),
        struct(repo = "cargo_vendor__rustfix-0.9.1", is_dev_dep = False),
        struct(repo = "cargo_vendor__rustls-0.23.32", is_dev_dep = False),
        struct(repo = "cargo_vendor__rusty_ffmpeg-0.16.7-ffmpeg.8", is_dev_dep = False),
        struct(repo = "cargo_vendor__sailfish-0.10.0", is_dev_dep = False),
        struct(repo = "cargo_vendor__sailfish-macros-0.10.0", is_dev_dep = False),
        struct(repo = "cargo_vendor__semver-1.0.26", is_dev_dep = False),
        struct(repo = "cargo_vendor__serde-1.0.220", is_dev_dep = False),
        struct(repo = "cargo_vendor__serde_derive-1.0.220", is_dev_dep = False),
        struct(repo = "cargo_vendor__serde_json-1.0.145", is_dev_dep = False),
        struct(repo = "cargo_vendor__serde_norway-0.9.42", is_dev_dep = False),
        struct(repo = "cargo_vendor__serde_qs-0.15.0", is_dev_dep = False),
        struct(repo = "cargo_vendor__serde_repr-0.1.20", is_dev_dep = False),
        struct(repo = "cargo_vendor__sha2-0.10.9", is_dev_dep = False),
        struct(repo = "cargo_vendor__similar-2.7.0", is_dev_dep = False),
        struct(repo = "cargo_vendor__smart-default-0.7.1", is_dev_dep = False),
        struct(repo = "cargo_vendor__smol_str-0.3.2", is_dev_dep = False),
        struct(repo = "cargo_vendor__swagger-ui-dist-5.29.0", is_dev_dep = False),
        struct(repo = "cargo_vendor__syn-2.0.106", is_dev_dep = False),
        struct(repo = "cargo_vendor__target-spec-3.5.0", is_dev_dep = False),
        struct(repo = "cargo_vendor__target-triple-0.1.4", is_dev_dep = False),
        struct(repo = "cargo_vendor__testcontainers-0.25.0", is_dev_dep = False),
        struct(repo = "cargo_vendor__thiserror-2.0.16", is_dev_dep = False),
        struct(repo = "cargo_vendor__tokio-1.47.1", is_dev_dep = False),
        struct(repo = "cargo_vendor__tokio-rustls-0.26.2", is_dev_dep = False),
        struct(repo = "cargo_vendor__tokio-util-0.7.16", is_dev_dep = False),
        struct(repo = "cargo_vendor__toml-0.9.5", is_dev_dep = False),
        struct(repo = "cargo_vendor__toml_edit-0.22.27", is_dev_dep = False),
        struct(repo = "cargo_vendor__toml_edit-0.23.4", is_dev_dep = False),
        struct(repo = "cargo_vendor__tonic-0.14.2", is_dev_dep = False),
        struct(repo = "cargo_vendor__tonic-build-0.14.2", is_dev_dep = False),
        struct(repo = "cargo_vendor__tonic-prost-0.14.2", is_dev_dep = False),
        struct(repo = "cargo_vendor__tonic-reflection-0.14.2", is_dev_dep = False),
        struct(repo = "cargo_vendor__tonic-types-0.14.2", is_dev_dep = False),
        struct(repo = "cargo_vendor__tonic-web-0.14.2", is_dev_dep = False),
        struct(repo = "cargo_vendor__totp-rs-5.7.0", is_dev_dep = False),
        struct(repo = "cargo_vendor__tower-0.5.2", is_dev_dep = False),
        struct(repo = "cargo_vendor__tower-http-0.6.6", is_dev_dep = False),
        struct(repo = "cargo_vendor__tower-layer-0.3.3", is_dev_dep = False),
        struct(repo = "cargo_vendor__tower-service-0.3.3", is_dev_dep = False),
        struct(repo = "cargo_vendor__tracing-0.1.41", is_dev_dep = False),
        struct(repo = "cargo_vendor__tracing-opentelemetry-0.31.0", is_dev_dep = False),
        struct(repo = "cargo_vendor__tracing-subscriber-0.3.20", is_dev_dep = False),
        struct(repo = "cargo_vendor__ulid-1.2.1", is_dev_dep = False),
        struct(repo = "cargo_vendor__url-2.5.7", is_dev_dep = False),
        struct(repo = "cargo_vendor__urlencoding-2.1.3", is_dev_dep = False),
        struct(repo = "cargo_vendor__uuid-1.18.1", is_dev_dep = False),
        struct(repo = "cargo_vendor__va_list-0.2.1", is_dev_dep = False),
        struct(repo = "cargo_vendor__walkdir-2.5.0", is_dev_dep = False),
        struct(repo = "cargo_vendor__webauthn-rs-0.5.2", is_dev_dep = False),
        struct(repo = "cargo_vendor__criterion-0.7.0", is_dev_dep = True),
        struct(repo = "cargo_vendor__insta-1.43.2", is_dev_dep = True),
        struct(repo = "cargo_vendor__opentelemetry-stdout-0.30.0", is_dev_dep = True),
        struct(repo = "cargo_vendor__rustls-pemfile-2.2.0", is_dev_dep = True),
        struct(repo = "cargo_vendor__tempfile-3.22.0", is_dev_dep = True),
        struct(repo = "cargo_vendor__tokio-stream-0.1.17", is_dev_dep = True),
        struct(repo = "cargo_vendor__tokio-test-0.4.4", is_dev_dep = True),
        struct(repo = "cargo_vendor__tracing-test-0.2.5", is_dev_dep = True),
    ]
